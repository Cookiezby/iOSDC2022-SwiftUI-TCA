{
    "proposals": [
        {
            "uuid": "f0b7cbcf-a597-4e1e-8895-db16fb3d0655",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f0b7cbcf-a597-4e1e-8895-db16fb3d0655",
            "title": "Core ML Toolsにコミットしつつ、Pytorch製深層学習モデルをCore MLで動かそう",
            "abstract": "モノグサ株式会社では記憶アプリMonoxerを開発・リリースしています。\r\niOS版のMonoxerで深層学習モデルを使うために、Core ML Toolsを使ってPytorch製のモデルをCore MLで動作するモデルにコンバートする必要がありました。\r\nCore ML Toolsを使ってみるとわかりづらいポイントや、モデルが未サポートの演算を含んでおりモデルをコンバートできないといったことがありました。\r\nそこでこのトークでは、Core ML Toolsをスムーズに使う方法や未サポートの演算をどうすればサポートできるかをシェアします。\r\n - Core ML \/ Core ML Toolsの概要\r\n - Core ML Toolsの基本的な使い方\r\n - Core ML Toolsがうまく動かなかった時\r\n - Core ML Toolsに未サポートの演算を追加するには",
            "accepted": false,
            "speaker": {
                "name": "深谷",
                "kana": "フカタニ",
                "twitter": "fukafukatani",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6c6d18f5-4558-48a7-9de3-9e7a96b7e75e.jpg"
            },
            "created": "2022-05-13T17:10:02+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "bf42ca20-8dae-4cbe-88d2-cb8dd4ce8536",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/bf42ca20-8dae-4cbe-88d2-cb8dd4ce8536",
            "title": "広まれSafari Web Extensions！Safari Web Extensions の始め方",
            "abstract": "iOS 15 から Safari の拡張機能である Safari Web Extensions の開発が出来るようになりました。\r\nすでに素晴らしい拡張機能がいつかかリリースされているものの、まだまだその数が少ないように感じます。\r\nそこで今回は Safari Web Extensions の開発が広まるように、その始め方を紹介します。\r\n具体的には、Safari Extension App のテンプレートの中身を解説しつつ、ある要素をHTMLから削除する拡張機能を作るまでの手順を紹介します。\r\nSafari Web Extensions の持つ可能性を感じて頂ければと思います。",
            "accepted": true,
            "speaker": {
                "name": "matsue",
                "kana": "マツエ",
                "twitter": "base_front",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/f10291c4-dee2-48ca-b4a7-cabe9d239856.jpg"
            },
            "created": "2022-05-14T11:42:39+09:00",
            "timetable": {
                "track": "Track E",
                "starts_at": "2022-09-10T18:45:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "d824fc5d-191a-4864-899a-339d830ed182",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/d824fc5d-191a-4864-899a-339d830ed182",
            "title": "SwiftUI in UIKit で開発する世界",
            "abstract": "【概要】\r\nSwiftUIが登場してから３年が経とうとしています。\r\n\r\n古いOS対応もあり、すぐに導入できなかったアプリも多かったでしょう。\r\nそんな中、新規のアプリを全てSwiftUIで構成した例も増えてきました。\r\n\r\nしかし、現実問題として既存の多くのアプリはUIKitで構成されています。\r\nこの資産を活かしつつ、どのようにSwiftUIと歩んでいくのかを考えていく必要があります。\r\n\r\n今回はそんな悩みを抱えつつ、私達のプロダクトで行なってきた共存の仕方をご紹介していきます。\r\n\r\n【目次】\r\n1.SwiftUIとUIKit\r\n-SwiftUIの強みと弱み\r\n-実装判断の基準\r\n-責務の分け方\r\n\r\n2.アーキテクチャー\r\n-既存のアーキテクチャー\r\n-SwiftUIとUIKitのアーキテクチャー共存\r\n\r\n3.課題\r\n-共存の向き・不向き\r\n-車輪の再発明\r\n-実装において注意すべき点\r\n\r\n※内容が前後する可能性があります",
            "accepted": true,
            "speaker": {
                "name": "Hiromu Tsuruta",
                "kana": "ヒロム ツルタ",
                "twitter": "hcrane14",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7f77375e-4ae8-44bd-aa84-e57f1d95d7b0.jpg"
            },
            "created": "2022-05-16T10:28:54+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-12T10:50:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "315d1c2b-c177-4e27-b95c-ea25d16ab584",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/315d1c2b-c177-4e27-b95c-ea25d16ab584",
            "title": "みんなが幸せになるErrorを考える",
            "abstract": "iOSに限らず、アプリはいつもと同じように使っていても、ユーザーの環境はたまたアプリの状態など、様々な原因によってエラーが発生します。エラーハンドリングをアプリ側で行なった後、アラートやテキストなどでユーザーに伝えることは多いと思います。\r\n\r\n- 「エラーが発生しました」\r\n- 「原因不明のエラーです」\r\n- 通信に問題がないはずなのに「通信エラーです」\r\n\r\nこれらのエラーメッセージは、どうやったらエラーの状態から抜け出せるかわからず、お問い合せをいただいても解決できない場合がほとんどです。\r\n\r\nこのトークでは、エラーのハンドリングについて、どうやったらハンドリングしやすいエラーの仕組みが作れるのか、またErrorはどのように利用するのが望ましいのか、AppleのクラスやAPIデザインに着目し、ユーザー、サービス、開発者全てが幸せになる、簡単で鮮明なエラー作成をみんなで考えるトークになります。",
            "accepted": false,
            "speaker": {
                "name": "日向強",
                "kana": "ヒュウガツヨシ",
                "twitter": "coffeegyunyu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/0c8845ab-4898-48ce-86c6-38b0a2129d34.jpg"
            },
            "created": "2022-05-16T21:56:42+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "2d582482-aeb1-4744-a458-586da35eeb6d",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/2d582482-aeb1-4744-a458-586da35eeb6d",
            "title": "GraqhQLリクエストのパフォーマンスをFirebase Performance Monitoringで計測する方法",
            "abstract": "株式会社エクサウィザーズが提供する介護記録アプリ「CareWiz ハナスト」ではAPIサーバーとの通信にGraphQLとRESTを使用しています。\r\n\r\n便利なGraphQLですが、Firebase Performance Monitoringで通信時間を計測しようとすると問題が発生します。\r\nFirebaseコンソール上ではGraphQLクライアントからのリクエストが全て同一のものとして扱われてしまうのです。\r\nなぜならGraphQLのリクエストは基本的に同一エンドポイントへのPOSTリクエストとなるからです。\r\n\r\n本 LTではそのような問題にどのように対処したのか、具体的な実装を交え解説します。",
            "accepted": false,
            "speaker": {
                "name": "伊賀 裕展",
                "kana": "イガ ヒロノブ",
                "twitter": "iganin_dev",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/5d899e18-b7d9-449a-93ca-6cbf2bc692c2.jpg"
            },
            "created": "2022-05-18T17:49:22+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "1885cbbd-3898-40ff-a07e-e2d69b5fac6a",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/1885cbbd-3898-40ff-a07e-e2d69b5fac6a",
            "title": "iOSにおけるWakeword検知機能の実装",
            "abstract": "株式会社エクサウィザーズが提供する介護記録アプリ「CareWiz ハナスト」は、\r\nフォアグラウンド状態において有効な独自のWakeword検知機能と音声によるアプリ操作機能を備えています。\r\n\r\nWakeword検知を行うためには常時音声を取得する必要性があり、独特な実装を行い問題に対処する必要があります。\r\n本セッションでは、Wakeword検知機能の実装を中心に下記の内容をお伝えする予定です。\r\n\r\nWakeword検知\r\n・Wakeword検知の方法\r\n・アプリでの実装\r\n・SoundAnalysisを用いた精度向上\r\n\r\n常時録音に伴う問題と対応\r\n・イヤホンの脱着などの音声インプットの変更\r\n・電話などによる中断\r\n \r\n音声によるアプリ操作\r\n・音声とアプリの操作の連携\r\n・Wakewordから自由発話認識への連携",
            "accepted": true,
            "speaker": {
                "name": "伊賀 裕展",
                "kana": "イガ ヒロノブ",
                "twitter": "iganin_dev",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/5d899e18-b7d9-449a-93ca-6cbf2bc692c2.jpg"
            },
            "created": "2022-05-18T18:02:11+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-12T10:15:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "e1ebf24c-a7de-4750-a89b-ac8dac1b466d",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/e1ebf24c-a7de-4750-a89b-ac8dac1b466d",
            "title": "SwfitUI時代の状態管理アーキテクチャの新潮流を捉える！",
            "abstract": "SwiftUIのアプリ開発において、状態管理をどうするか、という問題があります。\r\n\r\n\u2028宣言的UIであるSwiftUIの登場により、SwiftUI時代に合った状態管理アーキテクチャを検討する必要があると感じています。\r\n\r\n現在、 SwiftUI開発でのデファクトスタンダードな状態管理アーキテクチャと呼べるような何かは存在せず、試行錯誤している段階なのかなと思います。\r\n\r\nそこで、このセッションでは、SwiftUI時代における以下の4つの状態管理手法について比較検討し、状態管理の新潮流を捉えたいと思います。\r\n\r\n・MVVM\r\n・The Composable Architecture(TCA)\r\n・ReSwift\r\n・SwiftHooks & RecoilSwift",
            "accepted": false,
            "speaker": {
                "name": "karamage",
                "kana": "カラマゲ",
                "twitter": "kara_mage",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/2bf6a496-6e5a-44b4-b357-b7cc2ffc67cd.jpg"
            },
            "created": "2022-05-19T15:22:18+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f944e4ed-7d29-4a0b-8b6e-312b126514ae",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f944e4ed-7d29-4a0b-8b6e-312b126514ae",
            "title": "M1対応プロジェクトと非対応プロジェクトを行き来するためのRosetta 2切り替え術",
            "abstract": "M1 macの登場から1年半が経過し、今ではストアのラインナップからIntel macが消えました。\r\nしかし未だにM1対応されていないライブラリやプロジェクトが多々あります。\r\nM1環境でもそういったプロジェクトで開発するために出てくるのがRosetta 2ですが、現状このRosetta 2の切り替えはGUI上でしか行なえません。\r\nこれでは複数の開発が同時進行している場合非常に不便です(え？そんな状況は無い？)。\r\n\r\n本トークでは、Appleの非公開APIと黒魔術を利用してRosetta 2のオン\/オフを切り替えるツールの開発を通じて得た知見を紹介します。\r\n\r\n話す内容\r\n- Rosettaについて\r\n- Objective-CとSwiftの混合パッケージの作成方法\r\n- Rosettaのオン\/オフを切り替える非公開API\r\n- LaunchServices.plistについて",
            "accepted": false,
            "speaker": {
                "name": "417.72KI",
                "kana": "シイナナツキ",
                "twitter": "417_72ki",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/0668ee6a-114e-4dfa-a4a4-c2118b208c31.jpg"
            },
            "created": "2022-05-19T15:39:36+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8d472291-939a-4d15-90cf-925cea69c2a7",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8d472291-939a-4d15-90cf-925cea69c2a7",
            "title": "JailBreakと向き合おう",
            "abstract": "昔はiOSのJailBreakはよく行われていましたが、最近はiOSのアップデートによりJailBreakは少なくなったような印象です。\r\nとはいえ何もしないのではなく、やれることはやっておいたほうがいいと思います。\r\n\r\n本LTでは、JailBreakはどのような手段があるのか、アプリはどのような対策ができるのか、自分なりに調べた結果を共有したいと思います。",
            "accepted": true,
            "speaker": {
                "name": "darquro",
                "kana": "ダークロ",
                "twitter": "darquro",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7da0037c-ffc9-445b-b62d-1572f6e475db.jpg"
            },
            "created": "2022-05-20T15:25:57+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T15:10:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "e4cf73c0-f66c-4a73-8499-6670de8c1a75",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/e4cf73c0-f66c-4a73-8499-6670de8c1a75",
            "title": "iOSアプリ開発あるある4コマ〜2022年版〜",
            "abstract": "iOSアプリ開発でよくあること（俗にいう「あるある」）を4コママンガでめちゃくちゃ面白く表現します。\r\n一昨年に続き昨年もXcodeがインストールできなかったので、今年こそ実際の開発のあるあるが言いたいです。",
            "accepted": true,
            "speaker": {
                "name": "uhooi",
                "kana": "ウホーイ",
                "twitter": "the_uhooi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ef3805a0-b669-493a-9cae-f5ecad9e67e5.jpg"
            },
            "created": "2022-05-22T10:35:41+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f61472a0-6013-4922-a8ae-e7c121a1baa2",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f61472a0-6013-4922-a8ae-e7c121a1baa2",
            "title": "ある日、突然、著名ライブラリの共同開発者になったら",
            "abstract": "「Feel free to cut a new tag\/release」\r\n（自由にリリースしていいよ）\r\n\r\nこちらはある著名ライブラリへPull requestを送ったときに、突然言われた言葉です。\r\n私はこの言葉とともにコラボレーター（共同開発者）へ招待され、自由にリリースできる権限を与えられました。\r\n\r\n「なんで、私がコラボレーターに！？」\r\n\r\nこのライブラリは海外の著名な企業が提供しています。\r\n海外で何の実績もない私がいきなりコラボレーターに招待され、何が起きたか理解できませんでした。\r\n\r\nしかし慌てません。\r\n最初のコメントへ冷静に :+1: の絵文字を付け、リリースを試みることに…\r\nそこで経験したこととは！？\r\n\r\n---\r\n\r\n本トークでは、私が著名ライブラリのコラボレーターとしてどんな感じで動き、何をしたかざっくり紹介します。\r\n私と同じく、突然コラボレーターになって慌てている人にオススメです。",
            "accepted": false,
            "speaker": {
                "name": "uhooi",
                "kana": "ウホーイ",
                "twitter": "the_uhooi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ef3805a0-b669-493a-9cae-f5ecad9e67e5.jpg"
            },
            "created": "2022-05-22T11:42:28+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "10bacfe4-4e2b-400f-8acf-b547223b01cd",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/10bacfe4-4e2b-400f-8acf-b547223b01cd",
            "title": "react-reconcilerでオレオレReact Nativeを作ろう！",
            "abstract": "Reactの思想であるLearn Once, Write Anywhereを推し進めるため、React内部にはReactをどこでも動かせるようにするreact-reconcilerというパッケージが存在します。\r\n\r\nreact-reconcilerはReact DOMやReact Nativeで利用されているUIの差分検出処理のパッケージで、JSXで書かれたコンポーネントのマウントや更新通知を受け取れます。これを使って独自のレンダラーを作ってみましょう。\r\n\r\nこのトークでは、react-reconcilerのレンダラーをSwift(UIKit)で実装して自分だけのReact Nativeを作る方法について話します。",
            "accepted": true,
            "speaker": {
                "name": "ああうえ",
                "kana": "アアウエ",
                "twitter": "_kwzr_",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6830315e-e375-4146-a5f2-5b2c82957643.jpg"
            },
            "created": "2022-05-22T14:07:56+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-12T13:00:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "d7f13f0d-346d-41d7-9697-f93749294131",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/d7f13f0d-346d-41d7-9697-f93749294131",
            "title": "令和時代のXML処理を考える 〜もしあなたが巨大なXMLと相見える(あいまみえる)ことになったら〜",
            "abstract": "アプリがネットワークなど外部サービスを通じてデータをやり取りすることはもはや当たり前になっています。\r\nそのデータの代表的な形式としてJSONがあり、これはSwiftではCodableを通して簡易に変換することができます。\r\n\r\nしかしデータ形式というものはJSONに限らず様々なものがあり、例えばXMLもその一種です。\r\n「iOSにはXMLParserというものが用意されているから、ドキュメント見ながら実装すれば余裕っしょ」\r\nもし、そのドキュメント通りに動作しなかったらどう思いますか？\r\n\r\nこのトークは、XMLを処理するにあたって、XMLParserを中心に、iOSでできること、できないことを洗い出していかに効率的に処理ができるかを突き詰めるトークとなります。",
            "accepted": true,
            "speaker": {
                "name": "日向強",
                "kana": "ヒュウガツヨシ",
                "twitter": "coffeegyunyu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/0c8845ab-4898-48ce-86c6-38b0a2129d34.jpg"
            },
            "created": "2022-05-22T18:46:09+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-10T18:45:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "1bbc3929-1302-4d62-9d0d-19de7083562d",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/1bbc3929-1302-4d62-9d0d-19de7083562d",
            "title": "Swift Concurrency Next Step",
            "abstract": "Swift5.5で登場したSwift Concurrencyは、非同期処理を簡潔で安全に扱える機能です。主な機能は既に追加済ですが、現在も新しい機能の追加や改善が行われています。\r\n今回は、この1年で見られた進化や実装上のTipsなどを紹介します。また、Swift6以降に既存のコードが動かなくなるリスクを最小限に抑えるための段階的導入方法など、ちょっと先の未来についても見ていきます。\r\n\r\n例:\r\n\r\n- Swift5.6以降の新機能や変更\r\n- エラーやキャンセル時の子タスクの挙動\r\n- Taskのinitとselfの関係\r\n- Actorが切り替わるタイミング\r\n- swift-async-algorithmsから見る実装方法\r\n- iOS frameworkとの連携\r\n- Swift6で何が起こるのか？\r\n\r\nこれからConcurrencyをもっと使ってみようと思っているみなさまのお役に立ちましたら幸いです。",
            "accepted": true,
            "speaker": {
                "name": "shiz",
                "kana": "しず",
                "twitter": "stzn3",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/f774feb6-6744-4bad-93f5-7c3fe516058b.jpg"
            },
            "created": "2022-05-23T07:13:58+09:00",
            "timetable": {
                "track": "Track B",
                "starts_at": "2022-09-11T11:05:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "1071de26-846c-4efc-9775-30a271e68698",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/1071de26-846c-4efc-9775-30a271e68698",
            "title": "RealityKitでMetalを書いてカスタムシェーダーをレンダリングしよう！",
            "abstract": "RealityKitはWWDC2019で発表されたARのレンダリングフレームワークです。年々機能も改善されています。\r\n今回は、そのRealityKitでMetalを書いてカスタムシェーダーをレンダリングしてみようと思います。\r\nカスタムシェーダーを書けるようになればRealityKitでできる表現の幅が広くなると思います。\r\n\r\nサンプルとして顔認識を行い、顔の表面にカスタムシェーダーをかけるアプリをつくりました。\r\nこのアプリのソースコードを使いながらRealityKitとMetalの連携の仕方、カスタムシェーダーの書き方を紹介できればと思います。\r\n\r\n内容:\r\nRealityKitとMetalを連携する大まかな流れ\r\nMetal側のコード\r\nSwift側のコード\r\nAppleのカスタムシェーダーのドキュメント紹介\r\n\r\nこのLTを聞いて少しでもRealityKitに興味を持っていただければ嬉しいです。",
            "accepted": false,
            "speaker": {
                "name": "sui",
                "kana": "スイ",
                "twitter": "katopan0405",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/f82c29da-0b7d-4ef7-874f-264003bd4c74.jpg"
            },
            "created": "2022-05-23T21:57:20+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "1464f505-1af5-439b-9ed4-b605fcf6dc55",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/1464f505-1af5-439b-9ed4-b605fcf6dc55",
            "title": "iOSではじめるWebAR 2022",
            "abstract": "iOSDC Japan 2019、2020と続けて発表している『iOSではじめるWebAR』の最新版です！\r\n\r\nそんなに毎年目新しい発表はあるの？と思われる方がいるかもしれませんが、例えばひとつ大きなトピックを挙げるなら『iOS 15.4でWebXR Device APIに“限定的に”対応』しました！さてそれでどうなったのか？それからどうなったのか？\r\n\r\nこの1年間の関連するアップデートを振り返りつつ、SafariにおけるWebARの動向をお伝えします。\r\n具体的には次のようなトピックスを想定しています。\r\n\r\n* iOS 15.4で限定的に対応したWebXR Device APIのその後\r\n* iOS 15で追加された実験的要素<model>の実態\r\n* iOSにおけるWebARコンテンツ開発の最新動向\r\n* iOSでも動くWebARを用いた最新事例",
            "accepted": false,
            "speaker": {
                "name": "HEAVEN chan \/ ikkou",
                "kana": "イッコウ",
                "twitter": "ikkou",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6a65f059-8be6-4a25-96fd-51841bbb8f28.jpg"
            },
            "created": "2022-05-24T15:36:34+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "922ece05-9a10-4e88-9c7f-f87312f9b550",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/922ece05-9a10-4e88-9c7f-f87312f9b550",
            "title": "鉄道アプリを支えるテクノロジー",
            "abstract": "東急株式会社・東急電鉄株式会社では東急東横線や田園都市線などの鉄道をより便利にお使いいただくために「東急線アプリ」を提供しています。\r\n\r\nこのLTでは\r\n\r\n- アプリと連携する駅、線路、車両などのハードウェアについて\r\n- アプリと連携する線路信号システム、運行情報システムの技術\r\n- アプリ上でリアルタイムデータ更新するためのアーキテクチャ\r\n\r\nなど\r\n普段知る機会の少ない鉄道のテクノロジーとiOSアプリでの活用についてご紹介します。\r\n",
            "accepted": true,
            "speaker": {
                "name": "Hiroshi Shikata",
                "kana": "シカタ　ヒロシ",
                "twitter": "dotrikun",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/89edc662-6e38-425d-8cc0-a9271df9dc01.png"
            },
            "created": "2022-05-25T16:45:49+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T15:20:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f0c8ecfb-c419-4a59-8bb0-266d54e053ef",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f0c8ecfb-c419-4a59-8bb0-266d54e053ef",
            "title": "Notionを活用したユーザー行動ログと自動生成",
            "abstract": "我々はプロダクトをより成長させるために、我々は常にユーザーの行動ログを元に検証し、仮説をたて次の改善に繋げています。\r\nですが、ユーザーの行動ログを実際に運用し始めるとログに関する仕様書が作成、更新されていなかったり、各職種とログに対する認識齟齬が発生したりと様々な問題が発生します。\r\n\r\n我々はこれらを解決すべく、普段ドキュメントやタスクの管理で使っているNotionを活用しログ仕様書の作成とコードの自動生成を実装し運用しています。今回はその実現方法と得られた恩恵についてお話します。\r\n\r\n1. 行動ログ管理の課題\r\n2. なぜログのドキュメント管理にNotionを選んだのか？\r\n3. Notion Databaseの設計\r\n4. SwiftPMで作るCLI Tool\r\n5. Notion APIとStencil\r\n6. ドキュメントの更新と自動生成フロー",
            "accepted": false,
            "speaker": {
                "name": "satoshin21",
                "kana": "サトシン",
                "twitter": "satoshin21",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/968a32d4-5631-43c2-80d2-5292d8840992.jpg"
            },
            "created": "2022-05-26T12:19:18+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "0eaf51be-3d6a-41f1-935a-bb771ab3837f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/0eaf51be-3d6a-41f1-935a-bb771ab3837f",
            "title": "iOSDC Japan 2022のパンフレットを盛り上げるイラスト",
            "abstract": "何らかの形でiOSDC Japanに貢献したいので、パンフレットを盛り上げる奇妙で陽気なイラストを描きます。\r\n昨今、エンジニアの働き方としてリモートでの働き方も多くなりました。皆様はどんな働き方をしていますでしょうか？\r\n\r\n今回は、「まだ世の中には存在していないだろうけど、こんなリモートワークスタイルもあったらいいのでは？」をいくつかピックアップしてイラストにします。\r\n\r\n共感出来ないこと、間違いなし！！！！！",
            "accepted": true,
            "speaker": {
                "name": "リルオッサ",
                "kana": "リルオッサ",
                "twitter": "littleossa",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a249a303-5425-4507-a722-e28f77b6e1f1.jpg"
            },
            "created": "2022-05-27T18:16:46+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "b6a7f744-01a3-4ea1-a19d-72b01bf00b0d",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/b6a7f744-01a3-4ea1-a19d-72b01bf00b0d",
            "title": "忙しいあなたへ！！新しくなったFirebase Apple SDKで何が良くなったのか5分でサクッと紹介します！",
            "abstract": "【概要】\r\nGoogle I\/O 2022にてFirebaseの新機能が発表されましたがその中でもiOSのSDKが正式にSwift対応となりFirebase Apple SDK 9.0.0となって発表されました。\r\n今回は特にその中でもよく使用される認証機能のAuthenticationとデータ管理機能のFirestoreについて、何が良くなったのかサクッと5分でご紹介したいと思います。\r\n【目次】(予定)\r\n・Firebase Apple SDKの概要\r\n・Authenticationは以前と比べて何が良くなったのか\r\n　・async\/awaitに対応した実装例の紹介\r\n・Firestoreは以前と比べて何が良くなったのか　\r\n　・async\/awaitに対応した実装例の紹介\r\n　・Codableに対応した実装例の紹介(ベータ版でなくなった話)\r\n・所感",
            "accepted": false,
            "speaker": {
                "name": "oka yuji",
                "kana": "oka yuji",
                "twitter": "oka_yuuji",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/1e0654ee-e61c-427b-b216-0b90312055d6.jpg"
            },
            "created": "2022-05-27T22:36:51+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "3e62853f-464f-4a8c-8d2b-216cdb05e1f4",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/3e62853f-464f-4a8c-8d2b-216cdb05e1f4",
            "title": "CICD構築・自動化入門",
            "abstract": "プログラマーの三大美徳の一つと言われる怠惰さを一番発揮しやすい場所はどこでしょうか？\r\nそれはCICDを含む自動化の仕組みの構築にあると思います。\r\n\r\nソフトウェアの開発においてCICDはもはや必須です。\r\nではCICDで得られるものはなんでしょうか？\r\nそれは我々が余分な仕事をしなくて済む時間です。\r\n例えば、アプリをビルドするのに自分のPCを何十分も専有され、その間コードは一行も触れないなんてのは嫌なのです。\r\nそんな時間があるなら我々はもっと他にやりたいことがあるのです。\r\n面倒なことは機械が勝手にやって欲しいのです。\r\n\r\n本セッションでは今まで面倒な仕事を勤勉にこなしてきた人が明日から怠惰に過ごせるよう、普段の仕事を自動化していくための考え方と進め方についてお話します。\r\nそして導入した仕組みをコスト的に効率良く運用するためにどうすればいいか、導入した後の改善法についてもお話します。",
            "accepted": true,
            "speaker": {
                "name": "くろるり",
                "kana": "クロルリ",
                "twitter": "kuroruri",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/d0c45480-d0b3-4440-ac41-ae8d6da461d0.jpg"
            },
            "created": "2022-05-27T23:22:43+09:00",
            "timetable": {
                "track": "Track B",
                "starts_at": "2022-09-10T18:10:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8e5723ba-9c75-451a-a681-ac4e6030f25f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8e5723ba-9c75-451a-a681-ac4e6030f25f",
            "title": "iBeacon ( BLE ) を扱う前に知っておきたいテストTips",
            "abstract": "iBeaconと連携するアプリの機能実装は簡単そうに見えて、やってみたら意外と難しい、という経験がある人は何人かいらっしゃるでしょう。\r\nそうiBeaconを使った機能の実装は意外と難しいのです。\r\n開発環境ではきちんと動いたので安心していたのに、実際にビーコンを動作させる環境で動かしてみると期待通り動かない、なんてのはよくある話です。\r\nそうなる原因は電波環境の違いという見えない罠が存在することです。\r\nその罠に気がつくのが遅くなるほど、開発に致命的な影響が出て慌てふためくことでしょう。\r\n\r\n本LTでは後から慌てる状況にならないため、iBeaconを扱う機能を実装し始めるよりも前に知っておきたいテストのTipsをお話します。\r\n\r\n※iBeaconと言ってますがAndroid側でのBLE実装も視野に入れた一般的な話をする予定です",
            "accepted": false,
            "speaker": {
                "name": "くろるり",
                "kana": "クロルリ",
                "twitter": "kuroruri",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/d0c45480-d0b3-4440-ac41-ae8d6da461d0.jpg"
            },
            "created": "2022-05-27T23:24:10+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "4111383e-07b4-4b1d-8798-6b4e75b71a51",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/4111383e-07b4-4b1d-8798-6b4e75b71a51",
            "title": "AkkeyLab流イミフクラッシュ解読術",
            "abstract": "・手元で再現できない\r\n・心当たりのないクラッシュ\r\n・何ヶ月も触ってない行でクラッシュ\r\n\r\nこのように嫌な予感がする現象に皆さん一度は遭遇したことがあるのではないでしょうか。\r\nそして、調査手順次第ではもっと早く原因特定できたのに…と悔しい思いをしたこともあるかもしれません。\r\nそこで、本稿では効率的な原因探索方法を図を用いて解説いたします。\r\n\r\n・直近でアプリのリリースがなければサーバ側の調査（GCP を例にご紹介）\r\n・スタックトレースと合わせてクラッシュ直前のログも確認\r\n・外部要因が疑われる場合は Twitter を活用\r\nなどなど\r\n\r\nこのような調査手順に絶対的正解は存在しないため、チームでも属人化しがちな箇所ではないでしょうか。\r\nそこで、本稿を元にチームでアレンジを加え、秘伝のタレとして育ててみてはいかがでしょうか？ドメイン知識の薄い新メンバーも爆速で難問解読のプロになること間違いなしです！",
            "accepted": true,
            "speaker": {
                "name": "AkkeyLab",
                "kana": "アッキーラボ",
                "twitter": "AkkeyLab",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/34c44ff4-7d0f-4e23-b783-13538313cf72.jpg"
            },
            "created": "2022-05-28T03:21:12+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8f531f86-e463-4137-a5cf-d2758cbe2669",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8f531f86-e463-4137-a5cf-d2758cbe2669",
            "title": "Apple Silicon から学ぶ CPU の歴史",
            "abstract": "・x86_64 と arm64\r\n・Rosetta から Rosetta2 へ\r\n・CPU アーキテクチャ変更2回目の Apple\r\n\r\n皆さんは現在利用している Mac の CPU アーキテクチャをご存知でしょうか？アーキテクチャと言っても MVVM とか Clean Architecture のようなソフトウェアアーキテクチャではなく、命令セットアーキテクチャと呼ばれるものになります。\r\n例えば、Intel であれば x64, Apple Silicon であれば ARM が命令セットアーキテクチャです。\r\n\r\n本稿では Apple Silicon を中心に CPU に関する歴史を文系・理系関係なく楽しんでいただけるようにご紹介します。\r\n日頃使っている開発環境がどのようなハードウェア設計のもとで動作しているかを知ることで、Apple の素晴らしいハードウェアが更に好きになること間違いなしです！",
            "accepted": true,
            "speaker": {
                "name": "AkkeyLab",
                "kana": "アッキーラボ",
                "twitter": "AkkeyLab",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/34c44ff4-7d0f-4e23-b783-13538313cf72.jpg"
            },
            "created": "2022-05-28T16:25:47+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "cb4cb4e4-c6bc-4c3d-9545-56e16d2b3950",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/cb4cb4e4-c6bc-4c3d-9545-56e16d2b3950",
            "title": "SwiftUIにRealmを導入するとViewとModelだけでアプリが作れる話",
            "abstract": "iOSアプリで使うデータベースとしては、RealmやCoreDataが有名です。\r\n特にRealmを使ったことがある方は多いのではないでしょうか。\r\n本トークではSwiftUIにRealmを導入して実装する上での知見をお伝えし、みなさんがこの構成でアプリを作るまでの第一歩をサポートします。\r\n\r\n昨年、RealmはアップデートでSwiftUIとの親和性が高くなりました。\r\nその結果、データ・バインディングを行うViewModelを開発者が実装しなくても、ViewとModelさえあればアプリを作ることができるようになっています。\r\nどのようなアップデートがされたのか、なぜViewModelに相当するものが不要なのかを解説します。\r\n新しくなったRealmを活用するととても便利なのですが、現状注意しなければならない問題もあるためその回避方法も合わせて説明します。",
            "accepted": false,
            "speaker": {
                "name": "とむ",
                "kana": "トム",
                "twitter": "tomsan96",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/73ab36cb-e688-444e-8e2f-5cefda151193.jpg"
            },
            "created": "2022-05-28T18:33:02+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "90bb072d-a782-4242-8855-cc6d95da2fe0",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/90bb072d-a782-4242-8855-cc6d95da2fe0",
            "title": "あなたの知らないCore Dataの世界",
            "abstract": "複雑なユーザーデータを扱うには、アプリ内データベースを使うことは避けられません。\r\n皆さんはどんなデータベースをお使いでしょうか？\r\n\r\niOSで用意されているCore Dataは、OSのバージョンアップごとに、SwiftUIやDiffable Data Sourceを使う上でとても便利で強力な機能が追加されているなど、iOSアプリを開発する上でとても便利です。\r\nしかし、その一方であまりフィーチャーされてない機能、「これどうやって使うんだ」な説明不足な機能があるのも事実です。\r\n「何となく使いづらそう」「他のもので十分」な人も多いかと思います。\r\n\r\nそんなCore Dataに関して「こんなこともできますよ」な魅力に溢れた様々な機能を説明していくトークになります。\r\n「へー、こんなことができるんだ」や「使えそう」などとちょっとでも思っていただければ幸いです。",
            "accepted": false,
            "speaker": {
                "name": "日向強",
                "kana": "ヒュウガツヨシ",
                "twitter": "coffeegyunyu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/0c8845ab-4898-48ce-86c6-38b0a2129d34.jpg"
            },
            "created": "2022-05-29T17:42:54+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "71cc743e-9e30-4a56-bdef-a9e178d0223e",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/71cc743e-9e30-4a56-bdef-a9e178d0223e",
            "title": "1年間継続している自転車駆動開発のすべて",
            "abstract": "人間にとって、健康は日々の生活においてとても重要です。\r\nエンジニアにとって、新しい技術のキャッチアップは日々の開発を行う上でとても重要です。\r\n\r\nいつも物事が長く続かなかった私が、健康と新しい技術のキャッチアップ、この両方のモチベーションを1年間保ち続けて得たことを紹介します。\r\n\r\n以下のテーマをお届けします。\r\n\r\n- 健康と技術、両方を数値化して定量的にモチベーションを維持\r\n- HealthKitを使ったワークアウト管理のカスタマイズ\r\n- HealthKitでSwift Concurrencyを学ぶきっかけ作り",
            "accepted": false,
            "speaker": {
                "name": "tokizo",
                "kana": "トキゾー",
                "twitter": "tokizuoh",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/91e968da-aecb-4d6e-b149-58165a3ec864.jpg"
            },
            "created": "2022-05-29T20:04:27+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "0b6f453a-68f0-4300-9ab2-cb1e3457eb53",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/0b6f453a-68f0-4300-9ab2-cb1e3457eb53",
            "title": "SwiftUI Navigation のすべて",
            "abstract": "SwiftUIのNavigation APIは「Tab, Alert, Sheet, Navigation Link...」など様々な種類が存在し、OSによるインターフェースの変化も激しいです。\r\nまた、これらのAPIを利用して画面遷移を実現する際には多くの選択肢があり、画面遷移が増えれば状態管理も複雑になります。\r\n\r\nこのトークでは、そんなSwiftUI Navigationについて以下の内容で発表します。\r\n\r\n・SwiftUIのシンプルな画面遷移と状態駆動型の画面遷移について俯瞰\r\n・状態駆動型の画面遷移の利用時に起きる状態の不整合、不要な状態の管理を改善するswiftui-navigationの手法\r\n\r\n本トークではPoint-Free製のswiftui-navigationを深掘ることによって、よりSwiftUIのNavigationについて理解できるようになることを目指します。",
            "accepted": true,
            "speaker": {
                "name": "アイカワ",
                "kana": "アイカワ",
                "twitter": "kalupas226",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/af92f5ac-c913-48db-9ecd-7d2db0b5ffda.jpg"
            },
            "created": "2022-05-30T18:22:00+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-10T17:15:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "0b3cdd25-e4c9-4f67-a609-d386b88d61b7",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/0b3cdd25-e4c9-4f67-a609-d386b88d61b7",
            "title": "SwiftUIやAttributedStringで使えるMarkdown記法入門",
            "abstract": "iOS 15とXcode 13のリリースにより、SwiftUIのTextやAttributedString等で指定する文字列の中でMarkdown記法を使用できるようになりました。全てのMarkdown記法が使えるわけではありませんが、ボールドやイタリックなどの簡単な文字装飾であれば文言と一緒に文字装飾も定義できるため、文言変更と同時に文字装飾を変更したい場合でも文言定義を変更するだけで対応できるといったメリットがあります。\r\n\r\n本稿では、そんなMarkdown記法について、特徴や使い方、さらにはカスタム属性構文の使い方について解説します。\r\n\r\nコンテンツ(予定):\r\n\r\n1. iOS 15から使えるようになったMarkdown記法について\r\n2. AttributedString、SwiftUIでの利用方法\r\n3. iOS 13 \/ 14での利用について\r\n4. カスタム属性構文について",
            "accepted": true,
            "speaker": {
                "name": "栗山 徹",
                "kana": "クリヤマ トオル",
                "twitter": "kotetu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/8c55895d-0a5f-4b18-a6e1-d1661fcb9569.jpg"
            },
            "created": "2022-05-30T18:25:33+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "729f1545-38df-4309-88f6-0481ab42e27a",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/729f1545-38df-4309-88f6-0481ab42e27a",
            "title": "輝け！俺のViewController  Part.2",
            "abstract": "freddi氏「今年もクソ漫画、パンフに載せたります。」（参考: https:\/\/twitter.com\/___freddi___\/status\/1525016756095688706 ）」今年は正攻法でプロポーザルで大胆にGo！いったい、iOS開発の地獄を見ているふれもんやロパ太たちの運命はどうなっちゃうの？！次回! freddi 伏す、ビルドスタンバイ！",
            "accepted": true,
            "speaker": {
                "name": "freddi",
                "kana": "フレディ",
                "twitter": "___freddi___",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/b4794539-cc02-45e6-b08a-c75df3357f03.jpg"
            },
            "created": "2022-05-30T18:35:26+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "c7306ef2-0e84-442d-a043-1a558403ad7d",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/c7306ef2-0e84-442d-a043-1a558403ad7d",
            "title": "SwiftPMプラグインの実装と活用",
            "abstract": "Swift 5.6でSwift Package Manager（SwiftPM）にプラグイン機能が追加されました。ビルドツールプラグインはSwiftPMのビルド時に外部ツールを実行します。また、コマンドプラグインはSwiftPMのコマンドを拡張して外部ツールを実行できるようにします。\r\n\r\nしかし、SwiftPMプラグインの情報はSwiftのプロポーザル以外にはあまりありません。そのため、実際にどのように実装すれば良いのかわからないと感じる人もいるのではないでしょうか。この記事では、プラグインの実装方法を具体的な実装コードを挙げながら解説します。また、プラグインの活用のしかたも紹介します。\r\n\r\n参考記事：Swift Package Managerのプラグイン機能 (https:\/\/qiita.com\/usamik26\/items\/1c2cec0903fea2e03344)",
            "accepted": true,
            "speaker": {
                "name": "宇佐見 公輔",
                "kana": "ウサミ コウスケ",
                "twitter": "usamik26",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a2e3859e-b0bf-4863-8d9d-c24fe5329c6c.jpg"
            },
            "created": "2022-05-30T19:50:06+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "dfd8c56c-468a-4115-804c-d1ca103eed62",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/dfd8c56c-468a-4115-804c-d1ca103eed62",
            "title": "Swift-DocCによるチュートリアルの作り方",
            "abstract": "Swift-DocCは、Swiftフレームワークやパッケージのためのドキュメント作成ツールです。Xcode 13に同梱される形でリリースされ、その後オープンソースソフトウェアになりました。\r\n\r\nSwift-DocCの面白い特徴に、チュートリアルを作成できるという点があります。AppleはSwiftUIのチュートリアルを公開していますが、このチュートリアルと同様のものがSwift-DocCを使えば作成できるのです。\r\n\r\nこの記事では、Swift-DocCを使ったチュートリアルの書き方を、具体的なコードを挙げて解説します。以前Swift-DocCの技術同人誌を執筆しましたが、今回の記事ではチュートリアルに焦点を当てて、より詳細に解説します。\r\n\r\n参考：Swift-DocCでドキュメントをつくる (https:\/\/type-d4-lab.booth.pm\/items\/3622327)",
            "accepted": true,
            "speaker": {
                "name": "宇佐見 公輔",
                "kana": "ウサミ コウスケ",
                "twitter": "usamik26",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a2e3859e-b0bf-4863-8d9d-c24fe5329c6c.jpg"
            },
            "created": "2022-05-30T19:51:43+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "5a7bff68-05fb-4900-96f5-e02518c450af",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/5a7bff68-05fb-4900-96f5-e02518c450af",
            "title": "HealthKit 気をつけるべき栄養素ランキング",
            "abstract": "iOSにはHealthKitが備わっており、各種健康データや運動量などを入力しておくことができます。\r\n入力できる項目の中には栄養素の項目があり、摂取した食べ物などから栄養素を入力したりできます。\r\n中には特殊なもの、わかりにくいものなど、ソースコード上でどうやって入力すればいいか戸惑う栄養素もあります。\r\n\r\nそんな一癖も二癖もある栄養素の面々を、HealthKitのTIPSと共に、開発者にとって思わず「あるある」と思っちゃう独断と偏見のランキング形式でご紹介していきます。",
            "accepted": false,
            "speaker": {
                "name": "日向強",
                "kana": "ヒュウガツヨシ",
                "twitter": "coffeegyunyu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/0c8845ab-4898-48ce-86c6-38b0a2129d34.jpg"
            },
            "created": "2022-05-30T20:06:12+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "7d448927-025e-4412-baff-e60ff857c2f7",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/7d448927-025e-4412-baff-e60ff857c2f7",
            "title": "Swift Package Manager Command Plugins で任意の処理を実行してみよう",
            "abstract": "Swift 5.6 から Swift Package Manager に Command Plugins の機能が追加されました。\r\nこの機能を用いることで、 Swift Package Manager のコマンドを拡張し、独自にカスタマイズしたコマンドを実行することができるようになります。\r\nこれによって、タスクランナーのようなものを Swift のコードで実装し、 CI やコマンドラインから実行することが可能になります。\r\nこの原稿では、 Command Plugins の作り方を実際のコードを交えて紹介していきます。",
            "accepted": true,
            "speaker": {
                "name": "多鹿豊",
                "kana": "タジカユタカ",
                "twitter": "yut_taj",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/de8c8bd1-071d-4202-8206-9abf3e03de2a.jpg"
            },
            "created": "2022-05-30T20:20:32+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "3947fe8c-b132-4b4c-a79c-b5ebfdffd044",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/3947fe8c-b132-4b4c-a79c-b5ebfdffd044",
            "title": "不具合や仕様もれを減らすための勘所とユニットテストで学ぶ簡単事例集",
            "abstract": "アプリ開発の過程で、仕様のミスリード・不十分な仕様把握・説明の解釈ミス等で、本来の意図との実際の成果物で齟齬が生まれる事は、常に起こる可能性はありますが、ユニットテストによって事前にそのリスクを防止する取り組みは、仕様把握や機能担保の面で有効な手段になります。\r\n\r\n本稿ではその「ありがたみ」と感じられる簡単な例を、RxSwift \/ Quick \/ Nimble \/ SwiftyMockyを利用を想定したコードを通して解説する予定です。\r\n\r\nその中でも特に、\r\n\r\n1. 仕様で本当に抜け漏れがないかを確認する場合\r\n2. 言葉ではシンプルだが実際に正しいかが見えにくい場合\r\n3. 実は細かな点に気を配ってみると疑問が生まれる場合\r\n4. その他画面の中でテストがあると良さそうな部分を探り出す着想\r\n\r\n等の簡単な実装コードやテストコードの事例を交えながら解説できればと思います。",
            "accepted": true,
            "speaker": {
                "name": "酒井文也",
                "kana": "サカイフミヤ",
                "twitter": "fumiyasac",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/1ead0d90-6aa1-42cc-b8cd-eae61b5ea168.jpg"
            },
            "created": "2022-05-30T20:31:45+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "315c617f-9c8b-4d9d-b4d7-0112ed0b6345",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/315c617f-9c8b-4d9d-b4d7-0112ed0b6345",
            "title": "確実な動作を最優先したアプリ設計",
            "abstract": "iOSのアプリ開発では、意識してコードを書いていないと、予想外のタイミングで不要なイベントが実行されてバグが起きてしまうことがよくあります。\r\n\r\n無秩序な非同期処理もそうですが、特にUI周りはプログラマがコントロールしきれるものでなく、予想外に起きるイベントを完全に無くすことはできません。\r\n\r\nアプリを安全・確実に動作させるためには、そのような不安定な外部要因に依存せず、アプリの状態を構築する事が必要です。\r\n\r\nこのトークでは、確実な動作をするアプリを作るにはどうすれば良いかを、以下のような内容でお話しする予定です。\r\n\r\n・iOSのUIの問題点\r\n・画面遷移の方法について\r\n・UIに依存せずにアプリの状態を持つ\r\n・「機能」と「生存期間の管理」を分けてオブジェクトツリーを構築する\r\n・循環参照を起こさない構造にする\r\n・非同期関数を隠蔽する",
            "accepted": false,
            "speaker": {
                "name": "八十嶋祐樹",
                "kana": "ヤソシマユウキ",
                "twitter": "yaso_san",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/9cd24ccb-98a8-41cb-ad07-6a1a81966258.png"
            },
            "created": "2022-05-30T22:11:35+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "e9662262-5a4a-4b11-96a1-908765688d30",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/e9662262-5a4a-4b11-96a1-908765688d30",
            "title": "API 繋ぎこみトラブル撲滅委員会",
            "abstract": "API 繋ぎこみを後回しにした経験、皆さんありますでしょうか。\r\n\r\n・API 側の問題に気づくのが遅れる\r\n・サーバ側の開発スピードによって、作業を中断せざるを得ない\r\n・API 側の仕様を無視した実装になっていることに気づき、UI から作り直し\r\n\r\n実装順序次第ではこのような現象に遭遇してしまうかもしれません。\r\n本稿では、本業と複数の副業で実践済みのテクニックをご紹介します！\r\n\r\n・アプリ開発者目線で見る OpenAPI\r\n・XcodePreviews 活用術\r\n・[Moya](https:\/\/github.com\/Moya\/Moya) 利用時の Stub 活用術\r\n\r\n上記3項目を実例とともに初心者〜中級者向けに執筆いたします。大規模なリファクタリング不要で、読んでいただいた直後から実践・成果を実感していただけます！",
            "accepted": true,
            "speaker": {
                "name": "AkkeyLab",
                "kana": "アッキーラボ",
                "twitter": "AkkeyLab",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/34c44ff4-7d0f-4e23-b783-13538313cf72.jpg"
            },
            "created": "2022-05-30T23:24:08+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "aadc6007-ccf6-42e5-9318-aae24cde62c8",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/aadc6007-ccf6-42e5-9318-aae24cde62c8",
            "title": "async\/awaitで作るCLIツール",
            "abstract": "WWDC2021で発表されたasync\/awaitを始めとするSwift Concurrencyですが、CLIツールの実装でも使うことができます。\r\nまた、実はSwift5.5.2からLinuxでも扱えるようになっているんです。\r\n\r\n本稿では、自作のCLIツールを一部抜粋してBefore\/Afterの形でasync\/awaitをどのように適用したかご紹介します。",
            "accepted": true,
            "speaker": {
                "name": "417.72KI",
                "kana": "シイナナツキ",
                "twitter": "417_72ki",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/0668ee6a-114e-4dfa-a4a4-c2118b208c31.jpg"
            },
            "created": "2022-05-31T00:33:03+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8397db3f-69d9-4af9-b701-2a23ef723d8f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8397db3f-69d9-4af9-b701-2a23ef723d8f",
            "title": "SwiftUIの時代到来！UIKitは不要！なのだろうか…？",
            "abstract": "今、iOSアプリの入門者には冬の時代が到来しています。\r\nAppleが自信満々に公開したSwiftUI。果たして、これを学べばiOSアプリエンジニアとして食っていけるのでしょうか？\r\n一方のUIKitは覚えることが沢山あります。AutoLayoutやUICollectionViewを覚えた頃にはUIKitなんて使われていないかもしれません。\r\nそんな不安を少しでも減らせるように、iOSアプリ開発歴12年の私がSwiftUIがどんな立ち位置のフレームワークなのか、UIKitとの使い分け・共存などを徹底分析します。\r\nこのセッションを見れば、SwiftUIの使い所や、開発におけるハマりどころを理解できることでしょう。\r\n\r\n参考）https:\/\/qiita.com\/noppefoxwolf\/items\/7940f5b8b132b825c545",
            "accepted": false,
            "speaker": {
                "name": "noppe",
                "kana": "ノッペ",
                "twitter": "noppefoxwolf",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/4efbdf7a-368f-4ac8-bd23-1a61282bcaba.png"
            },
            "created": "2022-05-31T01:16:40+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "c45d5de6-4000-48da-b8d2-b98222460ba9",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/c45d5de6-4000-48da-b8d2-b98222460ba9",
            "title": "ホーム画面を無効化しアプリの切替えを抑止する技術",
            "abstract": "iOS端末を業務利用する場面では、ときおり「開発するアプリ以外を使わせたくない」「ホーム画面に遷移させたくない」という要望に出くわすことがあります。例えば、キオスク端末としてiPadを使うような場合です。\r\n\r\n本トークでは、そうした要望を満たすiOSの仕組みを3つ紹介します。\r\n\r\n- Guided Access\r\n- Single App Mode\r\n- Autonomous Single App Mode (ASAM)\r\n\r\nそれぞれの前提条件やメリット・デメリット、設定方法や使いどころを比較しながら解説します。3つ目のASAMは、アプリ内から Single App Mode のON\/OFFを制御できる興味深いモードで、その実装方法についても紹介します。",
            "accepted": true,
            "speaker": {
                "name": "oishi",
                "kana": "オオイシ",
                "twitter": "oishi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/adde1651-ac8a-4575-a958-ef882658af8d.png"
            },
            "created": "2022-05-31T11:05:11+09:00",
            "timetable": {
                "track": "Track E",
                "starts_at": "2022-09-12T10:15:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "cd5bf840-2dbc-4683-844e-07b999fbbe31",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/cd5bf840-2dbc-4683-844e-07b999fbbe31",
            "title": "Apple Archive Frameworkの使い方",
            "abstract": "iOS 14およびmacOS Big Sur以降ではApple製のファイル圧縮・展開のフレームワークであるApple Archive Frameworkが利用できます。データのエクスポート機能やシェア機能などで、複数のファイルを一つにまとめて送信したいときに便利です。サードパーティ製のアーカイブフレームワークなどを導入しなくても、一通りの機能が揃っています。ただApple Archive Frameworkはドキュメントが最低限しか書かれておらず、ドキュメントに掲載のサンプルコードをそのまま写せば使えるのですが、パラメータの意味などを理解せずに使うことはよくありません。本稿ではApple Archive Frameworkの使い方とドキュメントに載っていないパラメータの意味などを実際のコードを用いて解説します。",
            "accepted": true,
            "speaker": {
                "name": "岸川克己",
                "kana": "キシカワカツミ",
                "twitter": "k_katsumi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/45e5a383-abb8-4424-9c7f-186eb802a1d2.jpg"
            },
            "created": "2022-05-31T11:41:00+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "ec4235b4-ce48-40b5-8eae-94027753a7f7",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/ec4235b4-ce48-40b5-8eae-94027753a7f7",
            "title": "XCFramework を Swift Package Manager でもっと便利に扱う",
            "abstract": "Xcode 11 からバイナリフレームワークを配信するための新たな方法として、 XCFramework が登場しました。\r\nこれ1つで様々なプラットフォームをターゲットにビルドできます。\r\n\r\nまた、Xcode 上で Swift Package Manager (SPM) も利用できるようになりました。\r\nしかし、現状では SPM に対応できていない、もしくは XCFramework のみ配信されているライブラリも依然存在し、全てを SPM で管理することが困難です。\r\n\r\nSPM では、XCFramework も Binary Target として登録することで全てを SPM で管理することが擬似的に実現できます。\r\n\r\n本稿では、 XCFramework を SPM に対応させるために必要なステップと、プライベートリポジトリで管理しているパッケージにアクセスするための Tips を紹介します。",
            "accepted": true,
            "speaker": {
                "name": "shimastripe",
                "kana": "シマストライプ",
                "twitter": "shimastriper",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/317a9359-3457-45f3-9fa4-452e1a7f7feb.jpg"
            },
            "created": "2022-05-31T11:53:45+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "c5f5db2c-b8a8-4bf4-8088-262fa38c9ce8",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/c5f5db2c-b8a8-4bf4-8088-262fa38c9ce8",
            "title": "SF Symbolsの無限の可能性に迫る、SF Symbolsアートの世界",
            "abstract": "SF Symbols 3.3の時点では、3,300を超えるシンボルを備えています。この多種多様なシンボルのおかげで開発者は0からアイコンを作る必要は無く、開発に専念することが出来ます。\r\n\r\nでも、どうでしょう？\r\n\r\n3,300を超えるシンボルがあるのに、何個のシンボルを使ったことがありますか？実際、日の目を見れていないシンボルたちが沢山あります。\r\n\r\n「これ一体いつ使うんだ？」「こんなシンボルまであるんだ！」「これは使えそう！」\r\n\r\n個性豊かなシンボルたちが使って欲しそうにこちらを見ています。\r\n\r\nこのLTでは、そんなシンボルたちを活用したSF Symbolsアートの数々を紹介します。少しでもSF Symbolsのことが好きになっていただければ嬉しいです。\r\n\r\n(参考: https:\/\/twitter.com\/littleossa\/status\/1516540893142347778)",
            "accepted": true,
            "speaker": {
                "name": "リルオッサ",
                "kana": "リルオッサ",
                "twitter": "littleossa",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a249a303-5425-4507-a722-e28f77b6e1f1.jpg"
            },
            "created": "2022-05-31T15:11:38+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-11T15:20:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "9a271de4-f22a-4d61-abce-4d0047420f92",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/9a271de4-f22a-4d61-abce-4d0047420f92",
            "title": "依存問題・ルーティング問題をneedleを使って解決する話",
            "abstract": "DIのOSSであるneedleを使い、マルチモジュール構成におけるモジュール間の依存問題・画面遷移問題に対応した話をします。\r\n依存過多になりがちなSingleton Managerクラスからの依存脱却を行いつつ、導線ごとに必要なインスタンスのスコープを切れるneedleの特徴を活かした画面遷移時の依存解決のお話をしたいと思います。",
            "accepted": false,
            "speaker": {
                "name": "かむい",
                "kana": "カムイ",
                "twitter": "kamui_project",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/5433691c-c49b-4f33-a901-ef84891ae9bf.png"
            },
            "created": "2022-05-31T16:50:03+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "81ce55c9-93ba-4b3f-b011-2b88ec7f9de2",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/81ce55c9-93ba-4b3f-b011-2b88ec7f9de2",
            "title": "マルチモジュール化に必要なことをApp Extensions対応から考えてみる話",
            "abstract": "元来、アプリ開発においてマルチモジュール化をしなければアプリをリリース出来ないわけではありません。\r\n既に大きくなったプロダクトを途中からマルチモジュール化するためには、必要な処理を切り出すリファクタリングや影響範囲の考慮したインクリメンタルな対応が発生します。\r\nしかし半強制的にアプリから必要な処理を切り出さなければ機能自体が実現できないケースがあります。\r\n\r\nApp Extensions対応を行なった際に切り出した必要な処理を紹介し、どのような構成を取ればモジュール化構想をより円滑にできるのかを考察していきます。",
            "accepted": false,
            "speaker": {
                "name": "かむい",
                "kana": "カムイ",
                "twitter": "kamui_project",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/5433691c-c49b-4f33-a901-ef84891ae9bf.png"
            },
            "created": "2022-05-31T17:08:54+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "cc685572-46e9-483a-83b2-a1c839662dec",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/cc685572-46e9-483a-83b2-a1c839662dec",
            "title": "iPadOSDC Japan 2022",
            "abstract": "「お前も Swift Playgrounds を使った開発者にならないか？」\r\n「見れば解るお前の強さ。Xcode だな？」\r\n「その闘気。練り上げられている。熟練の開発者に近い」\r\n「やはり Swift Playgrounds を使った開発者になれ！俺と iPad で開発を続けよう」\r\n\r\n\r\nSwift Playgrounds では、昨年末から iPad 上でアプリを開発してリリースできるようになりました。\r\n本セッションではそんな「ならない」と感じている人たちのために、Swift Playgrounds を使った iPad での開発を紹介します。\r\n\r\n\r\n「死ぬ…！！死んでしまうぞ　Swift Playgrounds を使った開発者になれ！！なると言え！！」",
            "accepted": true,
            "speaker": {
                "name": "Hiromu Tsuruta",
                "kana": "ヒロム ツルタ",
                "twitter": "hcrane14",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7f77375e-4ae8-44bd-aa84-e57f1d95d7b0.jpg"
            },
            "created": "2022-05-31T17:53:16+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T16:25:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "7350d069-7a96-4bbd-8322-474d41a25270",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/7350d069-7a96-4bbd-8322-474d41a25270",
            "title": "SwiftでのErrorの使い方、",
            "abstract": "Swiftでのエラーハンドリングの方法を考えてみました。\r\n下記にAppleのErrorのクラスがありますが、これをよしなに使いエラーを便利にしてみたらどうでしょうと考えてみました。\r\nhttps:\/\/developer.apple.com\/documentation\/swift\/error\r\n\r\n少し検索してみますと、様々な記事を見かけましたが私なりの方法を検討してみました。",
            "accepted": false,
            "speaker": {
                "name": "keisukeYamagishi",
                "kana": "ヤマギシケイスケ",
                "twitter": "shichimi_0_o",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7acfa78f-fcf1-4485-b53e-45bb766f9160.jpg"
            },
            "created": "2022-05-31T21:17:49+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "aad51596-674f-4b8a-a24b-868e84453e9a",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/aad51596-674f-4b8a-a24b-868e84453e9a",
            "title": "ノートアプリのテキストエディタの解体新書",
            "abstract": "note の iOS アプリのテキストエディタはテキストや画像、埋め込みなど様々な要素を入力できます。\r\nまた、今年には V4 エディタと呼んでいるエディタの拡張も行い、箇条書きや罫線などのサポートも追加しました。\r\nスクロールする画面に複数の UITextView を入れる UI を作る時に、みなさんはどのように設計するでしょうか？\r\nnote の iOS アプリでは伸び縮みする画面を作る方法として、UIScrollView の中に UIStackView を入れて、その中に UITextView を含むビューを配置するように実装しました。\r\nこのセッションでは UIKit を活用して、伸び縮みするような画面を作る際の考え方と実装する際に困ったことなどをお話しします。",
            "accepted": true,
            "speaker": {
                "name": "かっくん",
                "kana": "カックン",
                "twitter": "fromkk",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/67aad253-9c62-41f9-83c4-96a3440b16f5.jpg"
            },
            "created": "2022-05-31T21:25:10+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-10T16:40:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "c62aa0a7-a753-4308-a9db-0535be077f6b",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/c62aa0a7-a753-4308-a9db-0535be077f6b",
            "title": "アプリ運営に必要な機能をFirebaseで実現する",
            "abstract": "アプリを運営するには普段目にする機能以外にも様々な機能が必要です。\r\n例えばメンテナンス中の画面などがわかりやすいと思います。\r\nnote のiOS \/ Android アプリには Firebase を活用して、これらの機能を実現しています。\r\nこのセッションでは Firebase の機能である Remote Config や AB Testing などを活用して、アプリを運営していく上で必要な機能とその開発方法を紹介します。",
            "accepted": false,
            "speaker": {
                "name": "かっくん",
                "kana": "カックン",
                "twitter": "fromkk",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/67aad253-9c62-41f9-83c4-96a3440b16f5.jpg"
            },
            "created": "2022-05-31T21:26:07+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "c7634863-fc4e-42ea-8756-e2b417255e75",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/c7634863-fc4e-42ea-8756-e2b417255e75",
            "title": "アプリを成長させるアプリの開発以外の開発",
            "abstract": "私は2020年5月に note 社に入社し、現在丸2年が経過しました。\r\n入社してからの大半はアプリの開発業務がメインでしたが、ここ1年ぐらいは開発以外のタスクも増えてきました。\r\n具体的には自動化の整備、E2E テストの整備、分析用のツール開発、スクラムの運営などです。\r\nこれらについても Zapier や GAS などを活用してツール化をするなどして、今後の自分たちが楽できるようにしています。\r\nこのセッションではこれらのツールを作った経緯や方法について紹介します。",
            "accepted": false,
            "speaker": {
                "name": "かっくん",
                "kana": "カックン",
                "twitter": "fromkk",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/67aad253-9c62-41f9-83c4-96a3440b16f5.jpg"
            },
            "created": "2022-05-31T21:27:03+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "79912d32-ce1f-4955-9cd4-2fd4a228942b",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/79912d32-ce1f-4955-9cd4-2fd4a228942b",
            "title": "リニューアルと気持ちの整理",
            "abstract": "エンジニアは意外にも信心深いところがある。サーバーをお祓いしたり、デバッグ神社を建てたり、リリースするときにお祈りする。\r\nアプリを全面リニューアルがあったので、今までのソースコードへの感謝の気持ちを込めてお焚き上げをすることにした。\r\nお焚き上げの準備から実施するまでを紹介します。\r\n\r\nブログに書いた内容をTL用に作り直して発表する予定です。\r\nhttps:\/\/akuraru.hatenadiary.jp\/entry\/2022\/05\/22\/200917",
            "accepted": false,
            "speaker": {
                "name": "akuraru",
                "kana": "アクラル",
                "twitter": "akuraru",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/d5703555-ff3e-45d2-b06c-ce52d0b7d583.jpeg"
            },
            "created": "2022-05-31T22:29:12+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "6540041a-85c9-4dd1-82a6-e0ba3ab8b04d",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/6540041a-85c9-4dd1-82a6-e0ba3ab8b04d",
            "title": "Xcodeのイベントを別アプリで監視するのに試行錯誤した話",
            "abstract": "XcodeのBehaviorsという便利機能を皆様はご存知でしょうか？\r\nBuild PhaseのRun Scriptではターゲットのビルド時に特定の処理を挟み込むことができますが、Behaviorsはプロジェクト単位ではなくXcode全般でのイベントに処理を挟み込むことができます。\r\nそんなBehaviorsをハックして、ビルドやテストのイベントを別アプリから監視することができる仕組みを実現する方法について紹介します。\r\n\r\n見どころ\r\n・複雑なplistの任意の箇所だけ書き換える方法\r\n・App Sandboxの壁をどのようにして超えるのか\r\n・アプリを跨ぐ開発でのデバッグ手段",
            "accepted": false,
            "speaker": {
                "name": "Kyome",
                "kana": "キョメ",
                "twitter": "Kyomesuke",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/e5fb6abc-b0cf-4957-8fbe-6afec71f7132.png"
            },
            "created": "2022-06-01T01:48:13+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8d132cde-8e1b-4fd0-b367-9a109d5556a6",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8d132cde-8e1b-4fd0-b367-9a109d5556a6",
            "title": "7年間運用している主力iOSアプリをリファクタリングしたお話",
            "abstract": "エムスリーでは医療従者や一般の方向けに複数のアプリ開発を行なっていますが、その中でも主力である『m3.com』アプリで行ったリファクタリングについてお話します。\r\n\r\nプロジェクト開始から7年を経て FatViewController や責務が不明瞭なヘルパークラスが絡み合う状態となり、機能追加\/不具合修正\/オンボーディングのいずれも大変という辛い状況になっていました。\r\n\r\nこの状況を打開すべく「MVVM + Flux アーキテクチャへ変更」「マルチモジュール化」「DI導入」を行い、さらに Swift Concurrency、Combine、 XcodeGen などを活用し、「モダン」で「保守・運用がしやすい形」へと変貌を遂げました。\r\n\r\nこのトークでは「リファクタリングで実現した設計」に加え「リファクタリングに至る決断」「どのようにリファクタリングを進めたか」についてお話します。",
            "accepted": false,
            "speaker": {
                "name": "tmnet357",
                "kana": "ティーエムネットサンゴーナナ",
                "twitter": "tmnet357",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ff7156d4-5513-4675-8a5e-d2f2e61e9fea.jpg"
            },
            "created": "2022-06-01T09:38:18+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "fa1db2d6-2db6-489c-a2cc-cfbc4abeb34c",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/fa1db2d6-2db6-489c-a2cc-cfbc4abeb34c",
            "title": "Dive into Mac Catalyst",
            "abstract": "Mac Catalystは，iOS\/iPad OSと共通のプロジェクト，コードでmacOS Nativeアプリケーションも提供できるフレームワークです．さらに，Mac Catalystには，iOS\/iPad OSでしか扱えないHomeKit.frameworkなどのフレームワークを使ったアプリを開発できるなどの開発効率以上の価値をもたらす側面も持ちます．しかしながら，それを使った開発には，AppKitのAPIを利用できない，起動時に勝手にウィンドウが表示されてしまうなどの課題もあります．本セッションでは，Mac Catalystでアプリを開発する上で必須のテクを筆者が公開しているオープンソースのアプリをベースに紹介します．",
            "accepted": true,
            "speaker": {
                "name": "吉田悠一",
                "kana": "ヨシダユウイチ",
                "twitter": "sonson_twit",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a337a3b4-965f-4684-8898-b443f749d68f.png"
            },
            "created": "2022-06-01T10:31:21+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-10T18:10:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "b530729b-ca41-490e-9c16-52058eb6f1bf",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/b530729b-ca41-490e-9c16-52058eb6f1bf",
            "title": "既存のiOSアプリにKMMを導入してみた",
            "abstract": "株式会社KyashではデジタルウォレットアプリKyashを提供しています。\r\n\r\n最近、KMM(Kotlin Multiplatform Mobile)を導入しました。\r\n既存プロダクトにKMMを導入して得た知見を共有したいと思います。導入を検討している方の参考になれば幸いです。\r\n\r\n・なぜ導入したか\r\n・導入してみてわかったメリット・デメリット\r\n・ぶっちゃけ、導入してみて良かった？",
            "accepted": false,
            "speaker": {
                "name": "tamadon",
                "kana": "タマドン",
                "twitter": "tamadon3776",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/f7e54144-0da4-4d24-96e7-d64f2de70352.jpg"
            },
            "created": "2022-06-01T11:17:11+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "3e5449c5-98ca-44fa-a9d1-ab60a9018dcf",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/3e5449c5-98ca-44fa-a9d1-ab60a9018dcf",
            "title": "UIKitベースの個人開発アプリをFull SwiftUIに移行した方法と実践",
            "abstract": "iOS 14からSwiftUIに `App` が追加され、Full SwiftUIでのアプリ開発が可能になりました。が、UIKitでつくりこまれたUIを移行するのは容易ではなく、移行例はあまり多くないのではないでしょうか。\r\n\r\nそんな状況で、私は2021年末に個人開発のノートアプリ「Pieces of Paper」をFull SwiftUIに移行しました。本トークでは実際に移行を行った際に経験した様々な問題を中心に話したいと思います。\r\n\r\n- なぜ移行しようと思ったのか\r\n- 移行する方法\r\n- 実践する中でハマった数々の問題と対応\r\n  - `@ObservedObject` の意図しない初期化によるバグ\r\n  - 反映されると思った状態変数がnilになる\r\n  - UIKitベースのライブラリ（特にコア機能の PencilKit ）とのブリッジをどうするか、など\r\n- 移行するメリットはあったのか？",
            "accepted": false,
            "speaker": {
                "name": "蔀",
                "kana": "シトミ",
                "twitter": "0si43",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/8a92d5dc-4997-49f7-8b27-d98d244d30cc.jpg"
            },
            "created": "2022-06-01T11:49:39+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8f4b9f31-b02a-4a9c-8f67-4b23c7842bb8",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8f4b9f31-b02a-4a9c-8f67-4b23c7842bb8",
            "title": "UIKitベースの個人開発アプリをFull SwiftUIに移行した方法と実践",
            "abstract": "iOS 14からSwiftUIに `App` が追加され、Full SwiftUIでのアプリ開発が可能になりました。が、UIKitでつくりこまれたUIを移行するのは容易ではなく、移行例はあまり多くないのではないでしょうか。\r\n\r\nそんな状況で、私は2021年末に個人開発のノートアプリ「Pieces of Paper」をFull SwiftUIに移行しました。本トークでは実際に移行を行った際に経験した様々な問題を中心に話したいと思います。\r\n\r\n- なぜ移行しようと思ったのか\r\n- 移行する方法\r\n- 実践する中でハマった数々の問題と対応\r\n  - `@ObservedObject` の意図しない初期化によるバグ\r\n  - 反映されると思った状態変数がnilになる\r\n  - UIKitベースのライブラリ（特にコア機能の PencilKit ）とのブリッジをどうするか、など\r\n- 移行するメリットはあったのか？",
            "accepted": false,
            "speaker": {
                "name": "蔀",
                "kana": "シトミ",
                "twitter": "0si43",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/8a92d5dc-4997-49f7-8b27-d98d244d30cc.jpg"
            },
            "created": "2022-06-01T11:52:06+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "2f8945b7-43d4-47bf-b86d-68eef70568e4",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/2f8945b7-43d4-47bf-b86d-68eef70568e4",
            "title": "パースエラー検知のためのロギング術",
            "abstract": "新機能リリース後、特定の条件でパースエラーが起きていることがユーザーからの問合せで判明した！という経験はありませんか？\r\nリリースされたアプリのクラッシュを検知する方法としてはXcodeのクラッシュログ・Firebase Crashlyticsなどが多く使われていますが、パースエラーを検知する方法は確立されていないように感じます。\r\nこのLTでは、起きてしまったパースエラーを検知するためのログ導入方法や、簡単に分かりやすく確認するために改善していったことをご紹介します。\r\n\r\n・パースエラーを検知する方法\r\n・ログ送信で注意するべき点\r\n・原因を把握しやすくするために工夫したこと\r\n\r\nアプリ内で起こるエラー検知方法やログ実装にお悩みの方のヒントになれば幸いです。",
            "accepted": false,
            "speaker": {
                "name": "伊藤静那",
                "kana": "イトウシズナ",
                "twitter": "shizuna_it",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/62a13d53-913a-4965-9709-15468f30ecb2.jpg"
            },
            "created": "2022-06-01T17:01:49+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "9832f98f-f144-4434-aa6e-b389e142b456",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/9832f98f-f144-4434-aa6e-b389e142b456",
            "title": "Feature Flagを使った開発で高速でストレスフリーなデリバリーを実現する",
            "abstract": "アプリの新機能開発では「リリースが施策開始時期と合わない」「Mainブランチと差分が広がり競合が発生する」「不具合等で元に戻すには差分を丸ごとRevertする」などの点が開発・デリバリー速度低下の要因となります。\r\nこの状況を改善するためRettyではFeature Flagを導入しました。これはコードに分岐を設け機能表出を切り替える手法で、必要差分を予め隠した状態でリリースし、フラグ反転によって瞬時に表出することができます。\r\nFeature Flagによって競合が起きにくくなる他、静的解析で分岐の特定が容易となり、さらに機能停止も手軽に行えます。\r\nこのトークでは、RettyでのFeature Flagの実装・運用方法、導入に役に立つライブラリをご紹介します。明日から高速でストレスフリーなデリバリーを実現しましょう！",
            "accepted": true,
            "speaker": {
                "name": "今泉智博",
                "kana": "イマイズミトモヒロ",
                "twitter": "imaizume",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3b347a39-29ea-47c6-b85c-91e27adf86f3.jpg"
            },
            "created": "2022-06-01T18:14:37+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T10:50:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "eb34a20e-18c5-4836-8e31-37871d6a36a7",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/eb34a20e-18c5-4836-8e31-37871d6a36a7",
            "title": "Siri Shortcut x Slack Workflow を使ってノーコードで業務を効率化しよう!",
            "abstract": "みなさんSiri Shortcutを使っていますか?\r\nSiri Shortcutには標準でHTTPリクエストの送信や条件分岐といったステップが装備されており、外部サービスと組み合わせ日常の業務を改善することができます。\r\n本トークではSlackの提供するWorkflowという機能と組み合わせ、私が実際に使用する業務効率化ショートカット(勤怠報告とお店データ報告)について解説します。\r\nまた「変数名が無い」「UIにクセがある」などのハマりポイント解説の他、条件分岐やファイル読み込みといった高度な機能の使い方もご紹介!\r\n「Siri Shortcutを使ってみたいけどまだ始められていない」というな初心者でもきっとすぐに使ってみたくなること間違いなし\r\nGASやIFTTTなど他のWebhookにも応用できますので、ぜひ本トークを聞いて明日からの業務改善に役立つショートカットを作ってみてください!",
            "accepted": false,
            "speaker": {
                "name": "今泉智博",
                "kana": "イマイズミトモヒロ",
                "twitter": "imaizume",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3b347a39-29ea-47c6-b85c-91e27adf86f3.jpg"
            },
            "created": "2022-06-01T18:16:01+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "04e24d0f-ca54-402c-9f8c-05a7babf9012",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/04e24d0f-ca54-402c-9f8c-05a7babf9012",
            "title": "SwiftUIも動く!? AppCodeを使いこなして快適な開発体験を手に入れよう!",
            "abstract": "「iOSやmacOSのアプリ開発に必要なエディタと言えば?」\r\nこの質問に「Xcode!」と即答しようとしたあなた! JetBrainsが提供する開発環境「AppCode」をぜひ一度試してみませんか?\r\n強力な静的解析やリファクタリング機能、あまたのプラグインに外部ツールとのインテグレーションなどなど、Xcodeでは実現できない、便利機能が盛りだくさん!\r\nさらにSwiftUIのプレビューもサードパーティツールを使ってシミュレーター上で利用可能!\r\n本トークでご紹介する各種機能や設定を通じて、AppCodeの素晴らしさを知り、あなたもぜひ快適なアプリ開発体験を手に入れてください!",
            "accepted": false,
            "speaker": {
                "name": "今泉智博",
                "kana": "イマイズミトモヒロ",
                "twitter": "imaizume",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3b347a39-29ea-47c6-b85c-91e27adf86f3.jpg"
            },
            "created": "2022-06-01T18:16:44+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "02dc5802-c2ac-4d43-9f5b-a103629a0ae1",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/02dc5802-c2ac-4d43-9f5b-a103629a0ae1",
            "title": "プロダクト改善を支えるイベント計測の設計と運用",
            "abstract": "ユーザーの行動分析や広告の効果検証の目的で、多くのプロダクトが Google Analytics for Firebase などの計測ツールを利用していることと思います。\r\n蓄積したデータを多様な分析に活用できるように、数百ものイベントを計測しているアプリもあるのではないでしょうか。\r\n\r\nしかし、そんな \"イベント計測\" のノウハウは個々のプロダクトの仕様に依る側面が大きいのもあり、広く共有されていない印象を持っています。\r\n\r\nこのセッションでは、僕らが提供するプロダクト「B\/43」でのイベント計測の設計と運用の一例を示しつつ、さらなる運用の最適化に向けた試行（イベント定義書からのコードの自動生成など）についてもお話ししていきます。\r\n\r\n【内容（予定）】\r\n・「B\/43」でのイベント計測の設計と運用の一例\r\n・イベント計測の設計規則と効率的な実装方法の検討\r\n・イベント定義書からのコードの自動生成の試行",
            "accepted": false,
            "speaker": {
                "name": "nakamuuu",
                "kana": "ナカムー",
                "twitter": "chickmuuu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/73dbdd36-355d-45ab-a15f-ee24b56a1e25.png"
            },
            "created": "2022-06-01T19:53:05+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "6c5adb7d-bf28-4558-abef-3efd4c6a78cb",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/6c5adb7d-bf28-4558-abef-3efd4c6a78cb",
            "title": "新卒が語る今更聞けないRxSwiftの学習方法",
            "abstract": "入社して初めて配属されたプロジェクトがRxだらけのソースでした。\r\n専門学校時代、RxSwiftのソースを頑なに避けていたこともあり全くと言っていいほどソースが読めませんでした。このままでは何もできないと思い非同期処理とRxSwiftについて学習してみました。\r\n\r\nこのトークでは、Rxを避け続けてきた、新卒がどのような手順を追ってRxについて学習したかをお話しします。\r\n- なぜRxSwiftを勉強しようと思ったのか\r\n- 何をやったか\r\n    - 非同期処理とは？\r\n    - Rxの書き方について",
            "accepted": false,
            "speaker": {
                "name": "Naoki",
                "kana": "ナオキ",
                "twitter": "naoki_mrmt",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/18212c8c-63ba-4564-ac6a-684f55bfd432.jpg"
            },
            "created": "2022-06-02T09:26:58+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "517cb156-3905-4dd7-b666-d2200049d822",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/517cb156-3905-4dd7-b666-d2200049d822",
            "title": "アニメーションAPIのすべて",
            "abstract": "iOSにはさまざまなアニメーションAPIがあります。思いつくだけでもUIView.animate()、Core Animation、UIViewPropertyAnimatorがあり、Core Animationが提供するAPIは膨大ですべてを使った人は稀でしょう。物理演算を追加するUIKit Dynamicsもあります。さらにSwiftUIでは.animation()や.withAnimation()というModifierによる手段が提供されています。\r\nこれらのAPIがカバーする範囲は重なっていて、同じことを別のAPIでも実現できます。それぞれのAPIをどのように使い分けるのでしょうか？\r\n\r\nこの講演では各APIの使い方を実用的なパターンの実例を示しながら解説し、どのような判断で使い分けるべきかを示します。すべてを明確に理解し、表現の引き出しを増やして、アニメーションをマスターしましょう！",
            "accepted": true,
            "speaker": {
                "name": "岸川克己",
                "kana": "キシカワカツミ",
                "twitter": "k_katsumi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/45e5a383-abb8-4424-9c7f-186eb802a1d2.jpg"
            },
            "created": "2022-06-02T09:55:07+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-11T11:05:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "1d0a6d65-3f91-4a1e-9086-d7c3362cd51e",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/1d0a6d65-3f91-4a1e-9086-d7c3362cd51e",
            "title": "おまえは今まで登録したUDIDの数をおぼえているのか?",
            "abstract": "新入社員の受け入れや新規端末購入の際に発生する面倒事として、UDIDの追加、証明書とProvisioning Profileの更新があります\r\nfastlaneを利用すれば作業は簡素になりますが、UDIDは都度入力する必要があり、運用担当エンジニアが手動でCLIを叩きがちです\r\nこの面倒事から逃げるために、GitHub Actionsで提供されているmanual workflowsを活用し、誰でもUDIDの追加をできるようにしました\r\nこのLTを見て、あなたも今日からUDID登録作業から開放されましょう",
            "accepted": false,
            "speaker": {
                "name": "mrtry",
                "kana": "トライ",
                "twitter": "mrtry_",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/f05e4f35-868f-43c6-b24d-dc43072843ef.jpg"
            },
            "created": "2022-06-02T10:10:03+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "b2171bc6-9745-4c11-aa20-adb0b60587f2",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/b2171bc6-9745-4c11-aa20-adb0b60587f2",
            "title": "読みとるから読み解くへ",
            "abstract": "身の回りにはさまざまな形式のデータが存在し、読みとるためのAPIが提供されています。\r\n例えば、AVFoundationを使えば、QRコードを読みとれます。CoreNFCであれば、iPhoneでNFCタグとデータをやり取りできます。\r\nデータ形式がJSONなら、Codableを使って簡単に変換できます。\r\n\r\nしかし、APIが用意されないデータの読み取りは自分で実装する必要があります。\r\nデータ形式や通信方式は特定の機関が標準化しており、電子証明書に利用されるASN.1はその一例です。\r\n標準化されているからといって、標準のAPIが提供されるとは限りません。\r\n\r\nこのトークでは、まず馴染みあるデータの読みとり方を整理します。\r\n次に、ASN.1を例に、Parserの基本原理、仕様の調べ方を解説し、実際に実装してみます。\r\n標準仕様の読み解き方とその実装方法を知ることで、処理できるデータの幅を広げましょう。",
            "accepted": false,
            "speaker": {
                "name": "Daiki Matsudate",
                "kana": "マツダテダイキ",
                "twitter": "d_date",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3a905196-9157-47e4-86f7-3977909d2563.jpg"
            },
            "created": "2022-06-02T11:14:05+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "a6999c47-0cb0-4f5b-b46c-8eb61141d80b",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/a6999c47-0cb0-4f5b-b46c-8eb61141d80b",
            "title": "１つのプロジェクトから複数のアプリを生み出す",
            "abstract": "Swift Packageはライブラリのバージョンを管理するだけでなく、プロジェクトの構成もになうことで、\r\nマルチモジュール構成を柔軟かつ簡単に構築することができます。\r\n\r\nこの構成によるモジュールの柔軟性を活用すると、アプリを１つのプロジェクトで複数管理しやすくなります。\r\n１つのプロジェクトで複数のアプリを管理することができれば、\r\nコードの共有や、CI\/CDのセットアップが簡単になり、メンテナンスもしやすくなります。\r\n\r\nうまく基盤を作ると、全く異なるプロダクトを混在させることも可能ですし、\r\nデザインのカタログのようなアプリや、特定の機能や条件を再現した小さなアプリにも活用できます。\r\n\r\nこのトークでは、Swift PMによるマルチモジュール構成を活用して、１つのプロジェクトで複数のアプリを管理してみます。\r\n実例も交えながら、みなさんのプロジェクトにも応用できるようにしようと思います。",
            "accepted": false,
            "speaker": {
                "name": "Daiki Matsudate",
                "kana": "マツダテダイキ",
                "twitter": "d_date",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3a905196-9157-47e4-86f7-3977909d2563.jpg"
            },
            "created": "2022-06-02T11:16:12+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "7646ca37-310b-42d1-8764-d80dd12714fd",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/7646ca37-310b-42d1-8764-d80dd12714fd",
            "title": "動画だけじゃない！iOS 15のピクチャ・イン・ピクチャを使って好きなUIを表示させよう！",
            "abstract": "iOS 14まではピクチャ・イン・ピクチャ（以下PiP）を表示させるには動画コンテンツが必要でした。\r\nしかし、新しくiOS 15でPiPのAPIが追加されたことにより動画コンテンツが無いただのUIViewもPiPとして表示させることが可能になりました！\r\n\r\nこれまでPiPを利用したアプリを3つリリースしてきた経験から、PiPを利用したアプリの開発からリリースするまでについて話したいと思います。\r\n\r\n・PiPに好きなUIを表示させる仕組みと実装\r\n・より良いPiP体験の提供\r\n・PiPでできないこと\r\n・Appleの審査を通過する\r\n\r\nPiPを使うことでユーザーにより良い体験を与えることができるアプリはたくさんあると自分は感じています。\r\nぜひこのセッションで得た情報をもとにPiPを使った良いアプリが増えれば良いと願っています！",
            "accepted": true,
            "speaker": {
                "name": "續橋　涼",
                "kana": "ツヅキハシ　リョウ",
                "twitter": "tsuzuki817",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/26c5c624-3837-4559-94be-21a8a76e6ec4.jpg"
            },
            "created": "2022-06-02T11:30:41+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-12T10:50:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8c8ddb8b-995b-41d3-ab41-0bfd112804df",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8c8ddb8b-995b-41d3-ab41-0bfd112804df",
            "title": "位置情報のアクセス権限に苦しむあなたへ、CoreLocationUIのすすめ",
            "abstract": "位置情報を利用するアプリケーションを開発したことのある方は、一度は位置情報のアクセス権限に苦しめられたことがあるのでは無いでしょうか。\r\n\r\nまたiOS 13からは 「1度だけ許可」という選択肢が追加され、アプリを利用する際のセッション毎にユーザーが位置情報サービスを許可するかどうか選べるようになったり、`requestAlwaysAuthorization` を呼び出した場合の選択肢が「使用中のみ許可」「一時的に許可」「許可しない」に変更されたりと、位置情報のアクセス権限は更にとっつき難い存在となっています。\r\n\r\nこのセッションではiOS 13以降の複雑な位置情報アクセス権限の全貌の紹介および、iOS 15で導入されたCoreLocationUIを用いることで簡単に利用できるようになった位置情報取得について紹介します。 ",
            "accepted": false,
            "speaker": {
                "name": "あつや",
                "kana": "アツヤ",
                "twitter": "n_atmark",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/678b54ad-c083-422a-a910-2919dd9467a4.jpg"
            },
            "created": "2022-06-02T14:33:30+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "6658d97f-e6dd-4e62-9d1c-80f90a322301",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/6658d97f-e6dd-4e62-9d1c-80f90a322301",
            "title": "UIKitとMetalで紐解くFlutter",
            "abstract": "昨今話題のFlutter。\r\n実はFlutter内部ではUIKitやMetalといったiOS技術が使われています。\r\nこのセッションではUIKitやMetalの解説と共に、Flutterの内部の仕組みを紐解きます。\r\n\r\n「タッチイベントはどのように処理されてる？」\r\n「どうやってレンダリングしてる？」\r\n\r\nそこが分かればもう怖くない！",
            "accepted": false,
            "speaker": {
                "name": "watanave",
                "kana": "ワタナベ",
                "twitter": "yohta_watanave",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7a6e1e57-553c-4b44-b123-4c0e6cf4ae77.jpg"
            },
            "created": "2022-06-02T15:12:45+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "d227bdeb-4a79-43a4-8db2-35f9ea036485",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/d227bdeb-4a79-43a4-8db2-35f9ea036485",
            "title": "UIKitとMetalで紐解くFlutter",
            "abstract": "昨今話題のFlutter。\r\nこのセッションではそのFlutter内部を、UIKitやMetalといったiOS技術をベースに紐解きます。\r\n\r\n「タッチイベントはどのように処理されてる？」\r\n「どうやってレンダリングしてる？」\r\n\r\nそこが分かればもう怖くない！",
            "accepted": false,
            "speaker": {
                "name": "watanave",
                "kana": "ワタナベ",
                "twitter": "yohta_watanave",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7a6e1e57-553c-4b44-b123-4c0e6cf4ae77.jpg"
            },
            "created": "2022-06-02T15:14:05+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "6f7e9abc-a905-4283-83c2-4fd977a0476b",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/6f7e9abc-a905-4283-83c2-4fd977a0476b",
            "title": "Readmeの代わりにDocCでプロジェクトを説明する方法",
            "abstract": "Swift-DocCは、Swiftフレームワークとパッケージ用の文書作成ツールです。 現在はオープンソースとして公開され発展しています。\r\n\r\nプロジェクトを説明する文書を作成する方法はいくつかあります。 そして最近ではgithubでReadMeをたくさん使っています。 プロジェクトに適切にコメントを作成したら、Swift-DocCでプロジェクトの説明文書を作成できます。\r\n\r\nAppleの公式文書を見るのに慣れているapple platforms developerのために、私たちのプロジェクトの説明にもDocCを活用する方法について説明します。\r\n\r\n実際のプロジェクトを説明するリンクを提供して、プロジェクトのoverViewを行います。\r\nsample: https:\/\/github.com\/M1zz\/SampleSwiftUI",
            "accepted": false,
            "speaker": {
                "name": "Leeo",
                "kana": "リ-オ",
                "twitter": "leeoios",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/2a7e5283-dbab-4b20-824f-206508ad6a9a.jpg"
            },
            "created": "2022-06-02T16:28:24+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "a45b16cb-ed78-4fd4-860c-2b042ff64f3b",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/a45b16cb-ed78-4fd4-860c-2b042ff64f3b",
            "title": "宣言的UIを徹底比較！SwiftUI x Jetpack Compose x Flutter",
            "abstract": "iOSのSwiftUI、AndroidのJetpack Compose、そしてマルチプラットフォームのFlutter…\r\n\r\nモバイル開発は宣言的UIの時代に突入しました。\r\nこのセッションではこれら3つのフレームワークの特徴や考え方、具体的な実装方法を比較します。\r\n\r\n他フレームワークの技術から得られる新しい発見、全てのフレームワークに共通する重要な概念を明らかにします。",
            "accepted": false,
            "speaker": {
                "name": "watanave",
                "kana": "ワタナベ",
                "twitter": "yohta_watanave",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7a6e1e57-553c-4b44-b123-4c0e6cf4ae77.jpg"
            },
            "created": "2022-06-02T16:39:03+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "5596da4d-ee08-4ffc-ad3e-735665901994",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/5596da4d-ee08-4ffc-ad3e-735665901994",
            "title": "宣言的UIを比較！SwiftUI x Jetpack Compose x Flutter",
            "abstract": "iOSのSwiftUI、AndroidのJetpack Compose、そしてマルチプラットフォームのFlutter…\r\n\r\nモバイル開発は宣言的UIの時代に突入しました。\r\nこのセッションではこれら3つのフレームワークで同じUIを構築するサンプルを紹介します。\r\n\r\nそこから見えてくる、全てのフレームワークに共通する重要な概念を明らかにします。",
            "accepted": false,
            "speaker": {
                "name": "watanave",
                "kana": "ワタナベ",
                "twitter": "yohta_watanave",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7a6e1e57-553c-4b44-b123-4c0e6cf4ae77.jpg"
            },
            "created": "2022-06-02T16:39:51+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8519b26b-d88c-4887-aafe-8e23c9eaa6b6",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8519b26b-d88c-4887-aafe-8e23c9eaa6b6",
            "title": "最高でいて、最強の開発環境とはを考えてみました。",
            "abstract": "世の中には様々なアプリやシステムがありますが、良いアプリを開発できている会社はどこも良い開発環境を提供しているように思えます。\r\nそこで考えてみましたが、本当に最高の開発現場とはどのようなものなのか？\r\n開発効率の良い、最高の開発環境とは🤔\r\n誰でも最大限のパフォーマンスを発揮できて、最高のものづくりを実現できる環境とは如何なるものなのかを考えてみました。\r\n",
            "accepted": false,
            "speaker": {
                "name": "keisukeYamagishi",
                "kana": "ヤマギシケイスケ",
                "twitter": "shichimi_0_o",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7acfa78f-fcf1-4485-b53e-45bb766f9160.jpg"
            },
            "created": "2022-06-02T17:29:50+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "15c14da6-ab43-4ead-83bd-e423eccbe221",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/15c14da6-ab43-4ead-83bd-e423eccbe221",
            "title": "Swift for Visual Studio Codeへの招待",
            "abstract": "昨年のクリスマス、Swiftチームからプレゼントが贈られました。\r\nなんとVSCodeでSwiftが公式にサポートされたのです。\r\n\r\nVSCodeのパワフルな機能を使って、Swiftで実装していくことができます。\r\nSwift Packageを利用してライブラリを導入したり、ビルドしたり。\r\nコードを補完したり、定義へのジャンプもできます。\r\n\r\nまた、拡張機能のおかげで、GitHub Copilotを使えば、AIが代わりにコーディングしてくれたり、\r\nswift-formatのおかげでSaveした瞬間にformatできるなど、快適なコーディング環境を実現できます。\r\n\r\nこのトークでは、お手元のVSCodeでSwiftを快適に利用するためのセットアップと、その使い心地についてお話しします。\r\nみなさんは明日からVSCodeを使ってSwiftを楽しむことになります。",
            "accepted": false,
            "speaker": {
                "name": "Daiki Matsudate",
                "kana": "マツダテダイキ",
                "twitter": "d_date",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3a905196-9157-47e4-86f7-3977909d2563.jpg"
            },
            "created": "2022-06-02T18:01:28+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "b50a5503-00e3-4dd3-ba1a-b28cd59c6a33",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/b50a5503-00e3-4dd3-ba1a-b28cd59c6a33",
            "title": "Swift Concurrency時代のiOSアプリの作り方",
            "abstract": "昨年、Swift Concurrencyが導入されました。当初はiOS 15のみでサポートされていましたが、Concurrencyのback deploymentが実現されたため、iOS 13以降であれば今すぐにでもConcurrencyを取り入れることができます。\r\n\r\nしかし、実際にConcurencyを取り入れようとすると、参考となる情報はまだまだ少ないのではないでしょうか。Conccurency自体の情報は豊富でも、iOSアプリ開発での活用、特にactorや単体テストなどについてはほとんど語られていないように思います。\r\n\r\n本トークでは、iOSアプリ開発におけるConcurrency活用の一つのベースラインとなることを目指して、async\/awaitやTask、actor、MainActorなどを、アプリやテストのコードにどのように取り入れるか、具体例を用いて紹介します。",
            "accepted": true,
            "speaker": {
                "name": "Yuta Koshizawa",
                "kana": "コシザワ ユウタ",
                "twitter": "koher",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7737e5c5-b322-4809-a107-0b2dcc0494ba.gif"
            },
            "created": "2022-06-02T18:49:22+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T13:00:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "59e83744-b218-4c3e-83e5-6f7edf83b1d6",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/59e83744-b218-4c3e-83e5-6f7edf83b1d6",
            "title": "パイオニアのiOSおじさんがFlutterスプリントに挑戦",
            "abstract": "老舗メーカー・パイオニアのiOSおじさんがFlutter初挑戦！\r\n\r\nデザインスプリントにインスパイアされ、中途採用で入ってきたFlutterエンジニアにFlutterを教わり、5日間でFlutterアプリ開発に挑戦！\r\n\r\n時代はFlutterなのか！？\r\nはたしてiOSおじさんはFlutterおじさんにジョブチェンジできるのか！？",
            "accepted": false,
            "speaker": {
                "name": "r1-okb",
                "kana": "アールワンオカベ"
            },
            "created": "2022-06-02T19:15:43+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "abe17596-e57e-4f3f-b3ee-a7d4dbf33f3c",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/abe17596-e57e-4f3f-b3ee-a7d4dbf33f3c",
            "title": "Safari Extension in iOS 15 - Building an Extension to Display Furigana",
            "abstract": "iOS 15 has brought extension support to Safari. In this talk, I will explore the extension API by building a Safari extension that displays Furigana annotations in the browser. I will discuss:\r\n- extension patterns, permissions & user interactions\r\n- interaction with native code\r\n- obtaining Kanji readings using CFStringTokenizer without additional dependencies\r\n- pitfalls and limitations",
            "accepted": false,
            "speaker": {
                "name": "Morten Bertz",
                "kana": "モルテン　ベルツ",
                "twitter": "telethonin",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/80915edf-a388-4f05-b5c7-88db31d1d8d5.png"
            },
            "created": "2022-06-02T19:43:45+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "5e883ff1-3323-4911-b38c-53bf91141e09",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/5e883ff1-3323-4911-b38c-53bf91141e09",
            "title": "CoreGraphicsでドット絵を描こう",
            "abstract": "このトークを通して、ドット絵を描くアプリを作ってみましょう。\r\nドット絵は、イメージの最小単位であるピクセルを塗ることで描くことが出来ます。\r\nCoreGraphicsの世界を通してピクセルを見ることで、普段意識しないイメージがどのようにしてメモリ内に格納されているかを知ることもできます。\r\nまた、CGContextを直接操作することでCGContextに存在しない描画APIの開発もしてみましょう！\r\nこのトークはドット絵エディタEditormodeの開発者がお送りします。\r\nhttps:\/\/apple.co\/3GJyqRF",
            "accepted": true,
            "speaker": {
                "name": "noppe",
                "kana": "ノッペ",
                "twitter": "noppefoxwolf",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/4efbdf7a-368f-4ac8-bd23-1a61282bcaba.png"
            },
            "created": "2022-06-02T21:36:20+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-11T13:00:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "a2164d63-1a7f-4fa3-9d06-613474e7d984",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/a2164d63-1a7f-4fa3-9d06-613474e7d984",
            "title": "CarPlay向けのアプリって開発できるの？",
            "abstract": "CarPlayを利用したことはありますでしょうか。\r\n\r\nCarPlayはiPhoneがあるだけで登録した地点までのナビをする、好きな音楽を再生するなど、車をすぐに自分の空間にすることができます。\r\n\r\n便利なCarPlayですが、ハードルが高く実際に触ってみたりアプリを作る機会は少ないのではないでしょうか。\r\nですが最近はiPhoneを繋いで動作するシミュレータや、安価なカーオーディオがあったりします。\r\nまたUIもTemplatesが用意されていたり試すのは意外と簡単だったりします。\r\n\r\n本LTでは、CarPlayの開発に必要な知識を振り返りつつ、簡単なアプリを動かせたらと思います。\r\n\r\n[ゴール]\r\n・CarPlayに興味が湧いて触ってみようかな、という気になる\r\n\r\n[アジェンダ]（検討中）\r\n・CarPlayとは\r\n・開発するために・・\r\n・シミュレータを触ってみよう\r\n・簡単なアプリを作ってみよう",
            "accepted": true,
            "speaker": {
                "name": "haseken",
                "kana": "ハセケン",
                "twitter": "haseken_dev",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/642977f2-9cbe-4dcf-a481-94d7923eb297.jpg"
            },
            "created": "2022-06-03T00:56:08+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T15:15:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "9edb3cd3-a10d-4bf8-8b14-567c3923ba1f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/9edb3cd3-a10d-4bf8-8b14-567c3923ba1f",
            "title": "入社して速攻でバリューを発揮する方法",
            "abstract": "note に入社して2ヶ月、報告したバグ数は 20 件以上。そのうち自分で修正したバグは 15 件以上。作ったPR は40以上。\r\nQA委員会やバグバッシュなどをやってきている note 社でさらに追加で20件以上みつけた手法や、1500 ファイル以上ある note プロジェクトから修正したいファイルを見つけていった手法についてはなします。",
            "accepted": false,
            "speaker": {
                "name": "西本 航",
                "kana": "ニシモトワタル",
                "twitter": "watura",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/524f4979-d44e-4c33-a048-5a047f028694.jpg"
            },
            "created": "2022-06-03T08:24:51+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "7be7e65c-3132-478c-b68c-fb65f9c234a9",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/7be7e65c-3132-478c-b68c-fb65f9c234a9",
            "title": "Core MLモデルの最適化とその利用",
            "abstract": "高速なアプリ体験の実現やアプリのプライバシー問題などから、オンデバイスで機械学習モデルを動かすことが増えてきています。\r\n\r\niOS上ではCore MLがよく利用されますが、PC上で動かす機械学習フレームワークよりも制約があり、出力が変わる問題が起こったり、\r\nモデルを構築できてもアプリ組込み時に、扱いにくいモデルになっていることもよくあります。\r\n\r\nこのトークでは特に問題が起きやすい、画像を扱うモデルについて、\r\n\r\n・使いやすく、運用しやすいモデルを構築する方法\r\n・Core GraphicsやAccelerateを使ったテクニック\r\n・MLエンジニアと協業方法\r\n・モデルの入出力を高速に変換する方法\r\n\r\nなどを紹介し、\"アプリエンジニア\" として機械学習に関われるようになる知識を提供します。\r\nGitHubにある学習済みモデルを自分でCore MLに変換して利用したい方にも役立ちます。",
            "accepted": false,
            "speaker": {
                "name": "たなたつ",
                "kana": "タナタツ",
                "twitter": "tanakasan2525",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6cab148f-85c7-4261-9f76-eaaff6906808.jpg"
            },
            "created": "2022-06-03T10:01:15+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "6ea3cfbe-0749-4979-bd86-c896e6023c4b",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/6ea3cfbe-0749-4979-bd86-c896e6023c4b",
            "title": "20分でわかる！速習resultBuilder",
            "abstract": "皆さんはresultBuilderを使った事があるでしょうか。\r\nSwift5.4で導入されたこの技術はConcurrencyの発表で少し影が薄くなりましたが、実は複雑な処理をシンプルかつ宣言的なものに置き換えられるとても便利な技術です。\r\n実際、私たちのチームではこれを用いることで、メンテコストの高い実装部分を大幅に改良する事が出来ました。\r\n本トークではresultBuilderとは何なのか、またどういう効果的な利用法があるのかを実際の導入事例を交えてご紹介致します。\r\n21分後にはあなたも1人前のresultBuilder！\r\n\r\nコンテンツ\r\n・resultBuilderとは\r\n・仕組みと実装方法\r\n・プロダクション導入の実例やライブラリの紹介\r\n・高度な活用方法\r\n\r\n聞き手の想定\r\n・resultBuilderの存在を知らない方\r\n・存在は知っているけど使い方がわからない方\r\n・活用イメージが湧かない方",
            "accepted": true,
            "speaker": {
                "name": "たまねぎ",
                "kana": "タマネギ",
                "twitter": "_chocoyama",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/52c5dbe1-2651-4c35-bedc-7d1b567cd11f.jpg"
            },
            "created": "2022-06-03T10:20:37+09:00",
            "timetable": {
                "track": "Track E",
                "starts_at": "2022-09-12T10:50:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "dc963bce-52bd-429c-86ed-9a7b314063ce",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/dc963bce-52bd-429c-86ed-9a7b314063ce",
            "title": "即時通知を導入する際に考えるべきこと",
            "abstract": "iOS 15から、即時通知と呼ばれる新しい通知が導入されました。これは、一定時間内に必ず確認してほしい情報を知らせる際に利用するもので、同じくiOS 15から導入された通知要約や集中モードを突破してユーザーの目に届く強力なものです。便利な反面、乱用するとユーザーに機能そのものをオフにされてしまう可能性があるため、使い所は精査する必要があります。\r\nまた、一度プロダクトに導入すると、その便利さ故つい使用箇所を増やしたくなってしまう可能性が高いですが、無論そういうわけにはいきません。安易に強力な通知配信を増やさないためには、開発メンバーの中で同じインプットが必要です。\r\n本セッションでは、一iOSユーザーとして即時通知を受け取ってきて再考する即時通知の使いどころ、実際にプロダクトに即時通知を導入してみて見えてきた、即時通知利用に関して開発メンバーでもつべき共通認識について導入事例と共にお話します。",
            "accepted": true,
            "speaker": {
                "name": "あおい",
                "kana": "アオイ",
                "twitter": "aomathwift",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/bfbe98fa-cbf9-4238-abbb-af3b9552c296.jpg"
            },
            "created": "2022-06-03T13:09:42+09:00",
            "timetable": {
                "track": "Track B",
                "starts_at": "2022-09-12T10:50:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "d01f10a2-5490-46cb-9009-9a4a68341bb6",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/d01f10a2-5490-46cb-9009-9a4a68341bb6",
            "title": "ボイラープレートコードとうまく付き合う",
            "abstract": "大規模なアプリを複数人で安定して開発するためには、アプリの設計や実装をある程度統一させることが望ましいです。特定のアーキテクチャの導入もその手段の一つでしょう。\r\nアーキテクチャに沿ったボイラープレートコードを適用することで、実装に統一性をもたせることができます。\r\n\r\nタクシーアプリ「GO」の iOS プロジェクトにも様々なボイラープレートコードが存在します。\r\n\r\n開発を進めていく中で、ボイラープレートコードの一部の命名を変更する必要が出てきたり、部分的に新たなボイラープレートの追加・削除が発生することがありました。\r\nこれらの作業は難しくはありませんが、ボイラープレートコードの量が多いとその手間は無視することができません。単純な作業であれ、開発効率を下げる要因の一つとなり得ます。\r\n\r\nこの課題をどのように解消し、ボイラープレートコードとうまく付き合えるようになったのかを具体例を交えて紹介します。",
            "accepted": false,
            "speaker": {
                "name": "Yosuke Imairi",
                "kana": "イマイリヨウスケ",
                "twitter": "kamekiti",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/9bddfdfc-5615-4c9a-9dd7-278541a06098.jpg"
            },
            "created": "2022-06-03T15:22:46+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "9c6e1923-0976-48ee-b813-1771a2210af1",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/9c6e1923-0976-48ee-b813-1771a2210af1",
            "title": "GDPR or \"similar\" statute",
            "abstract": "皆さんはGDPRという単語を聞いたことがありますか？はい、ヨーロッパの個人情報に関する法律ですね。ここで審査ガイドラインを見てみましょう。\r\n\r\n> the European Union's General Data Protection Regulation (\"GDPR\") or similar statute\r\n\r\nそう、GDPRのような法律はGDPRだけではないのです。GDPRさえ、ヨーロッパさえチェックしておけばいいなんてことはありません。個人情報保護規定はどの国にもあるのです。\r\n本LTでは、保護規程といえばまずはGDPR！な皆様と一緒に他国における類似の規定について学びます。\r\n\r\n話すこと\r\n- アプリ審査ガイドラインの振り返り\r\n- GDPRの振り返り\r\n- 2022年6月1日🇹🇭\r\n- JETROが注意喚起してるって知ってた？\r\n\r\n話さないこと\r\n- 法律への対処手段（専門家に聞いてください！）",
            "accepted": true,
            "speaker": {
                "name": "しもとり",
                "kana": "シモトリ",
                "twitter": "S_Shimotori_pub",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/e8aa4d46-a84b-4a50-88cd-663dbad7355e.jpg"
            },
            "created": "2022-06-03T15:27:08+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T16:10:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "6837f3b5-787a-40e1-a61b-102ee25593d2",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/6837f3b5-787a-40e1-a61b-102ee25593d2",
            "title": "仕事しているように見せるためのチケットの回し方",
            "abstract": "開発者の皆さん、リーダーやマネージャーに対しての進捗報告、相談に困ったりしていませんか？説明が長くなってしまったり、細かい部分を突っ込まれたり、最悪なケースではちゃんと進捗出してるのに評価してもらえない事もありますよね？\r\n\r\nここでは、（クセのある）開発者と長年仕事をしてきたプロジェクトマネージャーが経験に基づいて、チームで仕事をする際に必要な以下のポイントをお伝えします！\r\n・うまくいかないケースとは？\r\n・チケットの立て方\r\n・チケットの回し方（ステータスや担当者の変え方など）\r\n・進捗状況の可視化のポイント",
            "accepted": false,
            "speaker": {
                "name": "海保　研",
                "kana": "カイホ　ケン"
            },
            "created": "2022-06-03T15:36:38+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "e162ecee-3f72-4cc9-b874-8a20d3e07d58",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/e162ecee-3f72-4cc9-b874-8a20d3e07d58",
            "title": "リーダーになってしまった人向け！チームの回し方５ヵ条",
            "abstract": "チームリーダーになってしまって困ってしまった開発者はいませんか？元々リーダーシップの訓練も受けてないし経験もないのに任命されてしまって困ったことはないですか？\r\n\r\nここでは、（クセのある）開発者と長年仕事をしてきたプロジェクトマネージャーが経験に基づいて、これだけは最低限実行していけばリーダーとしてチームを回せる以下の５ヵ条を紹介します！\r\n・チームビルディング\r\n・役割分担\r\n・デイリーのポイント\r\n・振り返り\r\n・心が折れないために",
            "accepted": false,
            "speaker": {
                "name": "海保　研",
                "kana": "カイホ　ケン"
            },
            "created": "2022-06-03T15:38:21+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "309b680c-281a-410f-9e05-22872acdd7b1",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/309b680c-281a-410f-9e05-22872acdd7b1",
            "title": "iPad対応ガチ勢始めました 2022 - とある学習アプリの現在",
            "abstract": "abceedアプリにおけるiPad対応の経緯と現在の方針について詳らかにします。\r\nabceedは学習アプリとしてtoB向けにも展開していますので通常よりもiPadユーザーの割合が多く、広い画面で気持ちよく学習できるようデザインの最適化を積極的に行っています。\r\n今回は私からアダプティブレイアウトのひとつのやり方としていろいろなトピックを共有し、みなさんのなにか議論のきっかけとなれば嬉しいと思っています！\r\n以下のようなことを話す予定です。\r\n\r\n- 基準とする画面サイズの決め方\r\n- SizeClassを使わない理由\r\n- SplitView対応のポイント\r\n- ハードウェアキーボードとキーボードショートカット\r\n- 工数の見積もり\r\n- 品質担保(QA)",
            "accepted": false,
            "speaker": {
                "name": "鈴木　俊裕",
                "kana": "スズキトシヒロ",
                "twitter": "toshi0383",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7e3c5ca2-2566-4638-abd6-37276e006da6.jpg"
            },
            "created": "2022-06-03T15:56:11+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "4c680067-55d9-4f19-a883-838a2783ec68",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/4c680067-55d9-4f19-a883-838a2783ec68",
            "title": "Dear.エンジニアの皆様　〜エンジニアと一緒に見つけたい実装仕様〜",
            "abstract": "・プロダクトオーナー「こういう画面を実現したい！」\r\n・エンジニア「できます。。。」\r\n・エンジニア（心の声：HIGに違反しているんだよなー）\r\n・エンジニア（心の声：これ全部満たすと実装コスト跳ね上がるんだよなー）\r\n・エンジニア（心の声：保守性もさがるしなー）\r\n・エンジニア（心の声：でも、言ってもしょうがないし、やるか）\r\n\r\nこれを実現したプロダクトは、プロダクトオーナーが望む結果は得られていますが、HIGや、実装コスト、保守性を考慮した仕様になっていません。\r\nあるべきとしては、実現したい目的を共に理解し、その上で、HIG、実装難度、保守性を考慮した調整を行った上での実装仕様を、エンジニアの方と一緒に決めていきたいという話をしたいと思います。",
            "accepted": false,
            "speaker": {
                "name": "西島康之",
                "kana": "ニシジマヤスユキ"
            },
            "created": "2022-06-03T15:57:50+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "cf0d2912-8f56-42e4-9800-b8eced98f48e",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/cf0d2912-8f56-42e4-9800-b8eced98f48e",
            "title": "タクシーアプリ「GO」から学ぶ Google Maps SDK 活用術",
            "abstract": "タクシーアプリ「GO」は地図をベースとしたアプリです。地図には Google Maps SDK が利用されています。\r\n\r\nGoogle Maps SDK で提供される機能を駆使して、さまざまな情報を地図上で表現しています。\r\nその実装は難しいこともあり、あらゆる工夫を凝らして実現されているものもあります。\r\n\r\n「GO」での実例を元に、実装上のハマりポイントや苦労して実現したところ、開発時に遭遇した不思議な現象などを紹介します。\r\n\r\n・地図上を走るタクシーの動態表示\r\n・近くの道路に自動的に引き込ませる機能\r\n・ルートのグラデーション表示\r\n・タクシーを配車できないエリアを明示する\r\n・地図の中心点を変えずに、複数の地点が収まる形にズームレベルを調整する\r\n・地図のパフォーマンスを下げて省電力で動作させる\r\n・カラースキームで地図の雰囲気を変える\r\n・Google Maps における緯度経度の不思議\r\n\r\netc..",
            "accepted": true,
            "speaker": {
                "name": "Yosuke Imairi",
                "kana": "イマイリヨウスケ",
                "twitter": "kamekiti",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/9bddfdfc-5615-4c9a-9dd7-278541a06098.jpg"
            },
            "created": "2022-06-03T18:17:00+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-11T13:35:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "5c29a0e8-76e8-47e8-b73c-280d3d4cce02",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/5c29a0e8-76e8-47e8-b73c-280d3d4cce02",
            "title": "海外未経験の新卒がWWDC22に初現地参加した話 〜現地で見られたもの、得られたもの〜",
            "abstract": "2年連続で完全オンライン開催となっていたWWDCですが、今年は1日限定のスペシャルイベントがApple Parkで開催されることになりました。\r\n本LTでは、そんなスペシャルイベントに奇跡的に当選した私が、新卒で海外未経験、初WWDCというフレッシュな目線に立ちながらWWDC22に現地参加したことで見られたもの、得られたものを（NDAに抵触しない範囲で）紹介します。\r\n\r\n目次（予定）\r\n・コロナ禍における海外渡航で必要だった社内手続き\r\n・Developer Centerではどんな経験ができたのか\r\n・基調講演ライブビューイング中の現地での様子\r\n・Apple Parkで出会った人たちとコミュニケーションをとってわかったこと\r\n・スペシャルイベントにはまだ続きが…？ ”so much more…”の正体\r\n・WWDC22が僕をどう変えたか",
            "accepted": false,
            "speaker": {
                "name": "Ogijun",
                "kana": "オギジュン",
                "twitter": "juginon",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/aad51926-5703-444e-88fa-78f0df6c2db4.jpg"
            },
            "created": "2022-06-03T18:34:42+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "300c8247-53d6-4c29-9a9a-1fb6e0cd8828",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/300c8247-53d6-4c29-9a9a-1fb6e0cd8828",
            "title": "Swiftで作って遊ぼうDecentralized Application（DApp）",
            "abstract": "DAppとはビジネスロジックやストレージが分散されたアプリケーションです。\r\nブロックチェーンを使って実装されることが多く、DAppには下記のような利点があります。\r\n\r\n- ブロックチェーンが稼働している限りダウンしない\r\n- ストレージの更新等の操作がすべて保存・参照できる\r\n- 中央集権的な管理者であってもコンテンツを消したり情報を改竄する等の破壊的な操作ができない\r\n\r\nこのDAppをiOSアプリで構築する際には下記の点が障壁となります。\r\n\r\n- Swiftで実装された文献が殆どない\r\n- ブロックチェーンと開発に必要なツールの知識が一定必要となる\r\n\r\nこのセッションではこの障壁を減らすべく、iOSエンジニアの視点からEthereumを使ったDAppの開発に必要な知識と作り方を紹介します。\r\nなお、DAppを作ったことがない人・業務でブロックチェーンを使っていない人を聞き手に想定しています。",
            "accepted": false,
            "speaker": {
                "name": "k-kohey",
                "kana": "ケイコウヘイ",
                "twitter": "k_koheyi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ea73546f-6af2-4876-8787-585436c2b23c.jpg"
            },
            "created": "2022-06-03T18:37:45+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "9d9aa752-086b-426b-9016-8fe6a0872046",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/9d9aa752-086b-426b-9016-8fe6a0872046",
            "title": "Logger with Swift Concurrency",
            "abstract": "WWDC2021にて簡潔かつ堅牢に並行処理を記述できるSwift Concurrencyが発表されました。\r\nWWDCのセッションを通してSwift Concurrencyを学ぶことができますが、実世界の問題に対してどうこの技術が使えるかという文献はまだ少ないのではないでしょうか。\r\n\r\nこのセッションではSwift Concurrencyを用いて実装された実プロダクトで利用されているLoggerの実装を基に、どのように技術を適応したかを紹介します。\r\nまた、Swift Concurrencyに触れたことがない人でも理解できるように適宜Swift Concurrencyについての説明も行う予定です。\r\n\r\nなお引用する予定のコードはすべてOSSとして公開中しています。\r\nhttps:\/\/github.com\/k-kohey\/Parchment-swift",
            "accepted": false,
            "speaker": {
                "name": "k-kohey",
                "kana": "ケイコウヘイ",
                "twitter": "k_koheyi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ea73546f-6af2-4876-8787-585436c2b23c.jpg"
            },
            "created": "2022-06-03T18:40:49+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "81c88ad7-3a14-4762-a5a3-72be4cc6729f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/81c88ad7-3a14-4762-a5a3-72be4cc6729f",
            "title": "気をつけよう、マルチプラットフォーム開発のUIデザイン",
            "abstract": "React NativeやFlutterなどを使ったマルチプラットフォームアプリ開発は、1つの言語でiOSとAndroidの両方を同時に開発できるとても魅力的なアプリ開発の選択肢です。\r\nしかし、UIデザインの視点から見るとそう簡単にはいきません。それぞれのOSはそれぞれのUIガイドラインを持っており、開発者はそれに沿ったデザインの実装が求められます。\r\n本セッションでは、マルチプラットフォーム開発におけるUIデザインの違いを踏まえた各OSでの実装のポイントや落とし穴をいくつかご紹介します。\r\n\r\n目次（予定）\r\nHuman Interface Guidelinesとマテリアルデザイン\r\nデザイン実装におけるポイント・落とし穴\r\n・そのアイコン、マテリアルデザイン？\r\n・3ボタンナビゲーションを忘れるな\r\n・ここまで違うの？DateTimePicker\r\n・それぞれのOSで効果的な通知を！",
            "accepted": false,
            "speaker": {
                "name": "Ogijun",
                "kana": "オギジュン",
                "twitter": "juginon",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/aad51926-5703-444e-88fa-78f0df6c2db4.jpg"
            },
            "created": "2022-06-03T18:44:25+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "fe1fd6be-7dbb-4521-b5b6-51a751ff0939",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/fe1fd6be-7dbb-4521-b5b6-51a751ff0939",
            "title": "全力疾走中でも使えるストップウォッチアプリを作る",
            "abstract": "0.01秒が結果を左右する陸上競技の世界ではタイムはとても大切なものであり、日々の練習でもストップウォッチは欠かせません。\r\niPhoneにもストップウォッチがありますが、陸上競技の現場では画面上にあるボタンを押すことの難しさが致命的な欠点となり、実用に耐えないのが現状です。\r\nそんな問題を解決するために音量ボタンで制御可能なストップウォッチアプリを作成したところ、App Store Reviewガイドライン違反で公開が停止…\r\nどうすれば物理ボタンを使わずに全力疾走中でも使えるストップウォッチが作れるのか？\r\nストップウォッチのUXを最大限に高めるために検証した様々な対策を陸上競技歴15年の私が紹介します。\r\n\r\n目次（予定）\r\n・なぜ物理ボタンを使ってはいけないのか？\r\n・実際に作ってみた\r\na.近接センサーを使う\r\nb.加速度センサーを使う\r\nc.音を使う\r\nd.etc\r\n・結果：一番良いインタラクションは？",
            "accepted": true,
            "speaker": {
                "name": "Ogijun",
                "kana": "オギジュン",
                "twitter": "juginon",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/aad51926-5703-444e-88fa-78f0df6c2db4.jpg"
            },
            "created": "2022-06-03T18:52:21+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T11:25:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "4f56de04-0d5c-49ba-b2f8-12b25e36ad32",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/4f56de04-0d5c-49ba-b2f8-12b25e36ad32",
            "title": "SwiftPMのプラグイン機能をiOSアプリ開発に活用する",
            "abstract": "iOSアプリ開発にSwift Package Manager（SwiftPM）を活用するパターンを見かけるようになってきました。アプリ内のモジュール分割をSwift Packageを使って実現するパターンです。\r\n\r\nこの際、Swift 5.5以前のSwiftPMはビルド時に（SwiftGenなどで）コード生成する、などの処理を記述できませんでした。そのため、Xcodeプロジェクトのビルドスクリプト機能を使う必要がありました。\r\nしかし、Swift 5.6でSwiftPMにプラグイン機能が追加されたことで、Xcodeのビルドスクリプト機能に頼る必要がなくなりました。\r\n\r\n本トークでは、SwiftPMのプラグイン機能について解説し、iOSアプリ開発でSwiftPMをより一層活用するためのプラクティスをお話しします。",
            "accepted": true,
            "speaker": {
                "name": "宇佐見 公輔",
                "kana": "ウサミ コウスケ",
                "twitter": "usamik26",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a2e3859e-b0bf-4863-8d9d-c24fe5329c6c.jpg"
            },
            "created": "2022-06-03T19:28:14+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-10T18:10:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "41fd3e1e-b11a-4f7b-bf73-bf4216f1ca09",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/41fd3e1e-b11a-4f7b-bf73-bf4216f1ca09",
            "title": "Swift-DocCでチュートリアルを作ろう：ライブコーディング編",
            "abstract": "Swift-DocCは、Swiftフレームワークやパッケージのためのドキュメント作成ツールです。Swift-DocCの面白い特徴に、チュートリアルを作成できるという点があります。\r\n\r\nこのチュートリアルの作成方法の詳細は、今回のパンフレット記事に掲載します。\r\nhttps:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/dfd8c56c-468a-4115-804c-d1ca103eed62\r\n\r\n本トークでは、具体的なチュートリアルの作成過程をライブコーディングで紹介します。\r\nパンフレット記事とともに実際のチュートリアルの動きを見ることで、より理解を深められます。",
            "accepted": false,
            "speaker": {
                "name": "宇佐見 公輔",
                "kana": "ウサミ コウスケ",
                "twitter": "usamik26",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a2e3859e-b0bf-4863-8d9d-c24fe5329c6c.jpg"
            },
            "created": "2022-06-03T19:29:23+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "9cacce75-ebe2-4dc5-ab32-90346b185d4c",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/9cacce75-ebe2-4dc5-ab32-90346b185d4c",
            "title": "iOSアプリの新しいプロジェクト形式：Swift Playground App",
            "abstract": "昨年から、iPadのSwift PlaygroundsでiOSアプリの開発ができるようになりました。この際、従来のプロジェクト形式とは異なる「.swiftpm」拡張子のプロジェクト形式が使われるのはご存じでしょうか。実はこの「.swiftpm」は、Xcode 13.2以降で「Swift Playground App」としてXcodeでも作成できるようになっています。\r\n\r\nこの新しいプロジェクト形式は、どのようなもので、何ができるのでしょうか。従来のプロジェクト形式とは何が違うのでしょうか。\r\n\r\n「Swift Playground App」の具体的な情報はあまり公開されていませんが、私が手探りながら調査した知見をご紹介します。",
            "accepted": false,
            "speaker": {
                "name": "宇佐見 公輔",
                "kana": "ウサミ コウスケ",
                "twitter": "usamik26",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a2e3859e-b0bf-4863-8d9d-c24fe5329c6c.jpg"
            },
            "created": "2022-06-03T19:30:33+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "9dbcc4bc-bad4-4841-bd81-c915eefe651b",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/9dbcc4bc-bad4-4841-bd81-c915eefe651b",
            "title": "CreateML\/CoreMLでサクッと作るおもしろインタラクション",
            "abstract": "近年、Human computer interaction（HCI）の研究分野では機械学習を利用しスマートフォンのインタラクションをより豊かにする研究が多く行われています。\r\n\r\n・音声認識を利用しスマホで叩いた物体を認識\r\n・画像認識を利用しApple Pencilの機能を拡張\r\n・イヤホンのセンサを活用した行動認識\r\n\r\nこれらの研究を応用することで例えば、スマホで欲しい物を叩くだけでECサイトでその物を注文できるようになったり、非接触でモバイル端末の操作ができたりと今までのアプリに無いようなインタラクションを実現できます。本セッションではそのような研究事例を紹介し、実際にCreateML\/CoreMLで機械学習を使った面白いインタラクションをいくつか実装してみます。",
            "accepted": false,
            "speaker": {
                "name": "なかおかれい",
                "kana": "ナカオカレイ",
                "twitter": "_DS_Store",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/d2dbed02-e961-4270-a9b9-e989b1906255.jpg"
            },
            "created": "2022-06-03T19:55:51+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "213ec71a-faa1-44ee-a8a6-d37942d92afb",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/213ec71a-faa1-44ee-a8a6-d37942d92afb",
            "title": "CreateML\/CoreMLで作る最先端のインタラクション",
            "abstract": "近年、Human computer interaction（HCI）の研究分野では機械学習を利用しスマートフォンのインタラクションをより豊かにする研究が多く行われています。\r\n\r\n・音声認識を利用しスマホで叩いた物体を認識\r\n・画像認識を利用しApple Pencilの機能を拡張\r\n・イヤホンのセンサを活用した行動認識\r\n\r\nこれらの研究を応用することで例えば、スマホで欲しい物を叩くだけでECサイトでその物を注文できるようになったり、非接触でモバイル端末の操作ができたりと今までのアプリに無いようなインタラクションを実現できます。本セッションではそのような研究事例を紹介し、実際にCreateML\/CoreMLでモデル構築、デモアプリの実装を行います。CreateML\/CoreMLや機械学習に興味がある方、既存のアプリにはない面白い機能を実装したい方などに興味を持っていただける内容です。",
            "accepted": false,
            "speaker": {
                "name": "なかおかれい",
                "kana": "ナカオカレイ",
                "twitter": "_DS_Store",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/d2dbed02-e961-4270-a9b9-e989b1906255.jpg"
            },
            "created": "2022-06-03T19:58:21+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8b26bb21-27ec-4495-82bd-80a52f2fdee4",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8b26bb21-27ec-4495-82bd-80a52f2fdee4",
            "title": "SwiftUIとUIKitを仲良くさせる",
            "abstract": "SwiftUIが発表されてからすでに3年が経ちました。\r\nしかしいまだに開発現場から採用が難しいという声が聞こえてきます。\r\nUIKitとSwiftUIの併用も可能ですが、実際に採り入れてみるとさまざまな問題が発生しました。\r\nこのセッションではそれらの問題を解決する手法を紹介します。\r\n\r\n- レイアウト・プレビュー\r\n  - UIView \/ UIViewControllerをSwiftUIの中で使うとき\r\n    - RepresentableKitの紹介\r\n  - ViewをUIKitで使うとき\r\n- Appライフサイクル\r\n  - UIApplicationDelegateとUISceneDelegateを引き続き使う\r\n  - Appでまだ取得できないイベントをSwiftUIに伝える\r\n  - iOS 13の交互性を考慮する\r\n- 状態管理\r\n  - 共通の状態をどうするか\r\n  - 依存の受け渡し",
            "accepted": true,
            "speaker": {
                "name": "Apurin Mikhail",
                "kana": "アプリン・ミハイル",
                "twitter": "auramagi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6ab6ec73-e912-4780-a893-8ccd229181a2.jpg"
            },
            "created": "2022-06-03T21:39:26+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-11T14:10:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "ed6cd298-a775-4dc8-bf60-42313aa19f53",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/ed6cd298-a775-4dc8-bf60-42313aa19f53",
            "title": "SwiftUIとUIKitを仲良くさせる",
            "abstract": "SwiftUIが発表されてからすでに3年が経ちました。\r\nしかしいまだに開発現場から採用が難しいという声が聞こえてきます。\r\nUIKitとSwiftUIの併用も可能ですが、実際に採り入れてみるとさまざまな問題が発生しました。\r\nこのセッションではそれらの問題を解決する手法を紹介します。\r\n\r\n- レイアウト・プレビュー\r\n  - UIView \/ UIViewControllerをSwiftUIの中で使うとき\r\n    - RepresentableKitの紹介\r\n  - ViewをUIKitで使うとき",
            "accepted": false,
            "speaker": {
                "name": "Apurin Mikhail",
                "kana": "アプリン・ミハイル",
                "twitter": "auramagi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6ab6ec73-e912-4780-a893-8ccd229181a2.jpg"
            },
            "created": "2022-06-03T21:40:53+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "68cc2abf-a63c-4d27-9619-d94cbe253079",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/68cc2abf-a63c-4d27-9619-d94cbe253079",
            "title": "SwiftUIをアイコン画像のテンプレートとして使った話",
            "abstract": "Xcodeの複数バージョンを使い分けようとしたらDockに同じアイコンが並んでどれがどうだかもうわからない！\r\n\r\n＿人人人人人人＿\r\n＞　もう嫌だ!　＜\r\n￣Y^Y^Y^Y^Y￣\r\n\r\nアプリのアイコンを自由に変更できるmacOSの素晴らしい仕組みを使って、俺得なCLIツールをSwiftで開発しました。\r\nしかもアイコンのテンプレートはみんな大好きSwiftUIで作れるようにしました。\r\n\r\n- auramagi\/NewIconの紹介\r\n- ArgumentParserでCLIツールを作る\r\n- mintで配布する\r\n- Swiftを動的ライブラリとしてビルドしてdlsymでランタイム時にロードする\r\n\r\n参考） https:\/\/github.com\/auramagi\/NewIcon",
            "accepted": false,
            "speaker": {
                "name": "Apurin Mikhail",
                "kana": "アプリン・ミハイル",
                "twitter": "auramagi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6ab6ec73-e912-4780-a893-8ccd229181a2.jpg"
            },
            "created": "2022-06-03T21:42:47+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f32dbaae-6476-4b68-829f-f7c95c03f515",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f32dbaae-6476-4b68-829f-f7c95c03f515",
            "title": "おまえは今までにインストールしたXcodeのバージョンをおぼえているのか？",
            "abstract": "Xcodeの複数バージョンを使い分けようとしたらDockに同じアイコンが並んでどれがどうだかもうわからない！\r\n\r\n＿人人人人人人＿\r\n＞　もう嫌だ!　＜\r\n￣Y^Y^Y^Y^Y￣\r\n\r\nアプリのアイコンを自由に変更できるmacOSの素晴らしい仕組みを使って、俺得なCLIツールをSwiftで開発しました。\r\nしかもアイコンのテンプレートはみんな大好きSwiftUIで作れるようにしました。\r\n\r\n- auramagi\/NewIconの紹介\r\n\r\n参考） https:\/\/github.com\/auramagi\/NewIcon",
            "accepted": false,
            "speaker": {
                "name": "Apurin Mikhail",
                "kana": "アプリン・ミハイル",
                "twitter": "auramagi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6ab6ec73-e912-4780-a893-8ccd229181a2.jpg"
            },
            "created": "2022-06-03T21:44:09+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "a5b23fcf-2f6b-479b-99f4-58654d0ff5ae",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/a5b23fcf-2f6b-479b-99f4-58654d0ff5ae",
            "title": "20分間で振り返るIn-App Purchaseの歴史",
            "abstract": "iOSにおけるIn-App Purchase(アプリ内課金)はiOS 3から利用可能であり、その歴史は10年以上に及びます。\r\nこの長い歴史の中で、Ask to BuyやUpgrade \/ Downgrade、お試しオファーなどの多くの仕組みが追加され、やれることが格段に増えました。\r\nアプリ内課金をサポートするための仕組みも、Store Kit 2による実装方法の変更やアプリ内での返金機能をはじめ、Server NotificationsやTransaction Receiptのフォーマットの変更など、新しいものが次々にリリースされたり、StoreKit Testingによって自動テストが出来たりSandbox環境がアップデートされたりなど、課金のテストにまつわる状況も大きく変わりました。\r\n本トークでは、20分間でIn-App Purchaseの激動の歴史をじっくり振り返っていきます。",
            "accepted": true,
            "speaker": {
                "name": "inokinn",
                "kana": "イノキン",
                "twitter": "inokinn",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6e9347db-5cf8-4f32-8dfe-7da08f4c78aa.jpg"
            },
            "created": "2022-06-03T22:46:47+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-10T18:45:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "53652edb-72e6-4851-b487-b2622ef50d58",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/53652edb-72e6-4851-b487-b2622ef50d58",
            "title": "5分間で振り返るIn-App Purchaseの歴史",
            "abstract": "iOSにおけるIn-App Purchase(アプリ内課金)はiOS 3から利用可能であり、その歴史は10年以上に及びます。\r\nこの長い歴史の中で、Ask to BuyやUpgrade \/ Downgrade、お試しオファーなどの多くの仕組みが追加され、やれることが格段に増えました。\r\nアプリ内課金をサポートするための仕組みも、Store Kit 2による実装方法の変更やアプリ内での返金機能をはじめ、Server NotificationsやTransaction Receiptのフォーマットの変更など、新しいものが次々にリリースされたり、StoreKit Testingによって自動テストが出来たりSandbox環境がアップデートされたりなど、課金のテストにまつわる状況も大きく変わりました。\r\n本トークでは、5分間でIn-App Purchaseの激動の歴史を爆速で振り返っていきます。",
            "accepted": false,
            "speaker": {
                "name": "inokinn",
                "kana": "イノキン",
                "twitter": "inokinn",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6e9347db-5cf8-4f32-8dfe-7da08f4c78aa.jpg"
            },
            "created": "2022-06-03T22:48:03+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "5b92af5a-6ec0-4f0d-b3b6-dcdedab5cf95",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/5b92af5a-6ec0-4f0d-b3b6-dcdedab5cf95",
            "title": "「人生100年時代」に知っておきたいHealthKit",
            "abstract": "HealthKitを使ったアプリの開発経験はありますか？\r\n近年の健康志向の高まりからヘルスケア連携したiOS開発に関わる機会も増えていると思います。\r\nこのLTではHealthKitをはじめて扱う上で最低限抑えておきたい知識や、実際に利用したアプリを作った際に気づいたポイントについてご紹介します。\r\n\r\n・HealthKitでできること\r\n・扱えるデータの種類について\r\n・データのプライバシーについて\r\n・注意するポイント\r\n\r\n「運動しなきゃなぁ」と思っている皆さん。自分でHealthKitを使ったアプリを作って運動不足解消しませんか？",
            "accepted": false,
            "speaker": {
                "name": "新堂 敬隆",
                "kana": "シンドウヨシタカ",
                "twitter": "shindyu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/0387ce45-8f99-4b49-81e4-bfd90290d4bc.jpg"
            },
            "created": "2022-06-04T01:51:51+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "40f51161-9c44-4330-ba92-e9aa407454c3",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/40f51161-9c44-4330-ba92-e9aa407454c3",
            "title": "詳解 Core NFC - NFC を用いた iOS App 開発のてびき",
            "abstract": "NFC とは駅・空港での自動改札機やお店での電子マネー決済、社員証や学生証をかざした入退出管理など、日常でよく見かけるアレを叶える技術です。\r\n\r\niPhone に搭載されている NFC を私たちの App で使うためには Core NFC を用います。これは iOS 11 から利用可能になり、iOS 13 のタイミングで大きくアップデートされました。昨今の情勢から非接触技術が注目されたり、eKYC に利用できたりと、現在進行形でさまざまな App で利用が広がっています。\r\n\r\n私は iOS 13 のときから3年間、この Core NFC を使った App の個人開発を続け、関連する OSS も公開してきました。それによって得た iOS 固有の NFC 利用まわりの知見や、これから Swift Concurrency + Core NFC を活用する App を開発する際の流れ・例を紹介します。",
            "accepted": true,
            "speaker": {
                "name": "treastrain \/ Tanaka Ryoga",
                "kana": "タナカリョウガ",
                "twitter": "treastrain",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/753386c2-a1c1-41e2-815f-9e2a2dfdac96.jpg"
            },
            "created": "2022-06-04T05:50:57+09:00",
            "timetable": {
                "track": "Track B",
                "starts_at": "2022-09-11T14:10:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "eba80dcc-90e8-4ebf-825a-34561d177531",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/eba80dcc-90e8-4ebf-825a-34561d177531",
            "title": "アプリケーションアイコンのライブドローイング",
            "abstract": "macOSやiOSのアプリケーションアイコンは強いスタイルがが存在します。「立体的に」とか「シンプルに」とかHIGでも書かれているけど、書くは易し。実際には何をどう描けばその立体感は実現するのでしょうか。特にmacOSのアイコンは物体のリアリズムが求められ、リッチな陰影表現が必要となります。大丈夫です。3Dモデリングをせずとも、ぼかしやグラデーションなどの組み合わせでこう言った表現は実現できるのです。\r\nこのセッションでは、CotEditorやSparkleフレームワークなどのアプリケーションアイコンを手掛けた1024jpが、Illustratorを使ってmacOSアプリケーションアイコンを解説しながら実際に時間内でイチから描きます。これはライブです。",
            "accepted": false,
            "speaker": {
                "name": "1024jp",
                "kana": "せんにじゅうよんジェーピー",
                "twitter": "1024jp",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6c9537e1-f527-4ef4-803f-132c9ed5a34d.jpg"
            },
            "created": "2022-06-04T13:52:36+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "cde58bcd-9d53-41ca-9bab-1d44d19f2500",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/cde58bcd-9d53-41ca-9bab-1d44d19f2500",
            "title": "OSSのアプリケーションを開発「し続ける」ための哲学",
            "abstract": "自分達のアイデアを形にして新しいサービスをラウンチするのは興奮するものですし、さらにそれを軌道にのせてマネタイズするまでのノウハウは開発者の成功の証として世に溢れています。一方、アプリケーションの開発を「続ける」ことは、そのような華々しさとは縁遠く、かつフリーウェアとなれば生計を立てる外でそれを実行する必要があります。\r\n発表者は2014年にOSSのmacOSアプリケーションCotEditorの開発を引き継ぎ、以来おおよそ月に1回のリリースを8年以上続けています。OSS開発を続けるということはどういうことなのか、どうモチベーション維持をするのか、このトークではそんなCotEditorプロジェクトを続けている哲学を紹介します。以下のような話を含みます：\r\n・開発の基本方針\r\n・開発を続けるモチベーション\r\n・ユーザからのフィードバックとの付き合い方",
            "accepted": true,
            "speaker": {
                "name": "1024jp",
                "kana": "せんにじゅうよんジェーピー",
                "twitter": "1024jp",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6c9537e1-f527-4ef4-803f-132c9ed5a34d.jpg"
            },
            "created": "2022-06-04T13:53:31+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-12T11:25:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "a8f8be31-d5d2-413b-b86a-1b2e195f63aa",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/a8f8be31-d5d2-413b-b86a-1b2e195f63aa",
            "title": "SceneKit AND SwiftUI",
            "abstract": "SceneKit は３次元空間で物理シミュレーションなどの複雑なアニメーションを可能とする Framework です。ですから ARKit を利用したアプリやゲームアプリなどの開発を行わない開発者にとっては遠い存在にも感じるかもしれません。\r\nしかし、紙吹雪アニメーションなど、一定のランダム性を必要とする場面では Core Animation にも限界が来てしまいます。そんなときに便利なのが SceneKit です！\r\n\r\n・寄付アプリ「dim.」での実例紹介\r\n・SwiftUI で SceneKit を利用\r\n・SceneKit で iOSDC を表現（リアルタイム実装）\r\n\r\nこのトークでは、SceneKit の活用事例をご紹介するとともに、5分という制限時間内で SceneKit を用いた機能をリアルタイムで構築します。トーク終了後には SceneKit の虜になっていること間違いなしです！",
            "accepted": true,
            "speaker": {
                "name": "AkkeyLab",
                "kana": "アッキーラボ",
                "twitter": "AkkeyLab",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/34c44ff4-7d0f-4e23-b783-13538313cf72.jpg"
            },
            "created": "2022-06-04T13:55:59+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T16:20:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "333a3c78-f3bf-4ec7-8402-7a7396173994",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/333a3c78-f3bf-4ec7-8402-7a7396173994",
            "title": "Swift言語ガイド日本語版が公式サイトに載りました ~ちょっとだけ駆動行動のススメ~",
            "abstract": "今年の6月、個人的に作り始めたSwift言語ガイド日本語版のリンクを公式サイトに掲載していただきました。\r\n\r\n最初から目標としていた訳ではなく、ふとした思いつきから始め、途中で「せっかくだから何か目標が何かあった方が良い」と思い、後付けで目標を掲げたところ、多くの方のサポートや応援をいただき、今回1年越しに達成することができました。\r\n\r\n何かやってみようと思ったけどやらず、「やっぱりやっておけば良かったかなあ！」と後悔すること、ありませんでしょうか？僕はいつもです。\r\nそんな僕でも、なんだかんだ色々なことを始め、結果やって良かったと思えることがたくさんあります。今回は、僕が「よし、これやってみよう」と行動を始めるきっかけをどう作り、続けていくかをお伝えすることで、何かちょっと始めてみようかなと考えるきっかけになれば良いなと思っています。\r\n※ 技術的な話はしません。ただただ僕の思いを伝えます。",
            "accepted": false,
            "speaker": {
                "name": "shiz",
                "kana": "しず",
                "twitter": "stzn3",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/f774feb6-6744-4bad-93f5-7c3fe516058b.jpg"
            },
            "created": "2022-06-04T14:41:12+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "acf1afa3-5e4e-4190-a665-c4bb1d174434",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/acf1afa3-5e4e-4190-a665-c4bb1d174434",
            "title": "JavaScriptに頼らない Web コンテンツ操作",
            "abstract": "「WKWebViewではAPIがないから、JS挿入するか」\r\n皆さんはこんな状況に遭遇したことはありませんか？\r\n\r\nご存知の通りWKWebViewはアプリでWebコンテンツを表示、操作が可能な便利なAPIです。\r\nWKWebViewでは提供されていないコンテンツ操作をしたい場合でも、JavaScript（以下JS）を挿入することで可能になります。\r\nしかしJSに頼った実装にはデメリットも。。\r\n\r\nそんな中iOS14.5やWWDC21の発表で、コンテンツ操作のAPIが新たに加わりました。\r\n本LTでは、そのAPI登場前の実装との比較を用いてその威力を紹介します。\r\n\r\n【目次】（予定）\r\n- JSに頼ったWebコンテンツ操作のメリット・デメリット\r\n- 新たなAPIの概要と追加前の実装との比較\r\n    - テーマカラーの取得\r\n    - テキスト選択のコントロール\r\n    - コンテンツ内メディアのコントロール",
            "accepted": false,
            "speaker": {
                "name": "kamimi01",
                "kana": "カミミ",
                "twitter": "kamimi_01",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/e40e6277-42cd-46b3-aaab-fcee07e0230f.jpg"
            },
            "created": "2022-06-04T18:08:45+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f7323f3d-bc3a-4a6c-b591-3ca0f73bad49",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f7323f3d-bc3a-4a6c-b591-3ca0f73bad49",
            "title": "手で触れずにアプリを動かす技術",
            "abstract": "iPhoneがスマートフォンと称されてはや数年。\r\n巨大なタッチスクリーンを備えたiPhoneはその操作性でたくさんの人に受け入れられてきました。\r\nでも、ちょっと待ってください。タッチしないと動かないって、いまいちスマートじゃなくないですか？\r\n\r\nそんなわけで、iPhoneを触らずともアプリをなんとか動かすことができないか、様々な技術を駆使してアプリを動かせないかを検討してみます。\r\n例えバッキバキに割れたiPhoneでも、見事動かしてみせましょう。",
            "accepted": true,
            "speaker": {
                "name": "日向強",
                "kana": "ヒュウガツヨシ",
                "twitter": "coffeegyunyu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/0c8845ab-4898-48ce-86c6-38b0a2129d34.jpg"
            },
            "created": "2022-06-04T21:51:57+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-11T16:25:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "d3066d1e-4a8b-4a0d-85c8-ef648875fee0",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/d3066d1e-4a8b-4a0d-85c8-ef648875fee0",
            "title": "段階的に導入して理解するDI Container",
            "abstract": "依存性の注入(DI)によりコンポーネント間の結合度を低めるのは良いことですが、コンポーネントの再利用にかかる依存関係解決のコードはボイラープレートになりがちです。この問題を解決する手段として、依存関係およびそれらのライフタイムを管理するコンテナクラスであるDI Containerの導入が考えられます。\r\n\r\n本トークでは、SwiftUIで開発されたiOSアプリにDI Containerを段階的に導入しながら、各ステップでどのような問題が解決されていくかについてお話しします。\r\n\r\nアジェンダ\r\n・DIおよびDI Containerについて\r\n・DIの導入\r\n・DI Containerの導入\r\n    ・動的な依存関係の解決\r\n    ・静的な依存関係の解決\r\n    ・コードの自動生成による静的な依存関係の解決\r\n・DI Containerでのスコープ管理\r\n・マルチモジュールにおけるDI Container",
            "accepted": false,
            "speaker": {
                "name": "岩名 勇輝",
                "kana": "イワナ ユウキ",
                "twitter": "_rockname",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/bac50e47-837f-4990-ac92-da0b5a3f3c20.jpg"
            },
            "created": "2022-06-04T22:48:35+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "c7a0f2d7-68a7-47e4-91fc-62f68eee2c2f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/c7a0f2d7-68a7-47e4-91fc-62f68eee2c2f",
            "title": "レトロゲームを楽しむ環境を構築する",
            "abstract": "ファミコン、スーファミ、ゲームボーイ、64、GC、Wii、PS1、PS2のレトロゲームをiPhone\/Macで遊ぶ話です。\r\nWindowsと比べて、Macの情報がなく、令和では手に入りにくい物だったりで、無いものは作りました。\r\n再び、昔懐かしいゲームを楽しみましょう！\r\n\r\n当日のLT内容(予定)です。\r\n・違法ダウンロードは絶対ダメ\r\n・ 無いものは作ったゲームソフトの吸い出し機\r\n・ ゲームコントローラーを認識させる\r\n・ レトロゲームをプレイ！",
            "accepted": true,
            "speaker": {
                "name": "赤田　進（Sam Akada）",
                "kana": "サム　アカダ",
                "twitter": "sam_akada",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a2877b4e-9275-4b07-976b-f05d173c0f4d.jpg"
            },
            "created": "2022-06-05T10:47:38+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-11T15:25:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8984715a-c5be-44de-b9a8-c7e229113c61",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8984715a-c5be-44de-b9a8-c7e229113c61",
            "title": "鉄はMetalかMetalは鉄か",
            "abstract": "Metalは2014年のWWDCでGPUを扱うフレームワークとして登場しました。\r\n直接使うことは多くないとはいえ、今や数多くのフレームワークを支えている重要なフレームワークです。\r\n\r\nしかしなぜMetalという名前なのでしょうか？\r\n私はその名前の由来にたどり着くことはできませんでした。\r\n\r\nそういえばこの世界も見渡せば数多くのものが金属に支えられており、金属なしには現代文明は成り立ちません。\r\nもしかすると様々なものの土台となる存在としてMetal(金属)と名付けられたのではないでしょうか？\r\n\r\n私は日々そんなことを考えながらMetalを使ってプログラムを書いたり、砂鉄を集め炭で加熱し鉄を作ったりしています。\r\nこのLTでは我々に最も身近な金属である鉄と、フレームワークとしてのMetalの共通点を探ります。\r\n何を言っているのかわからないと思いますが鉄の作り方を通して暑い夏をより熱く盛り上げます。",
            "accepted": false,
            "speaker": {
                "name": "ta_ka_tsu",
                "kana": "タカツ",
                "twitter": "ta_ka_tsu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6abf906a-d31b-4acb-9223-dba0739142e6.png"
            },
            "created": "2022-06-05T10:52:40+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "e0a2db94-aaee-4336-a273-9c2fff2eddff",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/e0a2db94-aaee-4336-a273-9c2fff2eddff",
            "title": "続・めくるめくシェーダアートの世界",
            "abstract": "シェーダアートとはシェーダと呼ばれるGPUで実行されるプログラムを記述することで様々なイメージをスクリーン上に表現する手法のことです。\r\nシェーダでは各ピクセルの座標値と共通のデータを入力として色を出力する関数を記述するだけですが、その手法は様々で驚くべき表現が可能となります。\r\n\r\n3年前のiOSDC2019「めくるめくシェーダアートの世界」ではシェーダアートの原理を細かく説明しました。\r\nしかし原理や基礎から丁寧に説明することに重きを置いたため、「レイマーチングを使用した3D表現」に関してはあまり時間を割くことができませんでした。\r\nレイマーチングを駆使してからがめくるめく世界への入り口であるというのに！\r\n\r\nそこで本トークではレイマーチングを使用した3D表現の解説に重きを置いて再びシェーダアートの原理とその魅力を語ります。",
            "accepted": false,
            "speaker": {
                "name": "ta_ka_tsu",
                "kana": "タカツ",
                "twitter": "ta_ka_tsu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6abf906a-d31b-4acb-9223-dba0739142e6.png"
            },
            "created": "2022-06-05T11:13:48+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "fd60a846-e3d9-49b1-bae9-892e8e5758d8",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/fd60a846-e3d9-49b1-bae9-892e8e5758d8",
            "title": "機能開発しながらアプリを改善し続けるために",
            "abstract": "ZOZOTOWN iOSチームには、緊急性は低い（あるいは明確な納期がない）が重要度が高い「効果性の領域」と呼ばれる放っておくといつまでも解決されない課題を探し改善する取り組みがあります。もちろん、改善の取り組みをするからといって機能開発を止めることはありませんし、改善専門部隊がいるわけでもありません。\r\n機能開発をしながら、限られたリソースで改善活動をし続けるために役立つポイントをご紹介したいと思います。\r\n- まずは改善活動への命名をしよう\r\n- 効率よく改善するために課題を見極める\r\n- 課題を発見するための仕組み\r\nその結果、取り組みは2年間ほど継続しており、数値を2倍改善した実績もあります。 　\r\n改善したいけどどう始めていいか悩んでいる方必見です！",
            "accepted": false,
            "speaker": {
                "name": "えんどう",
                "kana": "エンドウ",
                "twitter": "re___you",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ba5a00aa-3ac8-46a1-b362-9a0ad328f5ec.jpg"
            },
            "created": "2022-06-05T11:53:24+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "b2848be9-6d46-4d8a-8837-06b533b13348",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/b2848be9-6d46-4d8a-8837-06b533b13348",
            "title": "機能開発しながらでもアプリを改善し続けるための準備",
            "abstract": "突然ですが、続けることって難しいですよね。例えば、機能開発しながらコツコツとリファクタリングすることや、テストを追加するなど。\r\nでも忙しくなってしまうと後回しになって途中でその取り組みが超滅・・・なんて経験したことないですか？\r\nそんな経験をしたことある方必見です！\r\n\r\nZOZOTOWN iOSチームには、緊急性は低いが重要度が高い「効果性の領域」と呼ばれる放っておくといつまでも解決されない課題を探し改善する取り組みがあります。\r\nそしてその活動を2年ほど継続してきました。\r\n本トークでは「継続」にフォーカスして、機能開発をしながらでも改善活動をし続けるために役立つ準備をご紹介したいと思います。\r\nどれも簡単なことですが、効果は侮れません。続けたくてもなかなか続かない人の参考になれれば幸いです。\r\n- まずは改善活動への命名をしよう\r\n- ゴールを決めよう\r\n- やることとやらないことを決めよう",
            "accepted": false,
            "speaker": {
                "name": "えんどう",
                "kana": "エンドウ",
                "twitter": "re___you",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ba5a00aa-3ac8-46a1-b362-9a0ad328f5ec.jpg"
            },
            "created": "2022-06-05T11:54:39+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "fa87f700-1483-456b-9b28-ba7c119cfa69",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/fa87f700-1483-456b-9b28-ba7c119cfa69",
            "title": "The state of Swift for WebAssembly in 2022",
            "abstract": "SwiftのWebAssembly対応を進めている、SwiftWasmというプロジェクトがあります。\r\n\r\n現在、WebAssemblyはWebブラウザ上の用途だけでなく、「複数言語からコンパイルできて様々な環境で動く高速なプログラム」として、エッジコンピューティングやIoT、ブロックチェインにおけるスマートコントラクトなど、様々な分野で用途が模索されています。\r\n\r\nもし将来的にWebAssemblyが覇権を取った場合、そこでSwiftが活躍できるポジションはあるのでしょうか？\r\n\r\nこのトークでは、Wasm対応によって達成できる未来、プロジェクトの最新状況と課題、実際の活用事例を紹介したいと思います。\r\nAppleプラットフォーム以外でのSwiftの活用に興味のある方には、特に楽しんで頂ける内容になる予定です。",
            "accepted": true,
            "speaker": {
                "name": "kateinoigakukun",
                "kana": "カテイノイガククン",
                "twitter": "kateinoigakukun",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/782580bb-7ce7-4a8a-a039-a3676c774778.jpg"
            },
            "created": "2022-06-05T13:30:45+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-12T13:00:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "9d542893-3c30-4077-a85a-1c7ec68caa9c",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/9d542893-3c30-4077-a85a-1c7ec68caa9c",
            "title": "Xcode が遅い! とにかく遅い!! 遅い Xcode をなんとかする方法",
            "abstract": "Xcode が遅い。とにかく遅い!! あああ!!!\r\n\r\n皆さんはそんな経験ありませんか...?\r\n\r\niOS アプリの開発にはなくてなはならないツール、それは Xcode です。\r\nしかし、Xcode がとにかく遅いのです。\r\nアプリが成長し、ワークペースが巨大になり、多くのターゲットができるにつれてどんどん遅くなり、最後にはハングして終了すらできなくなってしまいます。\r\nこのセッションではそんな遅い Xcode を使えるように頑張った経験をもとに、Xcode のビルドの仕組み、そして Bazel などほかのビルドツールについても検証したいと思います。\r\n\r\n対象とする方:\r\n- Xcode が遅くて辛い方\r\n- 大きなアプリを作っている方\r\n- killall XCBBuildService が癖になってしまった方\r\n- Xcode のビルドの仕組みをちょっと知りたい方\r\n\r\n前提とする知識:\r\n- Xcode",
            "accepted": true,
            "speaker": {
                "name": "Yoshimasa Niwa",
                "kana": "ニワヨシマサ",
                "twitter": "niw",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7d3607c2-a055-4492-9a75-c7fe16dbe2e9.jpg"
            },
            "created": "2022-06-05T13:59:37+09:00",
            "timetable": {
                "track": "Track B",
                "starts_at": "2022-09-12T10:15:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "b4920d34-f0aa-4f92-9955-5009979b3419",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/b4920d34-f0aa-4f92-9955-5009979b3419",
            "title": "サーバーと同期してリアルタイムに更新する画面を実装する",
            "abstract": "アプリで画面を更新するためのトリガーとしてポピュラーなものは\r\n\r\n- Pull-to-refreshなどのユーザーの明示的なアクション\r\n- サーバー上などのデータが更新されたタイミング\r\n\r\nの2種類に大きく分類できます。\r\n\r\nユーザーの明示的なアクションで画面更新する場合は比較的シンプルに実装することが可能ですが、サーバー上のデータが更新されたタイミングに同期して画面更新を行う場合、更新通知を受け取る方法やUI更新方法など、考慮することが増えて実装が複雑になりがちです。\r\n\r\nそこでこのトークでは、リアルタイムでの更新が必要となる具体例を紹介した後に、サーバー上のデータをリアルタイムで同期するための設計\/実装について、Firebaseを用いる手法、Push通知を用いる手法、WebSocketを用いる手法など、複数の手法の比較を行い、いかにしてリアルタイムで更新する画面を実装するかの解説を行います。",
            "accepted": true,
            "speaker": {
                "name": "izumi",
                "kana": "イズミ",
                "twitter": "rizumi_jp",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/1c462db4-8e12-4dff-9bb5-3cc4e3a9e6c8.jpg"
            },
            "created": "2022-06-05T15:17:19+09:00",
            "timetable": {
                "track": "Track B",
                "starts_at": "2022-09-12T11:25:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "56757451-b2d8-45cd-b440-9b8ee7f77cfd",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/56757451-b2d8-45cd-b440-9b8ee7f77cfd",
            "title": "全部Swiftで作るWebアプリケーション",
            "abstract": "SwiftはiOSやmacOSの他にも、LinuxやWindowsなどのプラットフォームで動作するプログラムを開発することができるクロスプラットフォームなプログラミング言語です。\r\n\r\nSwiftを利用するとWebアプリケーションのバックエンドやWebブラウザのクライアントサイドで動作するコードを開発することができるようになります。\r\n\r\nしかしこれらの分野はまだまだ環境が成熟していないため、iOSエンジニアがこれから始めるのには敷居が高いのが現状です。\r\n\r\n本トークではサーバーサイドSwiftやSwiftWasmを使って、Swiftを中心としたWebアプリケーションの可能性を探ります。\r\n\r\nよく慣れたSwiftという言語をそのままつかい、ネイティブアプリ以外のシステム上でどのようなコードが書けるのか、という知識を得ることができるでしょう。",
            "accepted": false,
            "speaker": {
                "name": "laiso",
                "kana": "レイソー",
                "twitter": "laiso",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/d080bb85-7f08-42d2-95ba-0e206b5f226f.png"
            },
            "created": "2022-06-05T17:04:56+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "4ccec88d-7359-420f-96c9-fc6c259be559",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/4ccec88d-7359-420f-96c9-fc6c259be559",
            "title": "サーバーサイドSwiftで学ぶバックエンド開発",
            "abstract": "SwiftはiOSやmacOSの他にも、LinuxやWindowsなどのプラットフォームで動作するクロスプラットフォームなプログラミング言語です。\r\nWebアプリケーションやネイティブアプリのバックエンドで動作するプログラムを開発することは「サーバーサイドSwift」と呼ばれ、活発なオープンソースのプロジェストが多数あります。\r\nしかしサーバーサイドSwiftはブラックボックスのまま利用するにはまだまだ環境が成熟していないため、これから始めるにはフレームワークのさらに奥の仕組みを理解しながら使う必要があります。\r\n本トークではサーバーサイドSwiftフレームワークの実装から、バックエンドを開発するための技術詳細についてお話しします。\r\nよく慣れたSwiftという言語をそのままつかい、ネイティブアプリ以外のシステム上でどのようなコードが書けるのか、という知識を得ることができるでしょう。",
            "accepted": false,
            "speaker": {
                "name": "laiso",
                "kana": "レイソー",
                "twitter": "laiso",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/d080bb85-7f08-42d2-95ba-0e206b5f226f.png"
            },
            "created": "2022-06-05T17:08:23+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "e7bdfa09-9885-4f02-a1ce-184f5816815c",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/e7bdfa09-9885-4f02-a1ce-184f5816815c",
            "title": "XVimがSherlockされるまで",
            "abstract": "Xcode 13最大の新機能と言えばVimキーバインドの登場ですね！\r\n多くの開発者が利用しているVim\/NeovimのキーバインドがとうとうXcode標準で使えるようになりました。\r\n\r\nXcode 12まで、多くのVim好きの開発者はVimキーバインドを利用するために、\r\nPluginの形式で提供していたXVimというソフトウェアを利用していました。\r\n\r\nこのトークではそんなXVimないしXcode Plugin業界に襲いかかってきた\r\nmacOS, Xcode, Swift, AppleSiliconの様々な技術的ハードルについてメンテナーが振り返って供養します。",
            "accepted": false,
            "speaker": {
                "name": "taiki komaba",
                "kana": "タイキ　コマバ",
                "twitter": "r_plus",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/b02f6766-8170-45b9-bb59-1b82518708c6.jpg"
            },
            "created": "2022-06-05T17:34:37+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "2f083a1d-a71f-4288-88c7-6be3484ba317",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/2f083a1d-a71f-4288-88c7-6be3484ba317",
            "title": "XVimとSwiftとAssembly",
            "abstract": "Xcode 13最大の新機能と言えばVimキーバインドの登場ですね！\r\n多くの開発者が利用しているVim\/NeovimのキーバインドがとうとうXcode標準で使えるようになりました。\r\n\r\nXcode 12まで、多くのVim好きの開発者はVimキーバインドを利用するために、\r\nPluginの形式で提供していたXVimというソフトウェアを利用していました。\r\n\r\nこのトークではそんなXVimないしXcode Plugin業界に襲いかかってきた\r\nSwift, AppleSiliconの様々な技術的ハードルについてメンテナーが振り返って供養します。\r\n（20分版ではmacOS, Xcode部分について省略します）",
            "accepted": false,
            "speaker": {
                "name": "taiki komaba",
                "kana": "タイキ　コマバ",
                "twitter": "r_plus",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/b02f6766-8170-45b9-bb59-1b82518708c6.jpg"
            },
            "created": "2022-06-05T17:47:03+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "e2477b5e-76ba-440c-9363-3051852caca5",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/e2477b5e-76ba-440c-9363-3051852caca5",
            "title": "正規表現って結局何なのさ？〜エンジニアのためのコンピューターサイエンス入門〜",
            "abstract": "皆さん多かれ少なかれ正規表現を使ったことがあると思います。\r\nコマンドラインツールで、エディタの検索で、そしてNSRegularExpressionで。\r\n単純な文字列検索に比べ、正規表現はとても表現力豊かでパワフルな検索を可能にします。\r\n\r\nSwift Evolutionにも正規表現に関する多くのproposalがあり、Regex型やRegexリテラルなどが正式に実装される日も近いでしょう。\r\nしかしこの正規表現とは一体何者なのでしょうか？\r\nどんなものが表現でき、どんなものが表現できないのでしょうか？\r\n\r\n多くのメタ文字や演算子記号があるためとても複雑なものと思われがちですが、実際にはたった3つの文字列の演算ルールだけで構成されています。\r\n本トークでは状態遷移図の一種であるオートマトンからスタートして正規表現の原理を紐解きその限界を探っていきます。",
            "accepted": true,
            "speaker": {
                "name": "ta_ka_tsu",
                "kana": "タカツ",
                "twitter": "ta_ka_tsu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6abf906a-d31b-4acb-9223-dba0739142e6.png"
            },
            "created": "2022-06-05T18:45:57+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-11T14:10:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "b09ee74d-7592-4e2c-be9f-a511410a1032",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/b09ee74d-7592-4e2c-be9f-a511410a1032",
            "title": "改めて振り返ろう！UIBezierPath 入門",
            "abstract": "独自のデザインを実装するとき、皆さんはどのような手法を取ることが多いですか？\r\n例えば、画面下部から半円が顔を出しているデザインを実装することを考えてみましょう。\r\nUIView を準備し、CALayer の cornerRadius に `(width or height) \/ 2` を設定して frame を調整する方法がシンプルかもしれません。\r\n\r\nしかし、画面外で一生顔を見せることの無い部分も含めた演算処理が走ってしまい、効率的とは言えません。\r\nそこで、UIBezierPath を使えば画面内の必要な部分のみ演算・描画することが可能になります！\r\n\r\n・ブックマークアイコン\r\n・スターアイコン\r\n・ハートアイコン\r\n\r\nこのトークでは、上記オブジェクトを描画する手順を紹介するとともに、UIBezierPath の利用方法をご紹介します！これを学べば、あなたも Swift 使いのイラストレータです！",
            "accepted": false,
            "speaker": {
                "name": "AkkeyLab",
                "kana": "アッキーラボ",
                "twitter": "AkkeyLab",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/34c44ff4-7d0f-4e23-b783-13538313cf72.jpg"
            },
            "created": "2022-06-05T19:31:04+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "b860c813-318c-4ab6-a01b-5cb900148a73",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/b860c813-318c-4ab6-a01b-5cb900148a73",
            "title": "夢が広がる！コード生成でどこでもSwift",
            "abstract": "Swiftはいいぞ！\r\nSwiftが好きになると、どこでもSwiftが書きたくなります。\r\nAPIサーバは当然Swiftで書きたいですし、クライアントから呼ぶときはasync関数としてそのまま呼び出したいです。\r\nWebアプリも書きたいです。DOMを触るのはReact等には勝てないですが、せめてロジックはSwiftで記述したいので、Swiftの関数をTypeScriptから呼び出せるようにします。\r\nTypeScriptからSwiftが使えるようになれば、そこからさらに利用箇所は広がります。\r\n\r\nこのトークでは、コード生成技術を通してSwiftをどこでも使えるようにするテクニックを紹介します。",
            "accepted": false,
            "speaker": {
                "name": "Iceman",
                "kana": "アイスマン",
                "twitter": "iceman5499",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/15da24a0-69e5-41e1-822e-ce68cad910ae.jpg"
            },
            "created": "2022-06-05T19:47:42+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "6edd0d55-44e4-4c6e-abef-2a0b137a9e48",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/6edd0d55-44e4-4c6e-abef-2a0b137a9e48",
            "title": "async\/await時代のSwift on server",
            "abstract": "SwiftはiOSアプリケーション開発のみならず、Linux上で動作させてWebサーバアプリケーションを立ち上げることができます。\r\niOSエンジニアにとって、SwiftでAPIサーバが書けることほど快適なものはありません。\r\n書き慣れた文法で型安全な実装ができ、またリクエスト・レスポンスのモデルをクライアントと共有することまでできます。\r\nSwift5.5で導入されたasync\/await構文は、さらにクライアントコードとの親和性を強化しました。\r\n\r\nこのトークでは、Swift on serverをどのように始めていくか、開発環境からデプロイまでの基本的なステップ、ハマりどころ、async\/await導入によるコードの変化、型によるクライアントとの強固な連携などを紹介していきます。",
            "accepted": false,
            "speaker": {
                "name": "Iceman",
                "kana": "アイスマン",
                "twitter": "iceman5499",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/15da24a0-69e5-41e1-822e-ce68cad910ae.jpg"
            },
            "created": "2022-06-05T19:48:23+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "bc1bcac0-b9ab-4203-9ef1-583fc9db6419",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/bc1bcac0-b9ab-4203-9ef1-583fc9db6419",
            "title": "3年間 Core NFC を使ってみて - iOS 固有の NFC 利用まわりの知見",
            "abstract": "NFC とは駅・空港での自動改札機やお店での電子マネー決済、社員証や学生証をかざした入退出管理など、日常でよく見かけるアレを叶える技術です。\r\n\r\niPhone に搭載されている NFC を私たちの App で使うためには Core NFC を用います。これは iOS 11 から利用可能になり、iOS 13 のタイミングで大きくアップデートされました。昨今の情勢から非接触技術が注目されたり、eKYC に利用できたりと、現在進行形でさまざまな App で利用が広がっています。\r\n\r\n私は iOS 13 のときから3年間、この Core NFC を使った App の個人開発を続け、関連する OSS も公開してきました。それによって得た iOS 固有の NFC 利用まわりの知見を紹介します。",
            "accepted": false,
            "speaker": {
                "name": "treastrain \/ Tanaka Ryoga",
                "kana": "タナカリョウガ",
                "twitter": "treastrain",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/753386c2-a1c1-41e2-815f-9e2a2dfdac96.jpg"
            },
            "created": "2022-06-05T20:09:39+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "c9f82aa9-df30-43f6-907b-05b353e06cdf",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/c9f82aa9-df30-43f6-907b-05b353e06cdf",
            "title": "大規模イベントアプリを支える技術〜長岡花火公式アプリを作った話〜",
            "abstract": "大規模なイベントアプリを支える技術のお話です。\r\n新潟県長岡市で開催される長岡花火の公式アプリを開発して、運用しています。コロナ禍では開催出来ませんでしたが、今年は久しぶりに開催される見込みです（6月現在）\r\n毎年開催期間合計で100万程度が来場する長岡花火に対して、どのような技術でアプリを運用して、長岡花火を支えているのか、お話できればと思います。\r\n意外なあれが役に立っています。\r\n\r\n普通のアプリとは異なり、イベントアプリは固有の課題があるため、イベントアプリを運用している方、今後イベントアプリを開発する方などの参考になればと思います。",
            "accepted": true,
            "speaker": {
                "name": "Izu",
                "kana": "イヅ"
            },
            "created": "2022-06-05T22:02:39+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T10:15:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "a9d5b12e-6170-4f1c-be93-9412898523a0",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/a9d5b12e-6170-4f1c-be93-9412898523a0",
            "title": "キャッシュによる状態管理のアーキテクチャ",
            "abstract": "例えばTwitterアプリでは、ツイートに押したいいねは他のどの画面に表示される同一のツイートにも反映されています。\r\nこのような体験を実現する上で、グローバルステートとして状態を管理する手法がしばしば用いられ、iOSアプリ開発でもReduxから派生するTCAが例として挙げられます。\r\n\r\nしかし、そもそもこのグローバルステートで管理する大抵の状態はサーバーからのレスポンスであることから、WebフロントエンドではReact QueryやSWRを筆頭にサーバーデータのキャッシュによる状態管理が流行しつつあります。\r\n\r\nそこで本トークでは、SwiftUIを用いたiOSアプリ開発におけるサーバーデータのキャッシュによる状態管理のアーキテクチャについてお話しします。\r\n",
            "accepted": true,
            "speaker": {
                "name": "岩名 勇輝",
                "kana": "イワナ ユウキ",
                "twitter": "_rockname",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/bac50e47-837f-4990-ac92-da0b5a3f3c20.jpg"
            },
            "created": "2022-06-05T22:13:26+09:00",
            "timetable": {
                "track": "Track B",
                "starts_at": "2022-09-12T14:30:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "1a6dc0cc-d191-48f8-aa3b-ec8e4948a2e6",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/1a6dc0cc-d191-48f8-aa3b-ec8e4948a2e6",
            "title": "アプリが依存しているSwift PackageライブラリのLICENSEを一覧表示する方法",
            "abstract": "Swift Package Manager (SPM)に対応したOSSライブラリが増えてきた昨今、CocoaPodsやCarthageからSPMへ移行を検討している方が結構いるのではないでしょうか？\r\nしかし、正しく製品を提供するなら使用しているライブラリのライセンス表示は必須です。\r\nそこで、CocoaPodsやCarthage向けのライセンス表示ライブラリはいくつかありますが、SPMに対応したものはあまり見かけなかったため仕組みを自作しました💪\r\n\r\n仕組み作成の上での躓きどころを踏まえながら、Swift Packageのライセンスを収集して表示するまでの流れを説明します。",
            "accepted": false,
            "speaker": {
                "name": "Kyome",
                "kana": "キョメ",
                "twitter": "Kyomesuke",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/e5fb6abc-b0cf-4957-8fbe-6afec71f7132.png"
            },
            "created": "2022-06-05T23:17:44+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "37c031b2-25fe-40ca-b148-256db9635844",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/37c031b2-25fe-40ca-b148-256db9635844",
            "title": "Xcodeにはファイルツリーをソートする機能がないので、gem でできるやつを作ってみました。",
            "abstract": "Xcode は非常に便利ですが、ファイルツリーに関してはファイルをソートする機能がないので、開発途中でファイルが増えてきて品雑になったときに困ります。\r\n一つ一つD＆Dで並び替えるのもありですが、時間がかかりますし、ミスもするかもしれませんし、最悪参照パスを間違えて、ビルドが通らないなんて事子もあるかもしれません。\r\nそれを解決できる、gemを作成しまししたので、そちらを紹介してみようと考えてみました。",
            "accepted": false,
            "speaker": {
                "name": "keisukeYamagishi",
                "kana": "ヤマギシケイスケ",
                "twitter": "shichimi_0_o",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7acfa78f-fcf1-4485-b53e-45bb766f9160.jpg"
            },
            "created": "2022-06-06T00:12:51+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "c946c944-c8fe-4f46-962b-5527fb944345",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/c946c944-c8fe-4f46-962b-5527fb944345",
            "title": "ARKitとMetalでインタラクティブなARオブジェクトの表現を考えました！。",
            "abstract": "仮想苔というARアプリケーションを個人制作しています。\r\nこのアプリの主な機能として　検知された平面にARオブジェクトを配置し、画面からにARオブジェクト触れると対応してアニメーション（掻き別れるような）を再生する機能　があります。\r\n\r\nこのARオブジェクトは草原が代表するような掻き別れるような表現を実装した苔です。本物の苔に触ったような感覚は得られないですが、あまり見かけないARオブジェクトが返す表現に仕上がりました。\r\n\r\n内容は下記です。\r\n・このアプリ制作を通して学んだ　ARkitとMetalの実装。\r\n・このアプリの　インタラクティブなARオブジェクトについて。\r\n\r\nARKitでMetalを使ってみた一例としてご紹介できたらと思います！。",
            "accepted": false,
            "speaker": {
                "name": "武田孝騎",
                "kana": "タケダコウキ",
                "twitter": "bluewhitered123",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/fc01458c-1c37-4147-ad1e-c55213131c00.jpg"
            },
            "created": "2022-06-06T00:31:44+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "277ed19f-848b-4d39-8b53-5eb29765d099",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/277ed19f-848b-4d39-8b53-5eb29765d099",
            "title": "Flutterアプリ開発にネイティブコードはどこまで求められるのか",
            "abstract": "2018年に登場したFlutter。きっと当時は「またクロスプラットフォームフレームワークが出てきて、廃れていくのか？」と思った方もいると思いますが、今では様々なアプリで使われるようになりました。弊社の新規アプリ「Famm プリント」もFlutter製アプリの一つです。\r\n\r\n「Flutter流行ってるし、そろそろ手を付けてみようかな」\r\n「でも結局各プラットフォームのネイティブコード呼ばなきゃいけない場面出てきたりしない…？」\r\nそんなことを思っている人もいるのではないでしょうか？\r\n\r\nこのトークでは、実際にFlutter製アプリを作ってみてネイティブコードを書いた場面はあったのか、ネイティブコードを書くことを求められるのはどんな場面かを話したいと思います。このトークによって、Flutter開発を躊躇していた方の背中をポンと押せたら幸いです。",
            "accepted": true,
            "speaker": {
                "name": "akatsuki174",
                "kana": "アカツキ",
                "twitter": "akatsuki174",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/afcf48ef-3bb6-4965-8f78-7906b26f097f.png"
            },
            "created": "2022-06-06T08:52:11+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T15:25:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "d4e3886e-e659-4afd-839b-242d9f366111",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/d4e3886e-e659-4afd-839b-242d9f366111",
            "title": "カウシェiOSアプリのモジュール開発事例",
            "abstract": "カウシェiOSアプリは、複数のモジュールによって構成され、開発されています。\r\nいくつかのモジュールに着目し、モジュール内にどのようなリソースを配置し開発を進めているか、良かった点などを共有したいと思います。\r\n\r\n▼事例\r\n①デザインコンポーネントを集約したKaucheDesignKit\r\nカラーや共通で使用するUIコンポーネントを集約しています。\r\nSwiftUIとPreviewsを活用することで、UIコンポーネントの実装・確認がしやすくなりました。\r\n\r\n②モックデータを定義用のKaucheMockKit\r\nモックデータを一つのフレームワームに定義することで、ユニットテストやPreviewsで同じモックデータを使い回すことができるようになりました。またProductionアプリから依存として外すことで予期せぬデータ混入を防ぎ、安全性を高めることもできます。",
            "accepted": false,
            "speaker": {
                "name": "akifumi",
                "kana": "アキフミ",
                "twitter": "akifumifukaya",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/05e82041-1b54-4b7b-b113-9644f9f82411.jpg"
            },
            "created": "2022-06-06T08:59:25+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "ee2ab807-9053-4779-84f9-ec9951f7cfc0",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/ee2ab807-9053-4779-84f9-ec9951f7cfc0",
            "title": "音声配信アプリにおけるiOSを使った音声配信の全てと裏側",
            "abstract": "Voicyでは日々パーソナリティさんという音声投稿者による音声配信がされております。\r\niOSにおいて音声配信をする上で欠かせないAVFAudioを利用しております。\r\nAVFAudioには多種多様な機能がありますが、実際サービスを扱っていく上で一体どんなことに注意し何を必要があるのか？がわからないことが多いです。\r\n本トークでは音声配信をiOSで実装する上でどのように考え実装するべきなのかを全てと裏側という形でお伝えしたいと思います\r\n- AVFAudioを利用した音声の取り扱い\r\n  - 音声収録\r\n  - 音声配信\r\n  - etc\r\n- Voicyで利用している音声配信の提供方法\r\n  - 収録配信\r\n  - リアルタイム配信\r\n- 課題や今後の展望\r\n",
            "accepted": true,
            "speaker": {
                "name": "entaku",
                "kana": "エンタク",
                "twitter": "entaku_0818",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a28e7a6d-6aba-497a-b4eb-a8481b3ef412.jpg"
            },
            "created": "2022-06-06T09:20:25+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-11T13:35:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "26fd1225-453c-458d-a093-35acbe0dbe04",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/26fd1225-453c-458d-a093-35acbe0dbe04",
            "title": "ちょっと待って！そのモーダル遷移、フルスクリーンで大丈夫？",
            "abstract": "普段のiOS開発で登場するモーダル遷移、何気なく実装していませんか?\r\nUIKitではiOS 13からモーダル遷移はシート型がデフォルトになりましたがデフォルトから外れてフルスクリーンでモーダル遷移をすると、どんな落とし穴が待ち受けているのでしょうか？\r\n\r\nこの発表では自社アプリのQAで見つかったフルスクリーンモーダルの不具合とその修正を通して、UXとコードレベルでフルスクリーンでのモーダル遷移の落とし穴や、それがなぜ発生しやすくなるのかを解説します。\r\nHuman Interface Guidelinesを参照しつつ、Appleが想定するiOSのモーダル遷移と、不具合が少ない妥当な実装は何かを考察します。\r\n\r\nこの発表はこんな方が対象です\r\n\r\n・デフォルトのシート型でしかモーダル遷移実装していなかった方\r\n・デザイナーからフルスクリーンでの遷移を提案されたけどシート型との違いを説明できなかった方\r\n",
            "accepted": false,
            "speaker": {
                "name": "佐藤 剛士",
                "kana": "サトウ タケシ",
                "twitter": "hatakenokakashi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/f4cf74dc-a9eb-488c-ae18-aad6cc43ff0f.jpg"
            },
            "created": "2022-06-06T10:18:30+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "1d50e239-7bd1-44f6-8b05-26baa7812d4a",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/1d50e239-7bd1-44f6-8b05-26baa7812d4a",
            "title": "「OpenAPIとCI\/CDのシナジーでAPI差分 \"0\" へ」",
            "abstract": "サービスを拡大していく上でバックエンドやBFF (Backend For Frontend)とのAPIの数は徐々に増えていくものです。\r\nAPIが増えれば管理するレスポンススキーマも増えてしまい、バックエンドとAPIのスキーマがいつの間にかズレているという経験は多いのではないでしょうか？\r\n変更が入るたびに、影響範囲のチェックも必要になるため面倒くさいったらありゃしない。\r\n\r\nそんなみなさんのために、「PayPayフリマ」の開発現場で試しているOpenAPIを用いた解決策をご紹介します！\r\n\r\n既に完成されているサービスの中でどのようにOpenAPIを導入しAPI差分を \"0\" に近づけているのか、\r\nCI\/CDで運用していく上での工夫点や、APIの変更に対処しやすい仕組みなど、実用的なテクニックをお話します。\r\n\r\nみなさんも一緒に安心安全なAPI運用を目指しませんか？\r\n",
            "accepted": false,
            "speaker": {
                "name": "HIRO",
                "kana": "ヒロ",
                "twitter": "cyan_0FBCF9",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/9cb8c0b2-90db-4b33-8130-7cb6e87c5c2f.jpg"
            },
            "created": "2022-06-06T10:36:05+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "d3d878aa-3d10-42bc-b1a5-455a420aae38",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/d3d878aa-3d10-42bc-b1a5-455a420aae38",
            "title": "PWAの今とこれから、iOSでの対応状況",
            "abstract": "ネイティブアプリと同様の機能をウェブアプリに追加できる技術、それがProgressive Web Apps (PWA)です。iOSでも近年、徐々にPWAの機能が追加されています。これらの流れは、ユーザービリティに重きを置く昨今の潮流に即しているように感じます。\r\n\r\nこの発表では、PWAの現状とその可能性についてお話しします。\r\n- PWAとは？\r\n  - ウェブアプリのリーチと、ネイティブアプリの機能性を併せ持ったアプリ\r\n- PWAの各機能\r\n  - ホーム画面へのアイコンの追加\r\n  - キャッシュによるオフラインでの利用\r\n  - カメラなどのハードウェアの利用\r\n  - プッシュ通知　など\r\n- iOSでの対応状況\r\n  - 各バージョンでの対応の歴史\r\n  - プッシュ通知実装などの今後の対応\r\n- PWAの事例とこれから\r\n  - アプリストア内外でのインストール\r\n- PWAを使うべきタイミング\r\n",
            "accepted": true,
            "speaker": {
                "name": "木下郁英",
                "kana": "キノシタイクヒデ",
                "twitter": "i_kinopee",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/298c8d3b-20f9-4f42-99d1-053906e38cf2.jpg"
            },
            "created": "2022-06-06T11:19:08+09:00",
            "timetable": {
                "track": "Track E",
                "starts_at": "2022-09-10T18:10:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "4baabcb7-1e52-4aeb-a7d0-29857ab9612a",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/4baabcb7-1e52-4aeb-a7d0-29857ab9612a",
            "title": "ラクに速く正確にUIが作れちゃう！SwiftUIを用いたデザインシステムによるアプリの開発事例",
            "abstract": "宣言的UIフレームワークのSwiftUIの登場により、以前に比べUIコンポーネントが作りやすくなりました。\r\nそこで弊社ではSwiftUIの特徴を活かし、社内のデザインシステムをパッケージとして開発・運用することで、楽に速く正確にUIを実装することを可能にしました。\r\nまた、パッケージ内のコンポーネントを一覧で確認できるカタログアプリも開発し、実装コストだけでなく、仕様検討時のコミュニケーションコストやデザインの手戻りも削減することができました。\r\n本セッションでは、デザインシステム構築までの開発プロセスと実際に運用してみて得られた知見についてご紹介します！\r\nデザインシステムを構築し、みんなで楽に速く正確にUIが作れる世界線へ！\r\n\r\n【コンテンツ】\r\nデザインシステム\r\n- 実装方法と運用事例\r\n- 構築して得られた恩恵\r\n\r\nカタログアプリ\r\n- 概要と得られた恩恵",
            "accepted": false,
            "speaker": {
                "name": "yoshikei",
                "kana": "ヨシケイ",
                "twitter": "y0shikei_",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/0c5562d9-1a8b-45be-9534-4301aa76e1a8.jpg"
            },
            "created": "2022-06-06T11:23:05+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f2540bb0-d343-4d5b-941e-634a9bfccbc6",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f2540bb0-d343-4d5b-941e-634a9bfccbc6",
            "title": "ラクに速く正確にUIが作れちゃう！SwiftUIを用いたデザインシステムによるアプリの開発事例",
            "abstract": "宣言的UIフレームワークのSwiftUIの登場により、以前に比べUIコンポーネントが作りやすくなりました。\r\nそこで弊社ではSwiftUIの特徴を活かし、社内のデザインシステムをパッケージとして開発・運用することで、楽に速く正確にUIを実装することを可能にしました。\r\nまた、パッケージ内のコンポーネントを一覧で確認できるカタログアプリも開発し、実装コストだけでなく、仕様検討時のコミュニケーションコストやデザインの手戻りも削減することができました。\r\n本セッションでは、デザインシステム構築までの開発プロセスと実際に運用してみて得られた知見について紹介します！\r\nデザインシステムを構築し、みんなで楽に速く正確にUIが作れる世界線へ！\r\n\r\n【コンテンツ】\r\nデザインシステム\r\n- 概要と構築の経緯\r\n- 実装方法と運用事例\r\n- 構築して得られた恩恵\r\n\r\nカタログアプリ\r\n- 概要と活用事例\r\n- 開発して得られた恩恵",
            "accepted": false,
            "speaker": {
                "name": "yoshikei",
                "kana": "ヨシケイ",
                "twitter": "y0shikei_",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/0c5562d9-1a8b-45be-9534-4301aa76e1a8.jpg"
            },
            "created": "2022-06-06T11:23:30+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "6994889e-0382-411e-aff7-53ef63393ce2",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/6994889e-0382-411e-aff7-53ef63393ce2",
            "title": "どこでも AirPods を実現する方法",
            "abstract": "AirPods、便利ですよね。どこでもいつでもずっと使ってしまいます。\r\nでも一つ困ったことが。\r\nそう、飛行機のエンターテイメントとかゲーム機など Bluetooth に対応していない機器で使えないのです。\r\n\r\nそんな時に思いついたのが、AirPods を使う時にいつも持ってる iPhone を経由して Bluetooth に対応していない機器でも AirPods を使えるようにできるのではという事。\r\nこのセッションでは、AirPods をどこでもいつでも使いたいそんな思いを実現するために iOS アプリとハードウェアの開発を通して学んだ iOS のオーディオの仕組みについて紹介します。\r\n\r\n対象とする方:\r\n- AVAudioSession について知りたい方\r\n- 飛行機の映画でも AirPods を使いたい方\r\n- ハードとソフトの融合を見たい方\r\n\r\n前提とする知識:\r\n- 簡単な電子工作の知識\r\n",
            "accepted": false,
            "speaker": {
                "name": "Yoshimasa Niwa",
                "kana": "ニワヨシマサ",
                "twitter": "niw",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7d3607c2-a055-4492-9a75-c7fe16dbe2e9.jpg"
            },
            "created": "2022-06-06T11:30:29+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "397d52a7-8f62-4c40-8392-2dc081227189",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/397d52a7-8f62-4c40-8392-2dc081227189",
            "title": "Swift Concurrency時代のリアクティブプログラミングの基礎理解",
            "abstract": "リアクティブプログラミングは非同期プログラミングの手段として使われることがありますが、本来は非同期データストリームをうまく扱うためのものです。Swift Concurrencyが導入された今こそ、Combineなどの具体的なライブラリから一歩距離を置いて、リアクティブプログラミングそのものを学習しておきましょう。\r\n\r\nこのトークでは、リアクティブプログラミングがデータフローの記述方式であるということを基本からおさらいします。リアクティブプログラミングを図的に理解でき、UIや通信のイベント配送設計も自在にできるようになります。\r\n\r\n非同期はリアクティブプログラミングの外の世界と接続するときや内部実装には必要です。両者のポジションの違いを整理し、Concurrencyの機能をそのまま使うべきところと、リアクティブプログラミングでデータフローを記述すべきところが、よく分かるように説明します。\r\n",
            "accepted": true,
            "speaker": {
                "name": "ばんじゅん🍓",
                "kana": "バンジュン",
                "twitter": "banjun",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/2c0be09f-abdd-4b0a-bdb1-f7b48d8b6513.png"
            },
            "created": "2022-06-06T11:37:57+09:00",
            "timetable": {
                "track": "Track B",
                "starts_at": "2022-09-11T13:35:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "9c6ca213-57b4-40ed-a6b8-aeab663875a1",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/9c6ca213-57b4-40ed-a6b8-aeab663875a1",
            "title": "TabularDataを使ってデータ処理をしてみる",
            "abstract": "TabularDataはiOS 15\/macOS 12から追加された、機械学習モデルの学習に使う表形式データを閲覧したり、加工したり、書き出したりするための新しいフレームワークです。\r\n\r\nこのセッションではオープンデータとして公開されているデータをTabularDataを使ってデータ処理する方法について紹介します。\r\n\r\n以下のような内容を紹介する予定です\r\n\r\n・TabularDataのAPIの紹介\r\n・表形式データからのサマリー抽出について\r\n・非構造化データの変換\r\n・表形式データの結合",
            "accepted": false,
            "speaker": {
                "name": "あつや",
                "kana": "アツヤ",
                "twitter": "n_atmark",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/678b54ad-c083-422a-a910-2919dd9467a4.jpg"
            },
            "created": "2022-06-06T11:42:31+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "ca30b1b7-c697-4466-a45a-fa4a73bc1209",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/ca30b1b7-c697-4466-a45a-fa4a73bc1209",
            "title": "Firebase InApp-Messagingをカスタムする",
            "abstract": "Firebase InApp-Messagigng（以下FIAM）は、Firebaseを導入していれば特別な実装をすることなくAnalyticsのイベントを利用して細かく表示タイミングの制御したり、配信先ユーザーのターゲットを細かく絞って配信することが出来とても便利です。\r\n\r\nただデフォルトの機能のままだとFIAMで表示される画面のデザインがアプリとは合わない、利用できるデザインに制限があるなどしっかり運用しようと思うと物足りない部分があります。\r\n\r\n弊社アプリでは、コンテンツをよりよく見せるために動画を再生できるようにしたり、WebP画像を使って通信量を削減するといったカスタマイズを行いました。\r\n\r\n本トークでは実際の実装経験をもとにどのようなカスタマイズが出来るのか、どのように作るのか、その他Tipsを紹介します。\r\nまた実際にFIAMを利用してどのような効果があったかをお話しします。",
            "accepted": false,
            "speaker": {
                "name": "simorgh3196",
                "kana": "シムルグサンイチキューロク",
                "twitter": "simorgh3196",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/21064b26-1191-4e29-8f97-21bd9de87291.jpg"
            },
            "created": "2022-06-06T12:00:22+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "3c2c4bff-f5aa-4a74-9881-1c455a73b5a1",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/3c2c4bff-f5aa-4a74-9881-1c455a73b5a1",
            "title": "1人でも出来る！OpenAPIでAPI実装をリファクタリングする方法",
            "abstract": "弊社アプリは長い開発期間の中で多くの負債を抱えていますが、複雑な依存関係や少ない開発リソース（現在iOS開発は1人）で通常施策の実装を行いながら改善する余裕がない等の理由でコアな部分の実装には手を入れられず放置されてきました。\r\n\r\n負債の一つとして、弊社アプリには神（オブジェクト）がいらっしゃいます。\r\nそこに含まれている内の一つ、API関連の機能はCodableも無い時代に作られているために現在メンテされていないライブラリに依存をしており、以前から改善したい機能として挙げられていました。\r\n\r\n本トークではなんとなくで使われていたOpenAPIドキュメントをコード生成が正しく行えるように整備し、そこからコード生成を行い開発フローに組み込んだ方法について紹介します。",
            "accepted": false,
            "speaker": {
                "name": "simorgh3196",
                "kana": "シムルグサンイチキューロク",
                "twitter": "simorgh3196",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/21064b26-1191-4e29-8f97-21bd9de87291.jpg"
            },
            "created": "2022-06-06T12:01:29+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f9ca9f62-e05f-4c6b-8bde-118f8e6e3c1f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f9ca9f62-e05f-4c6b-8bde-118f8e6e3c1f",
            "title": "iOS アプリ開発プロジェクトで最初に整えておきたいこと",
            "abstract": "2021年12月、弊社 ROUTE06 においてとある新規アプリの開発プロジェクトがスタートしました。\r\n今振り返ってみて、初めに整えておいて良かったなと思うことをお話しします。\r\n\r\n以下のような内容を予定しています。\r\n\r\n- 環境 (ローカル、ステージング、本番) 別のビルド設定を .env を使って行う\r\n  - API の向き先や Firebase の設定ファイルなどをどのようにビルドプロセスに組み込んだのか\r\n- codemagic で CI\/CD を整える\r\n  - どのようなパイプラインを組んだのか、ブランチ戦略とともにお伝えします\r\n- 開発版のアプリを TestFlight を使って配布する\r\n  - Ad hoc は使わずに TestFlight のみを用いた開発版のアプリ配布を行いました\r\n",
            "accepted": false,
            "speaker": {
                "name": "海老沢聡",
                "kana": "エビサワサトシ",
                "twitter": "satococoa",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3de392da-1c38-481b-9acf-f8337e8d9838.png"
            },
            "created": "2022-06-06T12:44:59+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "b7c7373d-3f0e-42b4-af19-e4bf94c9015c",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/b7c7373d-3f0e-42b4-af19-e4bf94c9015c",
            "title": ".env と Xcode Run Script で環境変数をビルド時にアプリに組み込む",
            "abstract": "API が絡む開発を行う際、大抵以下のような複数のビルド設定が必要になるかと思います。\r\n\r\n- 開発環境 (ローカル)\r\n- ステージング環境\r\n- 本番環境\r\n\r\n今回 .env と Xcode の Run Script を使って各環境ごとに異なる API 接続用の値をビルド時にアプリに組み込む方法で開発を行ったのでその方法について共有します。",
            "accepted": false,
            "speaker": {
                "name": "海老沢聡",
                "kana": "エビサワサトシ",
                "twitter": "satococoa",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3de392da-1c38-481b-9acf-f8337e8d9838.png"
            },
            "created": "2022-06-06T12:51:41+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "c39553cc-c340-455e-b2f1-bcc07113ef42",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/c39553cc-c340-455e-b2f1-bcc07113ef42",
            "title": "ChaChaPoly and You, CryptoKit Explained",
            "abstract": "「え、CryptoKitを使いたいけど、いつ、何を使うべきかわからない。。。」の方はもう心配いらない。このトークで一緒にCryptoKitの謎を解きましょう！\r\n\r\nユーザーのデータを暗号化しないといけない開発案件が出てきて「CryptoKitを使うチャンス！」を思って調べてきました。それでみんなにそのKnowledgeを共有したいと思っています！みんなCryptoKitマスターになりましょう！\r\n\r\nContent\r\n- CryptoKitでできること\r\n- CryptoKitを使った対象鍵暗号（Symmetric Encryption）について\r\n- いつそのEncryptionを使うべきか\r\n- 実装方法\r\n\r\nデータセキュリティーのために知っておきましょう！",
            "accepted": true,
            "speaker": {
                "name": "Adam Henry",
                "kana": "アダムヘンリー",
                "twitter": "monolithic_adam",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/750c04d5-4c26-4267-bc94-fd45150220bf.jpg"
            },
            "created": "2022-06-06T13:25:39+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-10T18:45:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "55ca316e-d968-4492-aecc-48af2d2e2d39",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/55ca316e-d968-4492-aecc-48af2d2e2d39",
            "title": "YouTubeの動画をmacOSの壁紙にするハック術",
            "abstract": "ダイナミックデスクトップが登場してから早４年。\r\n動く壁紙というのは、身近な存在になってきているのではないでしょうか？\r\nAppStoreにも動く壁紙を設定できるアプリはちらほら存在します。\r\n\r\nどのように実装しているのかは謎ですが、壁紙をハックするのはなんだか夢があって楽しそうですよね。\r\n\r\nそんな方のために、このLTではmacOSの壁紙に関するハック術を紹介します。\r\nYouTubeの動画も壁紙にできちゃうかもしれません！\r\n\r\nこの機会にあなたの壁紙をパワーアップしてみませんか？",
            "accepted": false,
            "speaker": {
                "name": "HIRO",
                "kana": "ヒロ",
                "twitter": "cyan_0FBCF9",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/9cb8c0b2-90db-4b33-8130-7cb6e87c5c2f.jpg"
            },
            "created": "2022-06-06T14:14:19+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "b49cb2fb-c551-4c87-af98-079201d5e60e",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/b49cb2fb-c551-4c87-af98-079201d5e60e",
            "title": "iOS1ミリもわからん技術広報がiOSDCにプロポーザルをエンジニアに出してもらうナレッジLTトーク〜まずはお前が出すんだよ！〜",
            "abstract": "このLTはiOSコミュニティといままで関わったことがない技術広報がなぜプロポーザルを出したのか。そしてどうやって社内のiOSエンジニアを巻き込みプロポーザルを出すに至ったのか。多くの企業が「自社から登壇やプロポーザルが出されない」課題を抱えています。登壇に関する情報発信のノウハウを共有することで多種多様な企業、プロダクトの発表が増え、iOSコミュニティ全体の活性を促進することを期待しています。非エンジニアのかたにとってコミュニティとの関係性を構築していくエッセンスをお届けします。",
            "accepted": false,
            "speaker": {
                "name": "luccafort",
                "kana": "ルッカフォート",
                "twitter": "luccafort",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/05a33b76-2ce3-4216-93f8-a3a23f1b6121.jpg"
            },
            "created": "2022-06-06T15:32:28+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "889662f4-7ba4-4a6a-969f-617a8903b6d8",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/889662f4-7ba4-4a6a-969f-617a8903b6d8",
            "title": "モバイルアプリのPMF検証をReact Native for Webで高速化する",
            "abstract": "株式会社JMDCでは、新規モバイルアプリの立ち上げに向けて企画・開発を進めています。\r\n\r\nPMF達成前のプロダクトフェーズでは、優先すべき仮説からコンパクトに素早く検証を行う必要がありますが、時にストアの審査基準がプロダクトフェーズを進める足枷になることもしばしば...\r\n\r\nそんな時React Native for Web（RNW）を使えば、モバイルアプリ開発用のリソースをそのままWebに転用し、Web上で高速なイテレーションを回すことができます。本セッションでは、RNWの紹介と、RNWを使った成長戦略を紹介します。\r\n\r\n\r\n- React Nativeの採用基準\r\n  - プロダクト要件\r\n  - チーム体制\r\n- React Native for Webの紹介\r\n  - 導入方法の概要\r\n  - 気をつけたところなど\r\n- PMF検証後の成長戦略",
            "accepted": false,
            "speaker": {
                "name": "川根一誠",
                "kana": "カワネカズノブ",
                "twitter": "flat_42",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/5dc957aa-d950-4211-9298-dfdae36eafd6.jpg"
            },
            "created": "2022-06-06T15:37:46+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "bc829a94-3516-4b82-aeea-8057ee69880b",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/bc829a94-3516-4b82-aeea-8057ee69880b",
            "title": "小さく始めるSwiftUI移行",
            "abstract": "SwiftUIが発表されてから約3年が経過し、最近ではプロダクトでの採用例も見られるようになってきました。\r\nしかしながら、SwiftUI登場以前から運営しているアプリを完全にSwiftUIへ移行するのは簡単なことではありません。\r\nそこで、小さなComponentから徐々にSwiftUI化を行っていくというのは効果的な移行戦略の1つです。\r\n小さな単位で移行を行うことによって、SwiftUIへ移行する上での課題を素早くキャッチし、改善サイクルを徐々に回しながら移行できるというメリットなどがあります。\r\n\r\n本トークでは\r\n- 小さくSwiftUI移行を行う手法\r\n- 小さく移行をする場合のメリット \/ デメリット\r\n- 移行時の勘所やハマり所\r\n\r\nについて、実プロダクトで移行を続けている中で得られた知見や具体例と共に解説します。",
            "accepted": false,
            "speaker": {
                "name": "izumi",
                "kana": "イズミ",
                "twitter": "rizumi_jp",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/1c462db4-8e12-4dff-9bb5-3cc4e3a9e6c8.jpg"
            },
            "created": "2022-06-06T15:51:08+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "95aa2d97-e950-49f7-9a77-2bc97358063e",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/95aa2d97-e950-49f7-9a77-2bc97358063e",
            "title": "Go言語での実用例に見る！AsyncChannelとスレッド間通信チャネル概説",
            "abstract": "高度な並行アルゴリズムを提供するSwift Async AlgorithmsにAsyncChannelというものがあります。チャネルとはスレッド間でメモリを共有する手法の1つで、特にGo言語での採用により近年一般的になっています。\r\n本発表ではGo言語での使用例を用いてチャネルの概説を、そしてAsyncChannelとの差異に思いを馳せチャネルについて簡単な認識を持つことが目的です。\r\nスレッド間のメモリ共有は、共有メモリを使い危険領域を排他制御等で保護する手法が一般的ですが、チャネルを使うと同期が入出力としてより素直に表現できます。Go言語にはDo not communicate by sharing memory; instead, share memory by communicatingという格言がありますが、 他方、チャネルとバグの研究を取り上げ現実についても触れたいと考えています。",
            "accepted": false,
            "speaker": {
                "name": "たふみ",
                "kana": "タフミ",
                "twitter": "CreatorQsF",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/cf2c9ffa-3604-4da7-8fc6-c87cc82d2a61.jpg"
            },
            "created": "2022-06-06T15:56:14+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "62dfc191-5569-4cd1-ae39-897b03ac85ef",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/62dfc191-5569-4cd1-ae39-897b03ac85ef",
            "title": "多言語対応アプリにおける継続的ローカリゼーションの実践",
            "abstract": "世界中のユーザーへ向けてサービス展開する場合、システムのグローバリゼーション及びローカリゼーションが必要です。\r\n\r\nローカリゼーションではまず「特定言語への翻訳対応」が行われますが、その結果としてアプリの開発フロー内で継続的な「翻訳データの管理」と「テキストの翻訳作業」が必要になってしまいます。\r\n\r\n日本語、英語の2言語までは「なんとなくスプレッドシートで管理してみる」が通用しなくもないのですが、対応言語数が増えるほど翻訳データ自体と翻訳タスクの管理コストが増え、結果として運用や品質に対して悪影響が出やすくなっていきます。\r\n\r\n本トークでは、12言語に対応している「REALITY」アプリの事例をもとに翻訳フローをどのように構築したか、対応言語を増やした結果どのような問題が起きたか、その問題にどう対処しているか、現状の課題は何で今後どうしようと考えているか、などをお話します。",
            "accepted": false,
            "speaker": {
                "name": "ションロー",
                "kana": "ションロー",
                "twitter": "tion_low",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/48a8ec99-6032-4e02-bb60-f169e117f7e5.jpg"
            },
            "created": "2022-06-06T16:40:56+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "7c9ecd27-f31e-44ff-a46a-284925e1b9a3",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/7c9ecd27-f31e-44ff-a46a-284925e1b9a3",
            "title": "Toilを除去して開発者体験を向上させていく",
            "abstract": "iOSアプリの配布や、リリース作業のように、\r\n「手作業で繰り返し、自動化が可能で、長期的な価値がない、サービスの成長に比例して増加する」作業は、SREの原則の中でToil(トイル)と呼ばれています。\r\nToilは、機能開発に集中していたりすると、中々手が回らなかったり、作業への慣れや習慣化によって改善が行われにくくなります。\r\n\r\nToilに対して、よく考えずに自動化を行ってしまうと、システムが複雑化していくことで、その自動化を行った人しか理解できずに属人化が起こります。\r\nそのため、日頃から作業が持つ本質的な価値にフォーカスして整理し、シンプルかつ誰でもメンテナンスできるようにしておくことが大切です。\r\n\r\nこのトークでは、チームの開発者体験を向上させるために、実際に観測したToilを例に、どのようにカイゼンの試行錯誤を行っていけばよいか、また具体的にどんなカイゼンしたのかをお話しします。",
            "accepted": false,
            "speaker": {
                "name": "raz",
                "kana": "ラズ",
                "twitter": "razpy01",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a571f3b6-ccab-4dde-8c2c-68de27e60dde.jpg"
            },
            "created": "2022-06-06T17:57:23+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f76758de-27f9-4b45-a1a7-0934c1df6d9b",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f76758de-27f9-4b45-a1a7-0934c1df6d9b",
            "title": "Toilを除去して開発者体験を向上させていく",
            "abstract": "iOSアプリの配布や、リリース作業のように、\r\n「手作業で繰り返し、自動化が可能で、長期的な価値がない、サービスの成長に比例して増加する」作業は、SREの原則の中でToil(トイル)と呼ばれています。\r\nToilは、機能開発に集中していたりすると、中々手が回らなかったり、作業への慣れや習慣化によって改善が行われにくくなります。\r\n\r\nToilに対して、よく考えずに自動化を行ってしまうと、システムが複雑化していくことで、その自動化を行った人しか理解できずに属人化が起こります。\r\nそのため、日頃から作業が持つ本質的な価値にフォーカスして整理し、シンプルかつ誰でもメンテナンスできるようにしておくことが大切です。\r\n\r\nこのトークでは、チームの開発者体験を向上させるために、実際に観測したToilを例に、どのようにカイゼンの試行錯誤を行っていけばよいか、また具体的にどんなカイゼンしたのかをお話しします。",
            "accepted": false,
            "speaker": {
                "name": "raz",
                "kana": "ラズ",
                "twitter": "razpy01",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a571f3b6-ccab-4dde-8c2c-68de27e60dde.jpg"
            },
            "created": "2022-06-06T17:58:10+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "5e658070-3d30-4186-84ea-39bed8d553d7",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/5e658070-3d30-4186-84ea-39bed8d553d7",
            "title": "やってみてわかった！ Managed App Configuration対応のコツ",
            "abstract": "MDMの機能の一つである「Managed App Configuration」を使うと、MDMで配布したアプリごとに個別の設定ができるようになります。会社や教育現場において、全端末に設定を一括で行ったり、アプリの動作を強制変更させたりすることができる、大変便利な機能です。\r\n\r\nManaged App Configurationは、アプリ開発者から見るとその仕組みや実装はとても簡単なのですが、MDMを使える環境がないと動作の確認やデバッグが難しいという難点があります。そのため、個人の開発者が対応をするのはなかなか難しいかもしれません。\r\n\r\n本トークでは、教育現場でも使われているScratch専用ブラウザアプリ「Scrub」をManaged App Configurationに対応させた経験から、その実装方法や動作確認のやり方、デバッグ、対応のコツなどをお話しします。",
            "accepted": false,
            "speaker": {
                "name": "大庭 慎一郎",
                "kana": "オオバ シンイチロウ",
                "twitter": "ooba",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/47a6a112-67a9-4482-940d-8f429bf7e712.png"
            },
            "created": "2022-06-06T18:12:43+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "ad544d2d-0e37-48f7-836a-3d46abe4ad2f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/ad544d2d-0e37-48f7-836a-3d46abe4ad2f",
            "title": "モバイルアプリの行動ログの「仕込み」を快適にする",
            "abstract": "ここでの「行動ログ」とは、特定の画面の表示、ボタンのタップなど、ユーザー操作を起点に送信するものを指します。集めた行動ログは、サービス開発上の分析や実態把握に役立ちます。\r\n\r\nアプリ開発者は、そのログを仕込む役割を担いますが、しばしば課題にぶつかります。\r\n\r\n - いざ分析するとき「ログが足りない！」\r\n   - 「QA時にログ送信、網羅した？」\r\n   - そもそもログ要件が十分に練られていない……\r\n - ……\r\n\r\n本セッションでは、行動ログにまつわる悩みの種のうち、ログ実装の「仕込み」にフォーカスして、ミスを防ぐ仕組みや工夫の事例をご紹介します。\r\n\r\nトピック\r\n- ドキュメントをベースにした型安全なログ実装コード自動生成\r\n- iOS 14以降で使いやすくなった Logger APIの活用\r\n- QA作業を踏まえたログ実装網羅チェッカー\r\n\r\nなど",
            "accepted": true,
            "speaker": {
                "name": "Yuji Fujisaka",
                "kana": "ユウジ　フジサカ",
                "twitter": "yujif_",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/f939bcf9-0b20-44d6-8e02-c0cc18df1d8b.jpeg"
            },
            "created": "2022-06-06T18:12:47+09:00",
            "timetable": {
                "track": "Track B",
                "starts_at": "2022-09-12T13:55:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "6c4615f5-b471-4f78-9044-4ae3f8dd75d4",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/6c4615f5-b471-4f78-9044-4ae3f8dd75d4",
            "title": "施策基盤としてのディープリンク 〜なめらかにアプリが開く体験のために〜",
            "abstract": "SNSにおけるプロモーションや、Webのユーザーをアプリユーザーに転換させるような施策を実施したい場合にディープリンクを利用したいケースはよくあるでしょう。\r\n\r\nディープリンクを利用してユーザーをアプリに連れてくる際「ユーザーが文脈を理解できている状態」というのは重要で、ユーザー状態に応じたフローを組むだけでは施策の効果を十分に発揮できない可能性があります。\r\n\r\nこのセッションでは、滑らかな体験でアプリにユーザーを連れてくるために「ディープリンク」を効果的に活用する方法やその仕組みについて紹介します。\r\n\r\n話すトピック \r\n・概念としてのディープリンクおよび、ディープリンクを実現するための機能紹介\r\n・アプリのインストール状況や初回設定状況などのユーザー状態に応じた適切な遷移方法\r\n・ユーザーに文脈を理解した状態のままアプリに来てもらうために活用できる仕組み\r\n・コンバージョンの計測方法",
            "accepted": true,
            "speaker": {
                "name": "あつや",
                "kana": "アツヤ",
                "twitter": "n_atmark",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/678b54ad-c083-422a-a910-2919dd9467a4.jpg"
            },
            "created": "2022-06-06T18:13:11+09:00",
            "timetable": {
                "track": "Track B",
                "starts_at": "2022-09-10T16:40:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "50a37a26-b470-449a-bb85-9b2d5faef8f2",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/50a37a26-b470-449a-bb85-9b2d5faef8f2",
            "title": "Maintainability Indexを計測することでiOSプロジェクトのコードの保守性を改善した話",
            "abstract": "iOSアプリ開発に限らず、コードを保守しやすい状態に保つことはとても重要です。\r\nでは保守が難しい箇所を特定するにはどうすればいいでしょうか。また、リファクタリング後に何をもって保守がしやすくなったと判断すれば良いでしょうか。\r\nその方法の一つにMaintainability Index(保守容易性指数)の計測があります。\r\nMaintainability Indexとはその名の通り、コードがどれくらい保守しやすいかを表す指標のことであり、VS Codeでは一部の言語で計測することができます。\r\n\r\nこのトークでは以下のトピックを話します。\r\n\r\n- Maintainability Indexとは\r\n- SwiftSyntaxを用いた計測方法について\r\n- 計測してみてどんな気付きがあったか\r\n- どのように保守性が改善されたか\r\n\r\nこのトークがみなさんのコードの保守性の改善のお役に立てば幸いです。",
            "accepted": false,
            "speaker": {
                "name": "toya108",
                "kana": "トーヤイチゼロハチ",
                "twitter": "tk108gabalian",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/49412af1-aabe-4730-b777-03cde102cba1.jpg"
            },
            "created": "2022-06-06T18:32:25+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f554bc51-9c63-4487-a556-0085269511c4",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f554bc51-9c63-4487-a556-0085269511c4",
            "title": "Bluetoothでレゴをリモートプログラミングしよう",
            "abstract": "プログラミング可能なロボットキットである「LEGO BOOST」の発売以降、Bluetoothによるリモートプログラミングに対応しているレゴのセットがたくさん発売されています。その数はなんと20以上！\r\n\r\nその中にはプログラミングできることをアピールしていないセットも多くあります。プログラミング＝マインドストームではありません。あなたがお持ちのセットも実はプログラミング対応しているかもしれませんよ？\r\n\r\n本トークでは、レゴ社が公開している「LEGO Wireless Protocol」を中心に、どんな種類のレゴブロックがどんな感じでプログラミングできるかについてお話しします。あなたのレゴ作品をiPhoneやApple Watchとつなげて、思う通りに動かしましょう！",
            "accepted": true,
            "speaker": {
                "name": "大庭 慎一郎",
                "kana": "オオバ シンイチロウ",
                "twitter": "ooba",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/47a6a112-67a9-4482-940d-8f429bf7e712.png"
            },
            "created": "2022-06-06T18:38:22+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-11T15:30:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f4ca136c-710e-4373-8b4c-1a4265ff5ed7",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f4ca136c-710e-4373-8b4c-1a4265ff5ed7",
            "title": "大学で出席管理アプリ・掲示板閲覧アプリを開発・運用している学生の話",
            "abstract": "現在、愛知県の大学で大学側と協力し、出席管理アプリ・掲示板閲覧アプリを開発・運用している学生です！\r\n出席管理アプリは教室内に設置されたBLEビーコンを用いて位置推定を行い、授業に出席登録できるアプリであり、\r\n掲示板閲覧アプリは学生掲示板をスマートフォンから閲覧できるアプリです。\r\nどちらもAppStoreにて公開・運用しております。\r\n\r\nこのLTではこれらのアプリで用いている技術や運用を紹介しますので\r\n「エンターテイメントとほんの少しの知見共有」として聞いていただければ幸いです。\r\n\r\nまた、大学に出席管理アプリ・掲示板閲覧アプリがない学生の皆さんへ\r\n「皆さんも大学のアプリを開発し、学生生活をよくしよう！！！！」というメッセージとなればいいなと思っています。\r\n\r\n対象とする人:\r\n- ***学生でiOS開発をしている人***\r\n- 学生のアプリ開発の話を温かい目で見てくださる方",
            "accepted": true,
            "speaker": {
                "name": "kntkymt",
                "kana": "ケー エヌ ティー ケー ワイ エム ティー",
                "twitter": "kntk47502405",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/875511e2-306f-4017-b408-1e351fde3f3d.jpg"
            },
            "created": "2022-06-06T18:49:11+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T16:05:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "dcbaea5a-ed8d-4dba-8b4f-894ec5234d95",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/dcbaea5a-ed8d-4dba-8b4f-894ec5234d95",
            "title": "DocC Documentation Archiveをアプリ開発で活用してみよう",
            "abstract": "DocCは、Swiftプロジェクト向けのソースコードベースのドキュメント生成ツールです。\r\nこのDocCがXcode 13.3以降、アプリ開発での活用を想定して進化しました。しかし、アプリ開発におけるドキュメントは既にMarkdown等で用意しているプロジェクトも多く、DocCをわざわざ導入しようと思わないかもしれません。\r\n\r\nそんなプロジェクトでDocCを活用するのに便利なのが、ドキュメント作成時の生成物であるDocumentation Archiveの利用です。これは、ドキュメントを生成するために必要なclass名や依存関係等の情報が構造化して詰め込まれたものです。これを用いて、プロジェクトの依存関係を自動で見える化し、リファクタリングや新メンバーへの状況共有に役立てることができます。\r\nこのトークでは、その具体的な方法とDocumentation Archiveの構成等についてお話します。",
            "accepted": false,
            "speaker": {
                "name": "あおい",
                "kana": "アオイ",
                "twitter": "aomathwift",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/bfbe98fa-cbf9-4238-abbb-af3b9552c296.jpg"
            },
            "created": "2022-06-06T18:56:35+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "fbb3d1d9-8f12-4b67-b3da-77b9c2a399b3",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/fbb3d1d9-8f12-4b67-b3da-77b9c2a399b3",
            "title": "Named Color完全に理解した",
            "abstract": "Asset Catalogを使ってカラーの管理が出来るNamed Colorという機能、便利ですよね。\r\nしかし、カラー名の変更が必要になった際に、Interface Builderで使用しているNamed Colorは参照が更新されません。\r\nXMLをgrepしてカラー名を一括で置換することもできますが、Xcodeでファイルを開いたタイミングで色が適用されdiffが発生することもあります。\r\nこのLTでは、このようなNamed Colorの厄介な挙動を1つ1つ紐解いて、Named Colorに変更を加える際のベストプラクティスについて話します。",
            "accepted": false,
            "speaker": {
                "name": "Yazaki Yuto",
                "kana": "ヤザキユウト"
            },
            "created": "2022-06-06T19:13:51+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "3adef18d-fd28-4d53-9799-5ddb695052e9",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/3adef18d-fd28-4d53-9799-5ddb695052e9",
            "title": "SwiftUI PreferenceKey を利用した自由自在な View 開発",
            "abstract": "SwiftUIのPreferenceKeyは子Viewが親Viewと通信する際に利用できる便利な仕組みです。\r\nPreferenceKeyをうまく活用すれば、SwiftUIで実現できないと思っていたView が作れるようになることもあります。\r\nしかし、PreferenceKeyに関する情報は少ないため、とっつきにくいと感じる方もいるのではないでしょうか。\r\n\r\nこのトークでは、以下の内容で発表しPreferenceKeyを今日から使えるようになることを目指します。\r\n\r\n- PreferenceKeyの基本とその仕組み\r\n  - 様々なAPIに触れつつ、どのようにPreferenceKeyがViewに作用するのか探ります\r\n- 複雑なViewの開発方法から学ぶ PreferenceKey\r\n  - 上から順に詰めていくGrid実装\r\n  - あるViewを任意のViewの座標にアニメーションさせる実装",
            "accepted": false,
            "speaker": {
                "name": "アイカワ",
                "kana": "アイカワ",
                "twitter": "kalupas226",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/af92f5ac-c913-48db-9ecd-7d2db0b5ffda.jpg"
            },
            "created": "2022-06-06T19:55:35+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "b9dd294e-64cb-42b6-91a8-4c6a9168d6ac",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/b9dd294e-64cb-42b6-91a8-4c6a9168d6ac",
            "title": "SwiftでWebサイトを作ろう〜Publishのススメ〜",
            "abstract": "ブログを自作するには、Hugo（Go）、Gatsby（JavaScript）、Jekyll（Ruby）などのフレームワークを使うことが多いと思います。\r\n\r\n「ブログをSwiftで作りたい…！」\r\n\r\nこう思ったことはありませんか？\r\n\r\n実はPublishというSwiftでブログを作れるフレームワークがあります。\r\nこちらを使うことで、HTMLをSwift、記事をMarkdownで書くことができます。\r\n\r\n私は実際にPublishを使ってブログを運営しており、そこで学んだコツやノウハウを紹介します。\r\nリポジトリをパブリックにすれば、無料でGitHub Pagesへデプロイまでできるようになります。\r\n\r\nこのトークを聞いて、ぜひSwiftでWebサイトを作ってみましょう！",
            "accepted": false,
            "speaker": {
                "name": "uhooi",
                "kana": "ウホーイ",
                "twitter": "the_uhooi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ef3805a0-b669-493a-9cae-f5ecad9e67e5.jpg"
            },
            "created": "2022-06-06T20:15:48+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "c7f8e6d0-21b3-480c-9d14-7fec3674b6f4",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/c7f8e6d0-21b3-480c-9d14-7fec3674b6f4",
            "title": "要注意！CLGeocoder で見落としがちな仕様2選！",
            "abstract": "現在、MapKitを使ったアプリを作成しており、大量の住所データにオリジナルピンを置いていく工程があります。\r\n\r\nそこで住所の文字データを緯度経度の座標に変換させるCoreLocation 内のCLGeocoderクラス（ジオコーディング）を利用しました。\r\n\r\n※緯度経度の座標から住所に変換する逆ジオコーディングも出来ます\r\n\r\nそんな便利屋CLGeocoderにも苦手なことはある様で、大きく２つ気をつける点がある事、それに対して自分なりの解決策も含めてご紹介します。\r\n\r\n　　　　　【具体的には】\r\n\r\n　　　　　・ピンが表示されたり、表示されなかったりして毎回挙動が不安定だぞ！？\r\n\r\n　　　　　・断固として表示してくれないピンがあるぞ！？\r\n\r\n　　　　　・逆ジオコーディングで座標から日本の住所形式に変換する方法　などなど\r\n\r\n",
            "accepted": false,
            "speaker": {
                "name": "おじおじ。",
                "kana": "オジオジ",
                "twitter": "Daue_Ueda23",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ba30fd67-2f28-477d-8446-17bb25e3588e.jpg"
            },
            "created": "2022-06-06T21:19:39+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "0f0f938d-2fff-4520-9623-b57ce7a044e1",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/0f0f938d-2fff-4520-9623-b57ce7a044e1",
            "title": "4次元プログラミング!? xyzに次ぐ4番目の要素『w』の存在意義とは",
            "abstract": "我々は平面の座標を表すのに数字のペアx,yを使い、3次元プログラミングでは空間の座標を表現するためにさらに座標の要素を追加してx,y,zの3つ組みを使います。\r\nではsimd_float4、SCNVector4などに存在する4つめの要素wは何なのでしょう？\r\nまさか4次元空間を扱うためのものなのでしょうか？\r\n\r\nこれらはただの4つ組のデータに過ぎないため何の情報を格納するかは自由です。\r\nアルファ値を含んだRGBAの色情報を格納してもいいですし、回転軸の方向をx,y,zに格納し、回転角度をwに格納しても良いでしょう。実際SceneKitではそのように使用する場面もあります。\r\n\r\nしかしこの4つ目の要素、ちゃんと3次元プログラミングにおいて図形的に重要な意味があるのです。\r\n2次元を扱う場合にも実は同様に3つ組の数字を使うことがあります。\r\n冗長に思える要素を追加することで何が便利になるのかを解説します。",
            "accepted": false,
            "speaker": {
                "name": "ta_ka_tsu",
                "kana": "タカツ",
                "twitter": "ta_ka_tsu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6abf906a-d31b-4acb-9223-dba0739142e6.png"
            },
            "created": "2022-06-06T21:38:43+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "912757f8-b8ef-4faf-8697-3a8a6eb38363",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/912757f8-b8ef-4faf-8697-3a8a6eb38363",
            "title": "MLOps for Core ML",
            "abstract": "MLOpsはML Operationsの略で、データ収集・前処理・学習・デプロイ・監視といった機械学習のライフサイクルの継続的な運用を効率化するための考え方や手法を総称してこう呼ばれています。たとえば、蓄積したデータを用いたモデルの再学習を定期的に自動実行し最新データに合うようモデルを改善し続ける仕組み、モデルを本番システムに自動デプロイする仕組み等が含まれます。機械学習をビジネスで本番運用するために不可欠な考え方として昨今ホットなトピックとなっています。\r\n\r\n一方で、Core MLモデルの世界ではMLOpsという考え方はまだそれほど広がっていないように思います。多くの場合は一度学習したモデルを利用し続けるか、手運用で再学習等を行っているのではないでしょうか。Core MLにMLOpsの考え方を導入しするとどのように継続的な運用を効率化できるのか、そのパターンを解説します。",
            "accepted": true,
            "speaker": {
                "name": "堤 修一",
                "kana": "ツツミ シュウイチ",
                "twitter": "shu223",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7f1dd104-099a-4fcd-a563-6297b1db0636.jpg"
            },
            "created": "2022-06-06T22:41:07+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-10T18:10:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "dff98882-2103-49d1-957e-73411cc38588",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/dff98882-2103-49d1-957e-73411cc38588",
            "title": "なぜAppleはサイドローディングを認めないのか",
            "abstract": "2020年8月、フォートナイトを運営するEpic Gamesは、App Storeを通してAppleが徴収する30%の手数料に対して異議を唱え、App Store以外でのアプリのインストールを可能にするサイドローディングの提供をAppleへ要求する訴訟を起こしました。\r\n\r\nこれに対しAppleはセキュリティリスクを著しく高めるとして反論し、翌年2021年9月にEpic Gamesの申し出は棄却されましたが、この訴訟を皮切りに各国で調査が行われ、Appleに対してサイドローディングやサードパーティの決済手段を認めさせようとする動きが活発化しています。\r\n\r\n本トークでは、各国のAppleに対して求めている公平性とそれに対するApple側の対応についてまとめながら、Appleがサイドローディングを認めることにより高まるセキュリティリスクについて、Googleにおける対応と比較しながらお話しします。",
            "accepted": false,
            "speaker": {
                "name": "岩名 勇輝",
                "kana": "イワナ ユウキ",
                "twitter": "_rockname",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/bac50e47-837f-4990-ac92-da0b5a3f3c20.jpg"
            },
            "created": "2022-06-06T22:49:56+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8ffe9bde-5396-464c-bfac-c3018c958a93",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8ffe9bde-5396-464c-bfac-c3018c958a93",
            "title": "不具合分析による開発プロセスの弱点の可視化",
            "abstract": "リリース前のQAで不具合が大量に見つかってしまうと修正作業に忙殺される、リリースが遅延してしまう、時には不十分な品質でリリースしてしまうということが起こりえます。\r\nそうならないためには早期に不具合を発見、または不具合の混入を防ぐことが重要となります。\r\n\r\nすでに問題が起こってしまっているチームでよく実施されるのが不具合分析です。不具合は分析することで改善へのヒントに繋がります。\r\nそうした不具合分析の中で、ODC分析という手法があります。\r\nODC分析では開発プロセスに着目して、その質を可視化することで改善へとつなげていきます。\r\n私達のチームではそんなODC分析に取り組みました。\r\n\r\nこのトークでは不具合分析の中でもODC分析という分析手法について手法の説明、取り組んだ結果について話します。それにより問題を抱えているチームが不具合分析をやってみようと思うことや、やり方の参考になればと思います。",
            "accepted": false,
            "speaker": {
                "name": "kariad",
                "kana": "カリアド",
                "twitter": "kariad_uu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a13cd2f9-13e6-42d2-9947-3724fc58c742.png"
            },
            "created": "2022-06-06T23:29:08+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "5f8c00c0-05d3-4f4c-ace9-8751341eddd4",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/5f8c00c0-05d3-4f4c-ace9-8751341eddd4",
            "title": "開発生産性と品質を高める開発者とテストの関わり方",
            "abstract": "ソフトウェア開発においてテストは品質を高める上で重要な作業の一つです。\r\nではテストとは誰がやるべき作業でしょうか。QAと呼ばれるメンバーにテストを丸投げしていませんか？\r\n\r\n開発者でもテストとの関わりとしてユニットテストを書くことは一般的になってきたかもしません。しかしそれがどんな効果があるか理解して書けているでしょうか。\r\nリーンやアジャイル、DevOpsが広まるにあたってスピードと品質の両立が求められる昨今のソフトウェア開発において、開発者としてもテストのやり方や考え方を変化させる必要があります。\r\n\r\nこのトークでは、開発生産性と品質を高めながら開発するために、開発者がどのようにテストと関わっていくべきかを話したいと思います。",
            "accepted": false,
            "speaker": {
                "name": "kariad",
                "kana": "カリアド",
                "twitter": "kariad_uu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a13cd2f9-13e6-42d2-9947-3724fc58c742.png"
            },
            "created": "2022-06-06T23:33:25+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f8ea2082-f732-4760-a026-ca5279baa6d5",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f8ea2082-f732-4760-a026-ca5279baa6d5",
            "title": "未来のアプリエンジニアを育てよう！ ~iOSアプリエンジニア育成プロジェクトのはじめかた~",
            "abstract": "「アプリエンジニアが少ない……。」\r\n皆さんも一度は口にしたことありませんか？\r\n新卒・中途問わず、アプリエンジニアの採用に苦戦していませんか？\r\n\r\n一口にiOSアプリ開発と言ってもUIKit・SwiftUI・Flutterなど様々な技術選択があり、最近は特に応募者と企業のミスマッチが起こりやすいと感じています。\r\n\r\nそこで私たちは「アプリエンジニアが居ないなら育成しよう！」と考えて育成プロジェクトを立ち上げ、運用中です。\r\n\r\nこのトークでは実際にアプリエンジニア育成プロジェクトを運用している経験をもとに、\r\n・メンターが少なくても始められる、育成プロジェクトのつくりかた\r\n・多すぎる技術スタック！何から教えていくべきか\r\n・育成プロジェクトの成果と課題\r\n・アプリ開発に魅力を感じてもらうために\r\n\r\nについて話します。このトークを通して、みなさんとアプリエンジニア不足を解消する方法を考えられるとうれしいです。",
            "accepted": false,
            "speaker": {
                "name": "ああうえ",
                "kana": "アアウエ",
                "twitter": "_kwzr_",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6830315e-e375-4146-a5f2-5b2c82957643.jpg"
            },
            "created": "2022-06-06T23:39:05+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "15522e82-c434-4640-b4a6-73307010e889",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/15522e82-c434-4640-b4a6-73307010e889",
            "title": "９ヶ月TCAでリプレース案件をチーム開発してて、ココが良かった悪かった",
            "abstract": "2021年12月から9ヶ月（２０２２年８月発表時点で）４人体制でiOS14でComposable Architectureで開発チームの１メンバーとして開発してきました。\r\nComposable Architectureのここが良かった悪かったという経験を主観的に話したいです。\r\n今まではUIKitではRxSwiftでClean Architectureでの開発してきたので、\r\nその経験と比較してどうだったかについても触れます。\r\n\r\nこれからUIKitからSwiftUI導入に向けて、アーキテクチャの変更、\r\nSwiftUI時代のアーキテクチャの一つの選択肢としての経験談が話せたらと思います。",
            "accepted": false,
            "speaker": {
                "name": "中山 陽介",
                "kana": "なかやま ようすけ",
                "twitter": "yosuke8080",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/acdc7226-e4ba-4413-b1e3-53afb1c4036e.jpg"
            },
            "created": "2022-06-06T23:44:06+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "889edc71-f96f-47a1-bc0e-36e8ffe3a3c3",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/889edc71-f96f-47a1-bc0e-36e8ffe3a3c3",
            "title": "Unreal EngineとiPhoneを使って始めるリアルタイムAR配信",
            "abstract": "ここ数年、格好良いAR表現が付いた映像が増え、皆も色々な所で目にしていると思います。\r\nエンジニアなら自分でも実装して実現したくないでしょうか？\r\n\r\n私は昨年からARを本業としてAR表現があるリアルタイム配信をいくつか実施してきました。\r\nUnreal Engineを使いカメラとトラッキング機材を中心に連携し作成していきます。\r\n\r\nその実現に必要な要素を解説しスキルを伝授していきます！\r\n\r\n- ワークフロー解説\r\n- CG原点を置きCGの空間と現実空間を一致させる方法\r\n- カメラトラッキング方法\r\n- Unreal Engineを使った基本的なシーン作成\r\n- iPhoneを使う手法\r\n- PTZカメラを使う手法\r\n\r\nデモと手法解説を軸に、AR表現に興味を持った人がさらに興味を持つようなセッションです。",
            "accepted": true,
            "speaker": {
                "name": "服部 智",
                "kana": "ハットリ サトシ",
                "twitter": "shmdevelop",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/cb749312-75d9-4dbe-8fe9-01f297722d67.jpg"
            },
            "created": "2022-06-06T23:51:02+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-11T11:05:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f8a20af8-da22-4dda-b614-a0285de3afca",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f8a20af8-da22-4dda-b614-a0285de3afca",
            "title": "Unreal EngineとiPhoneを使って始めるリアルタイムAR配信",
            "abstract": "ここ数年、格好良いAR表現が付いた映像が増え、皆も色々な所で目にしていると思います。\r\n自分でも実装して実現したくないですか？\r\n\r\n私は昨年からARを本業としてAR表現があるリアルタイム配信をいくつか実現してきました。\r\nUnreal Engineを使いカメラとトラッキング機材を中心に連携し作成していきます。\r\n\r\nその実現に必要な要素を解説しスキルを伝授していきます！\r\n\r\n- ワークフロー解説\r\n- CG原点を置きCGの空間と現実空間を一致させる方法\r\n- カメラトラッキング方法\r\n- Unreal Engineを使った基本的なシーン作成\r\n- iPhoneを使う手法\r\n\r\nデモと手法解説を軸に、AR表現に興味を持った人がさらに興味を持つようなセッションです。",
            "accepted": false,
            "speaker": {
                "name": "服部 智",
                "kana": "ハットリ サトシ",
                "twitter": "shmdevelop",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/cb749312-75d9-4dbe-8fe9-01f297722d67.jpg"
            },
            "created": "2022-06-06T23:52:35+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "7912485a-0e44-4a05-8e0c-d946d1aa773e",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/7912485a-0e44-4a05-8e0c-d946d1aa773e",
            "title": "詳解 Sign in with Apple",
            "abstract": "Apple公式の認証システム「Sign in with Apple」。\r\nTwitter等のサードパーティのログインサービスを提供している場合、Sign in with Appleの対応が必要となります。\r\n\r\nそのため、Sign in with Apple対応をされたことがある方も多いのではないかと思います。\r\nSign in with AppleはOAuth, OpenID Connectが前提知識として必要となりますが、皆さんは理解をした上で自信を持って対応することができましたか？\r\n特にサーバーサイドが担当する部分に関しては、公式ドキュメントだけでは理解が難しい部分もあります。\r\n\r\n本セッションでは、前提知識として必要なOAuth, OpenID Connectの解説をしながら、Sign in with Appleの仕組みとアプリ側で必要な実装, サーバー側で必要な実装について紹介します。",
            "accepted": false,
            "speaker": {
                "name": "かわB",
                "kana": "カワビー",
                "twitter": "dspeeds",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/aa32f7aa-1292-4a8b-8d0f-803cd4fba505.jpeg"
            },
            "created": "2022-06-07T00:04:29+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "973904b2-4359-4e50-a898-efd85f731625",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/973904b2-4359-4e50-a898-efd85f731625",
            "title": "5分で理解するSign in with Apple",
            "abstract": "Apple公式の認証システム「Sign in with Apple」。\r\nTwitter等のサードパーティのログインサービスを提供している場合、Sign in with Appleの対応が必要となります。\r\n\r\nそのため、Sign in with Apple対応をされたことがある方も多いのではないかと思います。\r\nSign in with AppleはOAuth, OpenID Connectが前提知識として必要となりますが、皆さんは理解をした上で自信を持って対応することができましたか？\r\n特にサーバーサイドが担当する部分に関しては、公式ドキュメントだけでは理解が難しい部分もあります。\r\n\r\n本セッションでは、前提知識として必要なOAuth, OpenID Connectに触れながら、Sign in with Appleの仕組みについて5分で紹介します。",
            "accepted": false,
            "speaker": {
                "name": "かわB",
                "kana": "カワビー",
                "twitter": "dspeeds",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/aa32f7aa-1292-4a8b-8d0f-803cd4fba505.jpeg"
            },
            "created": "2022-06-07T00:13:02+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f0acc8b6-7cec-4fa4-a637-55a640b23a5e",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f0acc8b6-7cec-4fa4-a637-55a640b23a5e",
            "title": "AR演出に必須のFreeDプロトコルをSwiftで実装する",
            "abstract": "AR表現を作る際にカメラの動きを合成用PCに送信する必要があり、その標準となっているのがFreeDというプロトコルです。\r\n\r\nこのプロトコルをSwiftで実装しiPhoneから情報送信できるようにしました。\r\nプロトコルの概要を解説し、実装内容についてコードを見せながら説明します。\r\n\r\n- macOSアプリとして実装したFreeD送信シミュレータ\r\n- iPhoneから送信したデータを元にカメラを連動させたxR表現\r\n\r\nのデモをします。\r\n\r\nデモ、ソース解説を中心とした、ARとiPhoneの可能性を開く楽しいセッションです。\r\n",
            "accepted": false,
            "speaker": {
                "name": "服部 智",
                "kana": "ハットリ サトシ",
                "twitter": "shmdevelop",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/cb749312-75d9-4dbe-8fe9-01f297722d67.jpg"
            },
            "created": "2022-06-07T00:14:02+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "841f38a0-f3e4-4b39-b14c-de6f80521eee",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/841f38a0-f3e4-4b39-b14c-de6f80521eee",
            "title": "Swiftで我が家をより便利に、安全に！",
            "abstract": "我が家にはたくさんのIoTガジェットがあって、カーテンや玄関の鍵を開け閉めしたり、大活躍です。\r\nしかしエンジニアという人種は、既存の機能では満足できず、カスタムして、色々作り込みたくなるものです!\r\nそこで日頃お世話になっているSwift、我が家に余ってたラズパイ、そしてiPhoneの力を借りて、より便利で安全なスマートホームを目指した取り組みを共有します。\r\n具体的には…\r\n●ラズパイでのSwiftやServerSideSwiftフレームワークのセットアップ\r\n●iPhoneのセンサー情報をServerSideSwiftのAPI経由でラズパイのDBに書き込む方法\r\n●ラズパイと既存のIoTガジェットの連携方法\r\n●SwiftでラズパイのGPIO経由でセンサーやLEDを操作する方法\r\nなどをデモを交えて紹介する予定です。\r\n\r\nぜひ皆さんもSwiftを使った自宅のスマートホーム化、電子工作を楽しみましょう！",
            "accepted": true,
            "speaker": {
                "name": "すぎー",
                "kana": "スギー",
                "twitter": "u5_03",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/b2eabbb6-7a5f-46d0-9d6a-bae13d2a682a.jpg"
            },
            "created": "2022-06-07T00:15:26+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-10T17:15:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "fe27e6a0-f295-4ea0-97b1-32e9a118f32c",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/fe27e6a0-f295-4ea0-97b1-32e9a118f32c",
            "title": "RustでiOSのビジネスロジックを記述できるか",
            "abstract": "KMMやFlutterなどマルチプラットフォームな開発環境が脚光を浴びています。でもちょっと待ってください。あの人気の言語RustもiOS、Androidの両方で動くのです。Rustを使ってビジネスロジックを書いてみませんか。\r\nこのトークでは\r\n\r\n- ネットワークアクセス\r\n- ストレージアクセス\r\n- モデルの共通化\r\n\r\nなど、ビジネスロジックを書くためにはiOSでRustで何ができればいいのか、検証した結果をお話しします。",
            "accepted": false,
            "speaker": {
                "name": "k2moons",
                "kana": "ケーツームーンズ",
                "twitter": "beowulf_tech",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/578e3c80-1f3a-468d-8e84-b84a91bdb191.jpg"
            },
            "created": "2022-06-07T00:40:30+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "fb23fd46-1b87-4e8c-b67d-88c61edfbb24",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/fb23fd46-1b87-4e8c-b67d-88c61edfbb24",
            "title": "機能横断型チームの実現へ向け、iOS開発への参加コストを減らす",
            "abstract": "タイミーでは、全ての職能を1チームにまとめた職能横断型チームとしてプロダクト開発に取り組んでいます。\r\n職能横断型チームに属する開発者は1つの専門領域に特化しながらも、他の領域も広く理解していくことが重要だとされています。\r\nしかし、過去に職能別にチームを分けていた名残が強くあり、依然としてiOSのタスクはiOSエンジニアしか担当できない状況が続いていました。\r\nそれを打開するために、iOSのプロジェクト構成を見直しました。SwiftPMをプロジェクトの中心に据えることで環境構築のコストを限りなくゼロにしたり、他の領域でも使われつつある宣言型UIであるSwiftUIを導入することで、iOS開発へのハードルを下げてきました。結果、iOS専門外の開発者もPRを投げてくれる状況になりました。\r\n\r\nタイミーでの事例を踏まえ、職能横断型組織へのシフトと、それに追従したiOSプロジェクトの変遷をお話しします。",
            "accepted": false,
            "speaker": {
                "name": "Takeshi Akutsu",
                "kana": "アクツタケシ",
                "twitter": "sky_83325",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/55ef07d3-6d76-4df6-930f-df5e7bdab62d.jpg"
            },
            "created": "2022-06-07T00:43:37+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8d51f7dc-91d6-42d3-9715-33073ed381da",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8d51f7dc-91d6-42d3-9715-33073ed381da",
            "title": "機能横断型チームの実現へ向け、iOS開発への参加コストを減らす",
            "abstract": "タイミーでは、全ての職能を1チームにまとめた職能横断型チームとしてプロダクト開発に取り組んでいます。\r\n職能横断型チームに属する開発者は1つの専門領域に特化しながらも、他の領域も広く理解していくことが重要だとされています。\r\nしかし、過去に職能別にチームを分けていた名残が強くあり、依然としてiOSのタスクはiOSエンジニアしか担当できない状況が続いていました。\r\nそれを打開するために、iOSのプロジェクト構成を見直しました。SwiftPMをプロジェクトの中心に据えることで環境構築のコストを限りなくゼロにしたり、他の領域でも使われつつある宣言型UIであるSwiftUIを導入することで、iOS開発へのハードルを下げてきました。結果、iOS専門外の開発者もPRを投げてくれる状況になりました。\r\n\r\nタイミーでの事例を踏まえ、職能横断型組織へのシフトと、それに追従したiOSプロジェクトの変遷をお話しします。",
            "accepted": false,
            "speaker": {
                "name": "Takeshi Akutsu",
                "kana": "アクツタケシ",
                "twitter": "sky_83325",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/55ef07d3-6d76-4df6-930f-df5e7bdab62d.jpg"
            },
            "created": "2022-06-07T00:43:47+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "771a2019-0472-4aa3-8d26-b094abe53b95",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/771a2019-0472-4aa3-8d26-b094abe53b95",
            "title": "グローバル環境を可能な限り汚染しないXcodeの開発環境構築",
            "abstract": "iOS開発では便利な周辺ツールが充実してきて、以前はCococaPods、Carthageくらいでしたが最近はSwiftLint、XcodeGen、SwiftGenなどを採用するケースが増えてきました。\r\nこれらはHomebrewやRubyのBundlerでインストールすることが多いと思いますが、チーム開発になるとツールのバージョンを合わせたり、Apple SiliconとIntelの両環境に対応する必要があり、環境構築自体が複雑化してきました。\r\n\r\nそこで、これらの環境構築にまつわる様々な問題点を解決するために、環境依存に振り回されることなく確実に環境構築を行う手法をご紹介します！\r\n- 脱！環境構築の手順書\r\n- 脱！Homebrew\r\n- 脱！Ruby\r\n\r\n参考: https:\/\/zenn.dev\/yusuga\/articles\/dc0597ea7c0b97e397af をさらに発展させる形",
            "accepted": false,
            "speaker": {
                "name": "yusuga",
                "kana": "スガワラ",
                "twitter": "yusuga_",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/d040ee3f-ff0d-40e2-8242-b748c0125930.png"
            },
            "created": "2022-06-07T00:55:42+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f413d8db-19b1-4c87-8036-0a59d8d95f7e",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f413d8db-19b1-4c87-8036-0a59d8d95f7e",
            "title": "コードを書かずにアプリのクオリティーを上げる手法",
            "abstract": "UITest書いてますか？\r\n書いた方がいいとは分かってはいますが、\r\n- SwiftコードでUIテストの実装は大変だよね…\r\n- メンテコストもかかるよね…\r\n- 開発スピードが落ちるよね…\r\n\r\nなどなど…様々な理由でなかなか導入に踏み込めないプロジェクトが多いと思います。\r\n\r\nそこで、GUI操作のみでUITestを構築できるMagicPodとAutifyの実例を交えながら、ノンコードで実装するE2Eテストをご紹介します！\r\n- E2Eテストは何をテストするべきなのか\r\n- メンテナンス性が高いUIテストとは\r\n- テストは誰が書くべきか\r\n- MagicPodとAutifyの違い\r\n- CIの記述方法",
            "accepted": false,
            "speaker": {
                "name": "yusuga",
                "kana": "スガワラ",
                "twitter": "yusuga_",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/d040ee3f-ff0d-40e2-8242-b748c0125930.png"
            },
            "created": "2022-06-07T00:59:30+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "837d2790-78e5-4798-ad20-2f93dcc75c38",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/837d2790-78e5-4798-ad20-2f93dcc75c38",
            "title": "実録！オーバーエンジニアリング10選",
            "abstract": "巷では正しい設計、正しい実装、正しいアーキテクチャなど……強迫観念に近い「正しさ」を求めるがあまり、プロジェクトの後半になってなぜ私たちは1つの機能を作るのにこんなにもコードを書かなければいけないんだ…… このコンポーネントは本当に必要なのかと疑問に思いながらも、みんな現実から目を背け、迫りくるスケジュールに怯えながら無心にコードを書き続けていることも多いでしょう……\r\n\r\nそこで私が数々のプロジェクトで遭遇した、ほんとにあったオーバーエンジニアリングをご紹介しましょう……\r\n\r\n1. そのDIって必要！？\r\n2. 無駄なprotocol\r\n3. バケツリレーするだけのコンポーネントたち\r\n4. なんでもリアクティブ\r\n5. 過剰なテスト\r\n6. 無駄なデータベース\r\n7. 始まってもいないサービスのスケーリング\r\n8. 誰も使わない機能\r\n9. 少人数のユーザに対するABテスト\r\n10. MVCで十分じゃね",
            "accepted": false,
            "speaker": {
                "name": "yusuga",
                "kana": "スガワラ",
                "twitter": "yusuga_",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/d040ee3f-ff0d-40e2-8242-b748c0125930.png"
            },
            "created": "2022-06-07T01:03:40+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "ed09de59-e593-495e-b289-7dd7458dff49",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/ed09de59-e593-495e-b289-7dd7458dff49",
            "title": "実録！オーバーエンジニアリング5選",
            "abstract": "巷では正しい設計、正しい実装、正しいアーキテクチャなど……強迫観念に近い「正しさ」を求めるがあまり、プロジェクトの後半になってなぜ私たちは1つの機能を作るのにこんなにもコードを書かなければいけないんだ…… このコンポーネントは本当に必要なのかと疑問に思いながらも、みんな現実から目を背け、迫りくるスケジュールに怯えながら無心にコードを書き続けていることも多いでしょう……\r\n\r\nそこで私が数々のプロジェクトで遭遇した、ほんとにあったオーバーエンジニアリングをご紹介しましょう……\r\n1. そのDIって必要！？\r\n2. 無駄なprotocol定義\r\n3. バケツリレーするだけのコンポーネントたち\r\n4. なんでもリアクティブ\r\n5. MVCで十分じゃね\r\n\r\n- なぜ人はオーバーエンジニアリングをしてしまうのか、その傾向と対策",
            "accepted": false,
            "speaker": {
                "name": "yusuga",
                "kana": "スガワラ",
                "twitter": "yusuga_",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/d040ee3f-ff0d-40e2-8242-b748c0125930.png"
            },
            "created": "2022-06-07T01:04:56+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "13e6bb2b-dae2-471d-809d-3be83ea15561",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/13e6bb2b-dae2-471d-809d-3be83ea15561",
            "title": "そのDIは、本当に必要ですか？",
            "abstract": "ちまたではDI（依存性の注入）が流行っているようですが、そもそもあなたのアプリで本当にDIは必要なんですかと再度問いたい！たぶん不要だよ！！\r\nDIの種類、導入するべきかの判断、DIを使わない場合の代替方法をご紹介します。",
            "accepted": false,
            "speaker": {
                "name": "yusuga",
                "kana": "スガワラ",
                "twitter": "yusuga_",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/d040ee3f-ff0d-40e2-8242-b748c0125930.png"
            },
            "created": "2022-06-07T01:07:16+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "54215773-60e6-4a13-ad89-811976bf5d18",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/54215773-60e6-4a13-ad89-811976bf5d18",
            "title": "iOSでOpenAPIを採用した時のコードの生成と管理方法のベストプラクティス",
            "abstract": "iOSプロジェクトでOpenAPIを採用した時に、Swiftコードの生成とその管理方法をどうすればいいのかは意外と悩みます。\r\nそこで、Dockerを使った疎結合でシンプルなOpenAPIのコード生成と生成したSwiftコードの管理方法のベストプラクティスをご紹介します！\r\n- Dockerを使ったOpenAPIからのSwiftコードの生成方法\r\n- Swiftコードはどうやって管理するか\r\n- どうやってメインアプリで利用するか",
            "accepted": false,
            "speaker": {
                "name": "yusuga",
                "kana": "スガワラ",
                "twitter": "yusuga_",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/d040ee3f-ff0d-40e2-8242-b748c0125930.png"
            },
            "created": "2022-06-07T01:09:12+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "19496290-7e3b-4032-8916-54d4200c1075",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/19496290-7e3b-4032-8916-54d4200c1075",
            "title": "iPadだけでアプリリリースまで辿り着いた話",
            "abstract": "WWDC2021で発表されたSwift Playground 4はiPadだけでアプリの開発からリリースまで行える機能が付き、とても話題になりました。\r\n皆さん普段はMacBookで開発していて、私自身もその1人ですがあえてiPadだけで開発からリリースまでを行いました。\r\nその苦難の道のりをお伝えさせて頂きます。",
            "accepted": false,
            "speaker": {
                "name": "田村亮介",
                "kana": "タムラリョウスケ",
                "twitter": "ryosuke_tamura",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/4c64d1b2-d5dd-4635-af41-84b0b832260e.jpg"
            },
            "created": "2022-06-07T01:46:04+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "dfd7d560-eabb-487c-a2c6-c0dfb4bda3f5",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/dfd7d560-eabb-487c-a2c6-c0dfb4bda3f5",
            "title": "まだ開発環境構築で消耗してるの？〜git-hooksで送る",
            "abstract": "プロジェクトに新メンバーがjoinする際、初めに立ち塞がる壁が開発環境構築です。\r\nまた、いざ環境が出来上がったとしてもその後開発ツール(CocoaPods、SwiftLint、etc...)がアップデートされていることに気づかないとバージョン差異に起因する事故(おま環、コンフリクト、etc...)も起こりがちです。\r\n\r\nそこで、自分の関与しているプロジェクトではgit-hooksによる開発環境の自動更新を実施しています。\r\n\r\n本LTでは、意外と忘れられがちなgit-hooksとiOS開発における活用方法について紹介します。\r\n\r\nサステナブルな開発環境、欲しくないですか？",
            "accepted": false,
            "speaker": {
                "name": "417.72KI",
                "kana": "シイナナツキ",
                "twitter": "417_72ki",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/0668ee6a-114e-4dfa-a4a4-c2118b208c31.jpg"
            },
            "created": "2022-06-07T01:48:17+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "a4625d8c-c0c8-464e-ad79-eab52a6490f2",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/a4625d8c-c0c8-464e-ad79-eab52a6490f2",
            "title": "目からビームでヴィランをやっつける 〜ARKitの知られざる並走機能〜",
            "abstract": "ARKitが持つ多くの機能の中でも、みなさんはフロントカメラとバックカメラを同時に使用することによるフェイストラッキングとワールドトラッキングの並走機能をご存知でしょうか？実はこの機能、Human Computer Interaction（HCI）の研究者たちの注目を集めたアツい機能なんです。この機能により、視線を向けるだけで目の前のコーヒーメーカーがコーヒーを淹れてくれるような、これまでにスマートフォン1台ではできなかった体験を実現することが可能となりました。\r\n本トークでは、この並走機能に新たな可能性を感じた私が実際に作ったいくつかのサンプルアプリの紹介やそこで得られた知見の共有をします。\r\n\r\n・視線を向けるだけで電気を点けたり、コーヒーを淹れられるアプリ\r\n・目からビームを発してヴィランをやっつけるアプリ\r\n・ユーザが暗い表情をしていると、辺りに花が咲きほこるアプリ",
            "accepted": true,
            "speaker": {
                "name": "nagain",
                "kana": "ナガイン",
                "twitter": "na9ain",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ddd6cca2-e3b1-493a-a22f-9c33e9bd2e27.jpg"
            },
            "created": "2022-06-07T06:40:36+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-12T13:55:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "04ae517b-99bd-428a-8ef0-19c55755016b",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/04ae517b-99bd-428a-8ef0-19c55755016b",
            "title": "厳密なインプレッション測定のための実装手法",
            "abstract": "アプリの効果測定にはインプレッションの集計は有効な手段の一つです。しかし、より正確な測定結果を得るために単純に「1ptでも表示したらインプレッション発生」という訳でもなく、ユーザーに視認されることが可能と言えるインプレッションといった厳密な視認可能インプレッションの定義が必要かもしれません。\r\n本トークではZOZOTOWNのホーム画面で対応できた独自の視認可能インプレッションの話を紹介します。\r\n「面積のx%以上がy秒間表示し続けるとインプレッションの成立とする」、「インプレッション再記録の条件は◯にする」などインプレッションの設計から、CompositionalLayoutで対応されたホーム画面でそれを実現した際の裏話を大公開します！\r\n・視認可能インプレッションの設計\r\n・CompositionalLayoutでのreusableViewとcellの面積計算の問題\r\n・パフォーマンス面の考慮\r\n",
            "accepted": false,
            "speaker": {
                "name": "chichilam",
                "kana": "チチラム",
                "twitter": "chichilam86",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/858ce1eb-9d41-4688-9b44-c8d74563f648.jpg"
            },
            "created": "2022-06-07T06:40:40+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "a11fb220-e833-4194-b8cf-9887194d1492",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/a11fb220-e833-4194-b8cf-9887194d1492",
            "title": "SceneKitによる新しい数学の学習方法",
            "abstract": "紙とペンだけが数学の道具ではありません。SceneKitで現実世界を再現して求めた答えを検証してみませんか？SceneKitによる数学の学習方法を具体例とともに紹介します。",
            "accepted": false,
            "speaker": {
                "name": "大塚周",
                "kana": "オオツカアマネ",
                "twitter": "Hyperbolic____",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3f589821-8e52-406b-ab9c-96dfaa162f52.jpg"
            },
            "created": "2022-06-07T08:34:15+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "6cd356d6-692f-4d17-9a99-8c10ad30981f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/6cd356d6-692f-4d17-9a99-8c10ad30981f",
            "title": "このグラフ、アプリで描いてよ。",
            "abstract": "ある日、あなたはプロダクトマネージャーから「API から統計情報を提供するから、アプリでグラフを描いてくれない？」と言われたら、どうしますか？\r\n\r\n新規アプリであれば、 WWDC 2022 で紹介される Swift Charts を Swift UI を用いて、実装すれば、 Apple から提供されるフレームワークですし、サポートされているすべての OS で適切に描画できそうです。でも、 Swift UI を導入できていない既存アプリだったら、どうしますか？\r\n\r\n本トークでは WWDC 2022 で紹介される Swift Charts でグラフを描いた場合と Swift Charts が無かった場合のベストプラクティスを探求し、比較をします。\r\n※ Swift Charts が開発者に提供されなかった場合は WWDC 2022 での発表内容を元に比較を行います。",
            "accepted": false,
            "speaker": {
                "name": "中川 泰夫",
                "kana": "ナカガワ ヤスオ",
                "twitter": "ynakagawa33",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/85e9e8d5-6e52-4cbe-8286-7a6bdf560549.png"
            },
            "created": "2022-06-07T08:35:27+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f6a07c97-e8ec-45f4-8398-c880690d12ed",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f6a07c97-e8ec-45f4-8398-c880690d12ed",
            "title": "SceneKitによる新しい数学の学習方法",
            "abstract": "売上を最大化させるためのレジの台数といった合理的な意思決定の方法を考える学問である「オペレーションズ・リサーチ」において、数式で求めた結果が合っているのかを確かめるのは難しいものです。しかし、SceneKitで現実世界を再現することで結果の”検証”を行うことができます。SceneKitによる新しい数学の学習方法を複数の具体例とともに紹介します。",
            "accepted": false,
            "speaker": {
                "name": "大塚周",
                "kana": "オオツカアマネ",
                "twitter": "Hyperbolic____",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3f589821-8e52-406b-ab9c-96dfaa162f52.jpg"
            },
            "created": "2022-06-07T08:37:08+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "d30738eb-0b72-44cf-aca1-093e67c697fc",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/d30738eb-0b72-44cf-aca1-093e67c697fc",
            "title": "まだユーザに待たせているか",
            "abstract": "さまざまな場面でローディングインジケータなどを使い、ユーザを待たせていると思います。\r\nしかし、それが果たして必須な要件かというとそうではなく、実装時のコストの兼ね合いで妥協している場合が多いと思います。\r\n\r\n本トークでは、ユーザを待たせずに済むよりよい手法をご紹介します。",
            "accepted": false,
            "speaker": {
                "name": "Li Jierong",
                "kana": "リ ケツエイ",
                "twitter": "IhsanLee",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ee0dde6c-643b-4daf-90d3-0fe765f80803.jpg"
            },
            "created": "2022-06-07T09:38:37+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "0b39aace-a386-493a-9b0a-f0ff536cd7f0",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/0b39aace-a386-493a-9b0a-f0ff536cd7f0",
            "title": "まだユーザに待たせているか",
            "abstract": "さまざまな場面でローディングインジケータなどを使い、ユーザを待たせていると思います。\r\nしかし、それが果たして必須な要件かというとそうではなく、実装時のコストの兼ね合いで妥協している場合が多いと思います。\r\n\r\n本トークでは、ユーザを待たせずに済むよりよい手法とそれを実現する実装方法の具体例をご紹介します。",
            "accepted": false,
            "speaker": {
                "name": "Li Jierong",
                "kana": "リ ケツエイ",
                "twitter": "IhsanLee",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ee0dde6c-643b-4daf-90d3-0fe765f80803.jpg"
            },
            "created": "2022-06-07T09:40:46+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "968b2c27-e6cb-4824-8132-a49e80f553e4",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/968b2c27-e6cb-4824-8132-a49e80f553e4",
            "title": "どこまでデザイナーに任せるか（Figma編）",
            "abstract": "デザインをいただいて、実装しようとすると以下のように戸惑うことはありませんか。\r\n- 部品のまとめ方\r\n  - 新規部品\r\n  - 既存部品のバリアント\r\n- サイズの決め方\r\n  - 固定サイズ\r\n  - 余白を決める上で決める\r\n- 1行に表示しきれない文言\r\n  - 改行\r\n  - 3点リーダー\r\n  - 1行に表示しきれるように文字サイズを動的に調整\r\n- 複数部品の揃え方\r\n- スクロール領域\r\n- アニメーション\r\n\r\nデザインツールの機能不足により妥協したデザイン表現になり、直接デザイナさんにどういうデザインにしたいかを聞いて実装する場合もあると思います。しかし、デザインツールの進化により表現できるデザインが年々増えてきており、困るケースも少なくなってきました。\r\n\r\n本トークでは、FigmaにおいてiOSエンジニア目線で、表現できるケースと表現できないケースをご紹介します。",
            "accepted": false,
            "speaker": {
                "name": "Li Jierong",
                "kana": "リ ケツエイ",
                "twitter": "IhsanLee",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ee0dde6c-643b-4daf-90d3-0fe765f80803.jpg"
            },
            "created": "2022-06-07T09:46:35+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "5334329d-21ae-488d-89ce-5445725b5b8e",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/5334329d-21ae-488d-89ce-5445725b5b8e",
            "title": "SwiftUIでUIデザインしよう",
            "abstract": "UIデザインツールというとFigmaとSketch二択になってきましたが、アイコンデザインなどビジュアルデザインに近い部分を除いたら、意外とSwiftUIでデザインできちゃいます。SwiftUIだと静的デザインをそのまま実装に組み込めるメリットがあり、開発効率向上にもつながります。\r\n\r\n本トークでは、Figmaと比較してSwiftUIがどれぐらい便利かつ直感にレイアウト組めるかをご紹介します。\r\nSwiftUIでデザインしてみませんか？",
            "accepted": false,
            "speaker": {
                "name": "Li Jierong",
                "kana": "リ ケツエイ",
                "twitter": "IhsanLee",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ee0dde6c-643b-4daf-90d3-0fe765f80803.jpg"
            },
            "created": "2022-06-07T09:50:24+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f9ec6cc3-bc06-4749-a6b4-a472b9234684",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f9ec6cc3-bc06-4749-a6b4-a472b9234684",
            "title": "PiPを応用した配信コメントバー機能の開発秘話と技術の詳解",
            "abstract": "WWDC21 が開催されていた昨年の6月、AVKit に追加されたひとつの機能に社内がざわつきました。\r\nPiP（ピクチャ・イン・ピクチャ）の機能を応用して、Android の画面オーバーレイのようにアプリ外に自由なコンテンツを描画できる期待感を経験のあるエンジニアは感じていましたが、既存のアプリに機能を組み込むまでには R&D 的な開発やパフォーマンスとの戦いがありました。\r\n\r\nこのトークでは、ゲーム配信アプリミラティブに実装され多くのユーザーに利用されている、視聴者からのコメントや各種配信情報をアプリ外で表示する「配信コメントバー」機能の開発の裏側と技術の詳細、また更なる応用についてご紹介します。\r\n\r\n・「配信コメントバー」機能の概要\r\n・実装の解説\r\n・R&D 開発の勘所\r\n・パフォーマンスの解決\r\n・PiP と AVAudioSession との関係\r\n・PiP のカスタマイズ性\r\n・更なる応用",
            "accepted": true,
            "speaker": {
                "name": "千吉良 成紀",
                "kana": "チギラ ナルキ",
                "twitter": "_naru_jpn",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/fe245250-08ca-4ab7-833f-945c1ee979e5.jpg"
            },
            "created": "2022-06-07T10:56:06+09:00",
            "timetable": {
                "track": "Track B",
                "starts_at": "2022-09-10T17:15:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "b387ecaa-cc87-4ee1-b255-5be6666090da",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/b387ecaa-cc87-4ee1-b255-5be6666090da",
            "title": "あなたは5分後にSwift Concurrencyを使いたくなります",
            "abstract": "Swift ConcurrencyはWWDC2021で発表されてSwift5.5で追加された新しい技術であり、まだ名前しか聞いたことないよという人もいるかもしれません。Swift Concurrencyは非同期処理や並列処理をシンプルに書くことができる機能です。\r\n\r\n本LTではSwift Concurrencyとは一体何か、どんな利点があるか紹介します。この話を聞くと、もうクロージャを使った非同期処理なんて書きたくない！って思えるかも笑",
            "accepted": false,
            "speaker": {
                "name": "くどかい",
                "kana": "クドカイ",
                "twitter": "kudokai00",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ec789251-b6ed-41be-a873-4ebe253af130.jpg"
            },
            "created": "2022-06-07T11:09:46+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "4bb84143-446f-4677-a59b-a8316e44a3f7",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/4bb84143-446f-4677-a59b-a8316e44a3f7",
            "title": "新卒が感じた学生エンジニアと社会人エンジニアの違い",
            "abstract": "本LTを聞いてくださる方の中には学生や社会人が入り混ざっているのではないでしょうか？\r\n特に学生の方！こんな悩みを持ったことはないですか？\r\n　・ 学生と社会人ってどう違うんだ？\r\n　・エンジニアになったら、どんなことを求められるの？\r\n\r\n新卒エンジニアとして数ヶ月会社の中で働いてみて感じた、学生エンジニアと社会人エンジニアの違いについてご紹介します。\r\nこれから就活する人や既に就活が終わった人も、本LTを聞いて残りの学生生活で費やすことができるプロダクト開発に役立ていただければ幸いです。",
            "accepted": false,
            "speaker": {
                "name": "くどかい",
                "kana": "クドカイ",
                "twitter": "kudokai00",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ec789251-b6ed-41be-a873-4ebe253af130.jpg"
            },
            "created": "2022-06-07T11:11:37+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "2f4c9c84-5be1-42cd-90f6-dd7d0772fed2",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/2f4c9c84-5be1-42cd-90f6-dd7d0772fed2",
            "title": "ゆめみのiOS研修を終えてわかった初学者がハマりやすい罠",
            "abstract": "株式会社ゆめみでは新卒iOSエンジニア向けに研修課題をGitHubで公開しています。\r\n弊社の新卒課題は一見すると簡単ですぐに終わってしまうように見えますが、ところどころにハマりやすい罠があります。\r\n　・ライフサイクル\r\n　・Delegate\r\n　・コールバック\r\n　・スレッドブロック\r\n　・テスト\r\nなどなど、ハマりやすい要素がたくさんあります。\r\n\r\nゆめみの新卒として研修を経験した私だからこそ感じた初学者がハマりやすい罠をご紹介します。\r\n\r\n参考：https:\/\/github.com\/yumemi-inc\/ios-training",
            "accepted": false,
            "speaker": {
                "name": "くどかい",
                "kana": "クドカイ",
                "twitter": "kudokai00",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ec789251-b6ed-41be-a873-4ebe253af130.jpg"
            },
            "created": "2022-06-07T11:13:13+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f8688f91-5c94-438c-a183-d99a6ffe0ca2",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f8688f91-5c94-438c-a183-d99a6ffe0ca2",
            "title": "あなたは20分後にSwift Concurrencyを使いたくなります",
            "abstract": "Swift ConcurrencyはWWDC2021で発表されてSwift5.5で追加された新しい技術であり、まだ名前しか聞いたことないよという人もいるかもしれません。Swift Concurrencyは非同期処理や並列処理をシンプルに書くことができる機能です。\r\n\r\n本トークではではSwift Concurrencyとは一体何か、どんな利点があるかをSwiftUIを使った実装例を通して紹介します。\r\nこの話を聞くと、もうクロージャを使った非同期処理なんて書きたくない！って思えるかも笑",
            "accepted": false,
            "speaker": {
                "name": "くどかい",
                "kana": "クドカイ",
                "twitter": "kudokai00",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ec789251-b6ed-41be-a873-4ebe253af130.jpg"
            },
            "created": "2022-06-07T11:16:24+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "4bb4435b-2898-4d89-a02b-f6dea3b6487f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/4bb4435b-2898-4d89-a02b-f6dea3b6487f",
            "title": "PiPを応用した配信コメントバー機能の開発秘話と技術の詳解",
            "abstract": "WWDC21 が開催されていた昨年の6月、AVKit に追加されたひとつの機能に社内がざわつきました。\r\nPiP（ピクチャ・イン・ピクチャ）の機能を応用して、Android の画面オーバーレイのようにアプリ外に自由なコンテンツを描画できる期待感を経験のあるエンジニアは感じていましたが、既存のアプリに機能を組み込むまでには R&D 的な開発やパフォーマンスとの戦いがありました。\r\n\r\nこのトークでは、ゲーム配信アプリミラティブに実装され多くのユーザーに利用されている、視聴者からのコメントや各種配信情報をアプリ外で表示する「配信コメントバー」機能の開発の裏側と技術の詳細についてご紹介します。\r\n\r\n・「配信コメントバー」機能の概要\r\n・実装の解説\r\n・R&D 開発とパフォーマンスの解決\r\n・PiP と AVAudioSession との関係\r\n・PiP のカスタマイズ性",
            "accepted": false,
            "speaker": {
                "name": "千吉良 成紀",
                "kana": "チギラ ナルキ",
                "twitter": "_naru_jpn",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/fe245250-08ca-4ab7-833f-945c1ee979e5.jpg"
            },
            "created": "2022-06-07T11:24:45+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "6ce89b3f-8f08-47ba-a78d-deaee335c215",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/6ce89b3f-8f08-47ba-a78d-deaee335c215",
            "title": "Swift 5.7で変わる正規表現を試してみよう",
            "abstract": "現在swift-evolutionでは大量のproposalと共に長年Swift上で不便だった正規表現関連の実装を刷新する流れが続いています。実際にWWDC 22でもSwift 5.7のリリースとともにRegexBuilderと正規表現リテラルが導入されることが発表されています。\r\n\r\nこのトークではNSRegularExpressionやNSStringにおける課題がどのように解決されているかをswift-evolutionの各proposalをもとに振り返り、iOSやサーバーサイドでのアプリケーションや文字列処理が生きてくる書き捨てのスクリプト（例えばログ解析など）でどれぐらい実用的に利用できるのかをベンチマーク結果を添えて検証していきます。\r\n\r\n特に普段Rubyなどで書くことが多い書き捨てスクリプトを置き換えるポテンシャルがあるのかどうかに個人的に興味があります！！いかに！？",
            "accepted": true,
            "speaker": {
                "name": "ainame",
                "kana": "アイナメ",
                "twitter": "ainame",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/1613731a-949d-433a-a76c-3673fbfeca6c.jpg"
            },
            "created": "2022-06-07T12:03:30+09:00",
            "timetable": {
                "track": "Track B",
                "starts_at": "2022-09-11T13:00:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "998f8732-5663-446a-8e91-03e7167a9c75",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/998f8732-5663-446a-8e91-03e7167a9c75",
            "title": "独自の共通認証基盤を用いているサービスでアカウント削除機能を提供したときの道程",
            "abstract": "Review Guideline 5.1.1(v) - Account deletion requirement がついに6月30日に施行されました。\r\nこれからアカウント作成が出来るアプリは、アカウント削除機能を提供する必要があります。\r\nアカウント削除機能はあまり優先して開発されない(しづらい)機能の一部であり、マネーフォワードクラウド確定申告でも提供出来ていなかった機能でした。\r\n\r\nこのLTでは、急遽宣言されたAccount deletion requirementに対して、共通ID基盤の提供・数多くのサービス展開による弊害、1ユーザーが複数のグループに属せるというサービスとしての難しさ、確定申告シーズンにぶち当たった必須化スケジュールを乗り越えて、マネーフォワードクラウド確定申告がアカウント削除機能を提供したときの苦悩の道程を紹介します。",
            "accepted": true,
            "speaker": {
                "name": "ShoMasegi",
                "kana": "ショウマセギ",
                "twitter": "boc_sho",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/02742f03-db89-4f56-b367-7019f1f7d917.jpg"
            },
            "created": "2022-06-07T12:07:58+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-11T16:05:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "e5c49667-765a-481b-a5ae-8acdb691f44f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/e5c49667-765a-481b-a5ae-8acdb691f44f",
            "title": "iOSエンジニアからPdMへの転生物語",
            "abstract": "iOSエンジニアだった私がひょんなことからプロダクトマネージャー(PdM)に転生してから4年がたちました。\r\n花形と言われるPdMですが、エンジニア出身のPdMは実際どの様なポジションなのでしょうか？\r\nPdMになった経緯、どういう人が向いているのか、何を勉強すればいいのか、身につくスキル、業務内容やエンジニアと比べてぶっちゃけ待遇はどうなのかなどについてお話します。",
            "accepted": false,
            "speaker": {
                "name": "原　一史",
                "kana": "ハラ カズシ",
                "twitter": "haranicle",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/8db3c4f3-046a-45c1-84cb-d4f6457a87c5.jpg"
            },
            "created": "2022-06-07T12:15:10+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "73f98a40-f430-4e82-a1c8-45ffd03725e6",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/73f98a40-f430-4e82-a1c8-45ffd03725e6",
            "title": "App Storeの機能を使って自分のアプリを魅力的に見せよう！",
            "abstract": "みなさん、自信を持ってユーザーに喜んでもらえそうな機能をリリースしてもなかなかダウンロード数が増えない、新機能をもっと訴求して以前のユーザーに戻ってもらいたい...なんて悩みはありませんか？\r\n\r\n昨年、App Storeの新機能として「App内イベント」「プロダクトページのカスタマイズ」「プロダクトページのA\/Bテスト」がリリースされました。これらの機能を活用することで自分のアプリをさらにアピールすることができます。\r\nこのLTでは実際に各機能を使ってみてどんな効果があったかをお話ししたいと思います。\r\n\r\nこのLTを聴いて素敵なプロダクトページを作りましょう！",
            "accepted": false,
            "speaker": {
                "name": "Matsui Mai",
                "kana": "マツイマイ",
                "twitter": "Ni5_21maimai",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/fdbfc54c-1313-4f68-a593-7df1368b2e88.jpg"
            },
            "created": "2022-06-07T12:43:35+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "12f06984-73b3-4cd8-ba7b-a2f82f79e5b9",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/12f06984-73b3-4cd8-ba7b-a2f82f79e5b9",
            "title": "グラフィックソフトで作成したようなフチ文字をアプリ内で実現する方法",
            "abstract": "フチ文字とは、文字の輪郭を線で縁取る文字装飾の手法です。\r\n新聞の見出し、スーパーのチラシ、そして動画のテロップなどでよく用いられています。\r\nみなさんも一度は目にしたことがあるかと思います。\r\n\r\nそんなフチ文字、さらにグラフィックソフトで作成したようなフチ文字をアプリ内で使いたい。\r\nそうデザイナーから相談されたとき、どんな方法が思いつきますか。\r\nAttributedStringを用いて文字の輪郭に線をつければ解決、そう思いませんか。\r\nしかし、この方法にはある問題があり…。\r\n\r\n本トークでは、私が試行錯誤しながら、より質が高く美しいフチ文字を模索した内容を事例を交えながらお話します。\r\n\r\n以下の内容を予定しています。\r\n・フチ文字とはなにか\r\n・発表者の思う美しいフチ文字、美しくないフチ文字の定義\r\n・UIKitを用いたフチ文字の実現方法\r\n・SwiftUIを用いたフチ文字の実現方法",
            "accepted": false,
            "speaker": {
                "name": "横田 孝次郎",
                "kana": "ヨコタ コウジロウ",
                "twitter": "macneko_ayu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/9f261107-25c8-4f4f-8c61-91e8cf07c6dc.jpg"
            },
            "created": "2022-06-07T13:43:29+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "6cd45614-01d7-45e3-86fb-c1685b0f436d",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/6cd45614-01d7-45e3-86fb-c1685b0f436d",
            "title": "美しいフチ文字を作りたい！",
            "abstract": "フチ文字とは、文字の輪郭を線で縁取る文字装飾の手法です。\r\n新聞の見出し、スーパーのチラシ、そして動画のテロップなどでよく用いられています。\r\nみなさんも一度は目にしたことがあるかと思います。\r\n\r\nそんなフチ文字、さらにグラフィックソフトで作成したようなフチ文字をアプリ内で使いたい。\r\nそうデザイナーから相談されたとき、どんな方法が思いつきますか。\r\nAttributedStringを用いて文字の輪郭に線をつければ解決、そう思いませんか。\r\nしかし、それでは美しくない！\r\n\r\n本LTでは、SwiftUIで美しいフチ文字を模索した内容を事例を交えながらお話します。\r\n\r\n以下の内容を予定しています。\r\n・フチ文字とはなにか\r\n・SwiftUIを用いたフチ文字の実現方法",
            "accepted": false,
            "speaker": {
                "name": "横田 孝次郎",
                "kana": "ヨコタ コウジロウ",
                "twitter": "macneko_ayu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/9f261107-25c8-4f4f-8c61-91e8cf07c6dc.jpg"
            },
            "created": "2022-06-07T13:47:16+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "150eb274-6bf3-4895-a4e3-bfe337839343",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/150eb274-6bf3-4895-a4e3-bfe337839343",
            "title": "KMMを用いたテキストリソース共通化の提案",
            "abstract": "本トークでは、iOS・Android両OSで展開しているアプリ向けに、KMMを用いたテキストリリース共通化を提案します\r\n\r\nまずはじめに、長年運用しているアプリだからこその課題を交えながらモチベーションについてご説明します。その後、比較検討した手法と想定している移行手順についてご説明します。そして最後に、+aの要素や今後の展望についてご説明します。\r\n\r\n課題の抜粋\r\n- OS間で新規追加する粒度が異なる\r\n- OS間で参照する既存リソースにズレがある\r\n- 片方だけ修正されるテキスト\r\n\r\n+aの例\r\n- ボイスアンドトーンの統一\r\n- テキストリソースのルール設定\r\n- textlintによる校閲\r\n- a11y\r\n\r\nを予定しております。",
            "accepted": false,
            "speaker": {
                "name": "ぼぶ",
                "kana": "ボブ",
                "twitter": "BOBG1018Vi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/04c31552-0292-41f9-902c-8c0fb919b38b.jpg"
            },
            "created": "2022-06-07T14:15:08+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "466c7cea-375f-427e-9fe1-73e651693615",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/466c7cea-375f-427e-9fe1-73e651693615",
            "title": "既存サブスクリプション商品にアップグレード・ダウングレード商品を追加しよう",
            "abstract": "本トークでは、既存サブスクリプション商品にアップグレード・ダウングレードを追加する方法についてご説明します。\r\n\r\n具体的には、\r\n\r\nアップグレード・ダウングレード・クロスグレードについて\r\n- サブスクリプショングループとは\r\n- レベルの設定\r\n- レシートはどうなるのか\r\n\r\n上記を公式ドキュメントを織り交ぜながらご説明します\r\n\r\n運用しているサブスクリプションにアップグレード・ダウングレードを追加するには\r\n- 新規商品を申請するために注意すべき箇所は何か\r\n- SandBoxで検証する際のtips\r\n- SandBoxで確認できない範囲の検証結果\r\n\r\n導入しづらい運用ケースとは\r\n- 複数のサブスクリプショングループを運用している場合\r\n- クレジットや他プラットフォームでの決済手段がある場合\r\n\r\nを予定しております。",
            "accepted": true,
            "speaker": {
                "name": "ぼぶ",
                "kana": "ボブ",
                "twitter": "BOBG1018Vi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/04c31552-0292-41f9-902c-8c0fb919b38b.jpg"
            },
            "created": "2022-06-07T14:21:34+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-11T13:00:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8f120179-7a65-429c-a471-ed11344f08b2",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8f120179-7a65-429c-a471-ed11344f08b2",
            "title": "UIKit ベースの大規模なプロジェクトへの SwiftUI 導入",
            "abstract": "タクシー配車アプリ「GO」では、UIKit ベースで実装しており、ViewController の数は300近くあります。\r\n2019年の WWDC で発表された SwiftUI の機能を徐々に活用していき、2021年に iOS 12 のサポートを終了したタイミングでプロダクションに SwiftUI で作った画面を展開していきました。\r\n本トークでは、大規模なプロジェクトにおいて、どのように SwiftUI を導入し活用しているかをご紹介します。\r\n\r\n・SwiftUI の導入\r\n・UIKit ベースのプロジェクトでの SwiftUI 利用\r\n・Xcode Previews の活用\r\n・SwiftUI 利用したことで得られたメリット\r\n・ここが辛いよ SwiftUI\r\n・SwiftUI 利用のこれから",
            "accepted": true,
            "speaker": {
                "name": "久利龍義",
                "kana": "クリタツノリ",
                "twitter": "kuritatu18",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3eb82b7a-b242-4b77-99a3-5a555820478a.jpg"
            },
            "created": "2022-06-07T15:06:41+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-11T13:00:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "91c9a436-a974-43aa-afdf-31f263f77c31",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/91c9a436-a974-43aa-afdf-31f263f77c31",
            "title": "あなたの知らない AR の可能性を空間レベルで拡げる VPS の世界",
            "abstract": "SnapのCustom Landmarker、ARCoreのGeospatial API、NianticのLightship、そしてARKit 6のLocation Anchor、他にもありますが、これらはすべてVPSと呼ばれるものです。\r\n\r\nここで言うVPSは“Virtual Private Server”ではなく“Visual Positioning Service\/System”です。\r\n\r\n緯度経度をもとにするGPSとして馴染み深い“Global Positioning System”に対し、画像による空間情報をもとに自己位置推定する技術がVPSです。\r\n\r\n本セッションでは、今後のARに関する要素技術として重大な位置づけになると考えられる “VPS”そのものとその周辺技術、実際のユースケースや概況に加え、いずれかのVPSソリューションを用いた「実際に動作するデモ」を交えて解説します。\r\n",
            "accepted": true,
            "speaker": {
                "name": "HEAVEN chan \/ ikkou",
                "kana": "イッコウ",
                "twitter": "ikkou",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6a65f059-8be6-4a25-96fd-51841bbb8f28.jpg"
            },
            "created": "2022-06-07T15:11:39+09:00",
            "timetable": {
                "track": "Track E",
                "starts_at": "2022-09-11T11:05:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "6b5012f2-6252-44aa-858d-925898684da5",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/6b5012f2-6252-44aa-858d-925898684da5",
            "title": "iPhoneのセンサで”位置情報”を得るために",
            "abstract": "みなさんiPhoneのセンサで取得できる位置情報と聞いて何を思い浮かべますか？\r\nおそらくCore Location Frameworkを使った緯度経度情報を思い浮かべる方が多いのではないでしょうか。\r\nロボット開発の観点では自己位置推定と呼ばれるLiDAR,カメラ,加速度センサなどを組み合わせることによってロボットの位置を推定する技術が日々研究されています。\r\n本トークでは位置情報を得るという目的のためにiPhoneのセンサを使って検証した結果を\r\n- どのようなセンサを使う方法があるか\r\n- 取得できる位置情報の精度\r\n\r\nについて紹介します。",
            "accepted": true,
            "speaker": {
                "name": "Shinya Todaka",
                "kana": "シンヤ トダカ",
                "twitter": "shinya_todaka",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a7323b7b-b7f3-4fc3-bc44-cf6f94e87be9.jpg"
            },
            "created": "2022-06-07T15:32:08+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-10T16:40:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "b271a27f-bf58-4eec-94f5-2c881d072618",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/b271a27f-bf58-4eec-94f5-2c881d072618",
            "title": "ShazamKitの遊び方",
            "abstract": "WWDC2021で発表されたShazamKitは、膨大な音楽カタログをベースに何百万曲の音楽検索を行える音声認識フレームワークです。\r\n音楽に全く詳しくない私(ミスチル好き)ですが音声認識機能には興味があり、\r\nレンタルスペースを予約できる「SpaceMarket」のiOS\/Androidアプリへ遊びで勝手に組み込んでみたので\r\n・ShazamKitの機能紹介\r\n・両OSへの導入の仕方\r\n・使い道の検討\/実際に作ってみた機能\/社員の反応\r\nについてお伝えできればと思っています。",
            "accepted": true,
            "speaker": {
                "name": "Naoyuki Murata",
                "kana": "ムラタ",
                "twitter": "namu767676",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/0240d843-0e7a-4769-8127-9fc03cc82937.jpg"
            },
            "created": "2022-06-07T16:44:33+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-10T16:40:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "3ad0d3fc-84a6-4fa2-8dd1-c4e2284aff4f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/3ad0d3fc-84a6-4fa2-8dd1-c4e2284aff4f",
            "title": "Effective PencilKit \/ 新聞スクラップ体験の実現",
            "abstract": "WWDC 2019 で発表された PencilKit を利用することで、数行のコードで 標準メモアプリと同様の手描き体験をアプリに導入できます。\r\n\r\n発表に先立ち、日本経済新聞社の紙面ビューアーアプリでは、Apple Pencil を用いた紙面画像にメモやハイライトを書き込める機能をリリースしました。\r\n\r\nアプリの機能要件を満たすための独自拡張の実現には、様々な制約が立ちはだかりました。\r\nたとえば、キャンバスに画像を載せる、ズームやスクロールなどビューアーとしての操作は残しつつ書き込みを一時的に無効にするなど、一見すると単純そうですが一筋縄ではいきません。\r\n\r\n本セッションでは PencilKit の開発ノウハウを、ドキュメントと内部の動きから洞察した知見の両面から解説します。開発経験を踏まえ、紙の新聞に書き込みを行うユーザー体験をどのようにアプリへ落とし込んでいったか説明できればと思います。",
            "accepted": true,
            "speaker": {
                "name": "shimastripe",
                "kana": "シマストライプ",
                "twitter": "shimastriper",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/317a9359-3457-45f3-9fa4-452e1a7f7feb.jpg"
            },
            "created": "2022-06-07T16:50:26+09:00",
            "timetable": {
                "track": "Track B",
                "starts_at": "2022-09-12T13:00:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "c18b4eea-9ad0-4aa8-8a47-e0d3042bd78b",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/c18b4eea-9ad0-4aa8-8a47-e0d3042bd78b",
            "title": "PencilKit 実践拡張編",
            "abstract": "アプリの Apple Pencil 対応を行ったことはありますか？\r\nWWDC 2019 における、PencilKit を利用し、たった3行のコードを実装するだけで Apple Pencil を用いた一連の機能が実現されるデモは印象的でした。\r\nしかし、実際のアプリ開発における独自拡張の中では、様々な困難が待ち受けています。\r\n\r\n本セッションでは、PencilKit が可能な拡張・難しい拡張を紹介しつつ、ユースケースに応じてどのような対処が取れるか解説します。たとえば、PencilKit の自由に描けるキャンバス画面と、独自で実装したハイライトマーカーが引ける画面を切り替えて利用できるようにする仕組みなどに触れる予定です。\r\nドキュメントと実際の動作を比較して得られた知見をもとに PencilKit を実アプリに組み込む Tips を紹介できればと思います。",
            "accepted": false,
            "speaker": {
                "name": "shimastripe",
                "kana": "シマストライプ",
                "twitter": "shimastriper",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/317a9359-3457-45f3-9fa4-452e1a7f7feb.jpg"
            },
            "created": "2022-06-07T16:52:32+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "0e3d0130-5285-4658-9481-a79953b173ee",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/0e3d0130-5285-4658-9481-a79953b173ee",
            "title": "Configuration を用いた、iOS 14 時代の UICollectionViewCell カスタマイズ",
            "abstract": "iOS 14 から、 UICollectionViewCell のカスタマイズ方法に Configuration という種類の API が追加されました。\r\nたとえば、コンテンツや背景の外観に関するデータを設定すると、 View の描画反映を自動で行ってくれます。\r\nこれまでは、Header \/ Body \/ Footer それぞれの Cell を継承してカスタマイズしてきましたが、 これからは同一のConfiguration それぞれに適用可能な再利用しやすい Composable な API となっています。\r\n\r\n本セッションは、Custom の Configuration を用意して、実際に既存の Cell を移行する方法を紹介します。\r\nCompositionalLayout や DiffableDataSources と合わせて活用し、Cell の快適な管理を実現しましょう！",
            "accepted": false,
            "speaker": {
                "name": "shimastripe",
                "kana": "シマストライプ",
                "twitter": "shimastriper",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/317a9359-3457-45f3-9fa4-452e1a7f7feb.jpg"
            },
            "created": "2022-06-07T16:53:11+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "82e6feb4-a39e-4ffe-ad73-88d1a03f62c5",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/82e6feb4-a39e-4ffe-ad73-88d1a03f62c5",
            "title": "App Clips は今 〜このXcodeの片隅で〜",
            "abstract": "WWDC2020にて華々しくデビューしたApp Clipsですが、それから2年過ぎた現在においてもあまり見向きをされていないような印象があり、割と寂しく思うところです。\r\n時には「謎のミニアプリ」として紹介されることもあるApp Clips、この１年間で何が変わったのか、そしてこの秋には何が新しくなるのか。\r\n本LTでは何かと不憫な目に遭っているApp Clipsにスポットライトを当て、App Clip 自身またはそれを取り巻く環境のアップデートについてお話をしたいと思います。",
            "accepted": false,
            "speaker": {
                "name": "log5",
                "kana": "ログファイブ",
                "twitter": "log5",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/47c9175b-3a98-4b1f-8817-4059dc6b9bfc.jpg"
            },
            "created": "2022-06-07T17:13:00+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "1d91ba4f-6620-415b-859c-79e4dad66f89",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/1d91ba4f-6620-415b-859c-79e4dad66f89",
            "title": "挑戦！ISUCON de Server-side Swift 〜タイムゾーンには気をつけろ〜",
            "abstract": "皆さんは ISUCON をご存知でしょうか？ISUCON は 課題として提供されるWebサービスを「いい感じにスピードアップ」するコンテストです。\r\n\r\nさて、ここに3人のiOSエンジニアが勝負を挑みました。この３人、持ち前の iOS 開発で培った Swift 力で、シビアな制限時間の中、課題をSwift にフルスクラッチで書き換えようとします。果たして優勝を勝ち取り、iOS開発、そしてSwift言語の威厳を他の参加者に知らしめることはできたのでしょうか。\r\n\r\nこのトークを通じて、iOS、macOS アプリケーションの開発者の皆さんがどのようにしてサーバーサイドSwiftに取り組めるか、そして本格的なアプリを実装できるかを学べるやもしれません。 iOS クライアントだけでなく、サービス全てをSwiftにしたい方、必見です!\r\n",
            "accepted": true,
            "speaker": {
                "name": "freddi",
                "kana": "フレディ",
                "twitter": "___freddi___",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/b4794539-cc02-45e6-b08a-c75df3357f03.jpg"
            },
            "created": "2022-06-07T17:13:03+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-11T16:00:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "4a38d459-d845-4911-9129-a9af33e28c72",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/4a38d459-d845-4911-9129-a9af33e28c72",
            "title": "既存のSwift製ネイティブアプリに一部Flutter利用はありなのか？現実的な落とし所とは？",
            "abstract": "現在、新規でアプリ開発を考えたとき、Flutterでのアプリ開発は１つの選択肢として浸透しつつあります。\r\nしかしながら、既にSwiftで開発している既存のアプリが大多数で、マルチプラットフォーム開発ができれば、開発コストを下げれると考える一方で、ネイティブとFlutterではレンダリングエンジンが異なるため、なかなか導入に踏み切れないといったところが大きいのではないでしょうか？\r\n\r\n今回、既存アプリにFlutterを導入できないか真剣に向き合うことにしました。\r\n少しでも、今後の導入の参考にしていただければと思います。\r\n",
            "accepted": false,
            "speaker": {
                "name": "takahia",
                "kana": "タカヒア",
                "twitter": "takahia",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7366ce26-7e77-4d8c-8fda-8d464f48696b.jpg"
            },
            "created": "2022-06-07T17:24:44+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "149abcfe-2fa4-43cf-acec-f38393ca4a4b",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/149abcfe-2fa4-43cf-acec-f38393ca4a4b",
            "title": "iOS15からのCommunication NotificationとSiri",
            "abstract": "iOS15からユーザー間でのやりとりのための新しい通知、Communication Notificationが導入されました。\r\nそうです、通知にユーザーのアイコンが出るあの通知です。 \r\n\r\nUIが変わったり、通知の要約を突破できたりと普通の通知よりも便利なこともある一方、Siriに関する知識が必要になってきます。\r\nしかしSiriに関してはドキュメントも知見も少なく、その割に設定する項目も多く、敷居が高いイメージもあるのではないでしょうか？\r\nそもそもなぜ通知の実装にSiriが出てくるのでしょうか？\r\n\r\nこのトークではCommunication Notificationの実装方法、Communication Notificationを実装する上でのSiriの知識、及びよくやってしまいがちなCommunication Notificationのアンチパターンなどを紹介していきます。",
            "accepted": true,
            "speaker": {
                "name": "まつじ",
                "kana": "マツジ",
                "twitter": "mtj_j",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/2187a640-4b47-46f7-ab23-9595251beece.jpg"
            },
            "created": "2022-06-07T17:53:31+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-12T13:55:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "c0b5de76-0cd0-4046-a2c0-b552cb82a8b2",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/c0b5de76-0cd0-4046-a2c0-b552cb82a8b2",
            "title": "iOSエンジニアが２年かけてタクシーアプリ「GO」のプロダクト開発のプロセスを大胆に変えた話",
            "abstract": "タクシーアプリ「GO」は、2020年9月にリリースしました。\r\nその頃は、iOSチームとしてアプリ開発を行なっており、日々「GO」の新機能を開発する日々でした。\r\nしかしながら、同じ「GO」のプロダクトを開発するメンバーがPdMやデザイナーも含め40人を超えるため、\r\nどうしても意思疎通がうまくいかなかったり、意思決定が遅かったりと、いくつかの問題を抱えていました。\r\n\r\nそこで、2020年6月から身近なiOSチームという比較的ミクロな改革、2021年5月からは、PdMやデザイナーも巻き込んだ、プロダクト開発チームとしてのマクロな改革を行いました。\r\nそえぞれ何を軸にして行なっていくか、目的も異なってきます。どのような課題感から、何を思い、どのような変革を行なっていったか、是非リーダーやマネージャーを担っているエンジニアの方々だけでなく、これからリーダーやマネージャを目指す方に聞いてもらいたいです。\r\n",
            "accepted": false,
            "speaker": {
                "name": "takahia",
                "kana": "タカヒア",
                "twitter": "takahia",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7366ce26-7e77-4d8c-8fda-8d464f48696b.jpg"
            },
            "created": "2022-06-07T17:59:11+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "22cee581-feee-42de-a098-e6d211002958",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/22cee581-feee-42de-a098-e6d211002958",
            "title": "iOSエンジニアが１年かけてタクシーアプリ「GO」のプロダクト開発のプロセスを大胆に変えた話",
            "abstract": "タクシーアプリ「GO」は、2020年9月にリリースしました。\r\nその頃は、iOSチームとして、アプリ開発を行なっており、日々「GO」の新機能を開発する日々でした。\r\nしかしながら、同じ「GO」のプロダクトを開発するメンバーがPdMやデザイナーも含め40人を超えるため、\r\nどうしても意思疎通がうまくいかなかったり、意思決定が遅かったりと、いくつかの問題を抱えていました。\r\n\r\nそこで、2021年5月からは、複数のPdMやデザイナーも巻き込んで、大きな改革に取り組みました。\r\n部署自体が異なるため、現場で案件のフローやコンセンサスの取り方など、多くのすり合わせをおこなってきました。\r\nどのような課題感から、何を思い、どのような変革を行なっていったか、是非リーダーやマネージャーを担っているエンジニアの方々だけでなく、これからリーダーやマネージャを目指す方に聞いてもらいたいです。",
            "accepted": false,
            "speaker": {
                "name": "takahia",
                "kana": "タカヒア",
                "twitter": "takahia",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7366ce26-7e77-4d8c-8fda-8d464f48696b.jpg"
            },
            "created": "2022-06-07T17:59:59+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "338cdae8-c067-4711-9c25-294d9b69c010",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/338cdae8-c067-4711-9c25-294d9b69c010",
            "title": "App Store Connect API経由で自分のアプリのダウンロード数を取得してみる",
            "abstract": "皆さんは、App Store Connect APIというものをご存知でしょうか？\r\nAppleが公式で用意しているAPIでこのAPI経由で様々なことができます。\r\n\r\nこのApp Store Connect APIを使って自分がストアに公開しているアプリのダウンロード数を取得する、Go言語向けライブラリ「goisumobilereport」を作成したのでその紹介をしたいと思います。\r\n\r\n今回のLTでは自作ライブラリの内部処理から導入手順、実際に動かすところまでを紹介したいと思います。",
            "accepted": false,
            "speaker": {
                "name": "Tatsumi0000",
                "kana": "タツミ"
            },
            "created": "2022-06-07T18:06:57+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "603703ee-c73e-4f49-8a52-b221ad09bc34",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/603703ee-c73e-4f49-8a52-b221ad09bc34",
            "title": "Cloud FunctionとPubSubでサイレントプッシュ通知を一通り実装してみる",
            "abstract": "サイレントプッシュ通知を運用するためにはクライアント実装を含め、サーバサイドの実装も必要になります。サーバサイドの実装にも選択肢は一つではありませんがその中でCloud Functionは負荷に対してすスケーリングに悩む必要がなく本来必要な設定や実装の多くの部分をスキップできるのでアプリエンジニアにとって恩恵が大きいです。\r\nこのトークではFirebase PubSubメッセージ送信からCloudFunctionが実行されiOSアプリでサイレントプッシュ通知が届くまでの流れに必要な最低限の一通りの実装を実例とともに説明します。\r\n>内容構成\r\n    - 全体のフロー\r\n    - PubSub設定\r\n    - Cloud Functionの実装（Typescript）\r\n    - iOSクライアントの実装\r\n    - 気をつけたい部分\r\n",
            "accepted": false,
            "speaker": {
                "name": "げん",
                "kana": "ゲン",
                "twitter": "trywjs",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/5d7af72a-456b-41c5-bccf-69379ec9093c.jpg"
            },
            "created": "2022-06-07T19:08:11+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "558d8993-c3b7-4bac-8009-1afd8c948383",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/558d8993-c3b7-4bac-8009-1afd8c948383",
            "title": "Unity製ゲームを配信アプリ上で動かす",
            "abstract": "Unity as a Library(UaaL)はUnityをネイティブアプリのライブラリとして利用する技術です。\r\nネイティブアプリの強みであるOSに準拠したUI\/UXを実現できる点、Unityの強みの3Dを簡単に使える仕組みが整っている点を組み合わせることが可能で、複雑な3D表現やリッチなグラフィックを実現したい場合においてUaaLは選択肢に上がるかと思います。\r\n\r\n本トークでは、ネイティブ・Unityエンジニア間のコミュニケーション面にも触れつつ、\r\nUnity製のゲームが動作するまでのフロー、ネイティブとUnityとでどのように領域を区切って開発しているかを事例ベースで解説します。\r\n\r\n・UaaLの概要\r\n・UaaLの活用とUnityViewの解説\r\n・ネイティブアプリとUnityのメッセージング用のインターフェースの解説\r\n・UaaLの課題や問題点、今後の取り組み",
            "accepted": false,
            "speaker": {
                "name": "takezawa toshiki",
                "kana": "タケザワ トシキ",
                "twitter": "to4iki",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ed1d805c-09f1-49e9-a2e1-fe20abbab2d1.jpg"
            },
            "created": "2022-06-07T19:09:07+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "eff9d899-3c46-42a1-b6d7-86d5bd52d073",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/eff9d899-3c46-42a1-b6d7-86d5bd52d073",
            "title": "初めてOSSへの貢献を投稿し、マージされるまでのトークです。",
            "abstract": "最近使っているOSSを振り返ってみると、ある人が投稿した問題があり、それを解決できれば役に立ちそうな気がしました。普段使っているOSSなので、全体的な解決イメージが湧きやすく、試行錯誤しながら、少しずつ解決への道筋が見えてきました！",
            "accepted": false,
            "speaker": {
                "name": "Ong Yue Huei",
                "kana": "オン　ユー　ホイ"
            },
            "created": "2022-06-07T19:10:48+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "14ed23f2-3eac-49b2-bc24-1a26f895a297",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/14ed23f2-3eac-49b2-bc24-1a26f895a297",
            "title": "String Interpolationで実現するSwiftUI.Text拡張",
            "abstract": "多くのプログラミング言語に備わる機能String Interpolationは、一般的には変数をプレースホルダーに展開する機能で、みなさんもよく使用することでしょう。\r\nSwift実装では、開発者に拡張手段が提供されていて、高度で静的な文字列操作を可能にします。\r\nさらにSwuiftUI、とりわけTextの機能が充実したことで、近年では単純なStringとしての表現を超え、活躍の幅は広がっています。\r\nこのトークでは、文字列操作としての典型的な使用方法を説明し、SwiftUI.Textを例に、Frameworkと組み合わせた活用方法を紹介します。\r\n\r\nString Interpolation活用して、日々のコーディング体験を向上させましょう。",
            "accepted": false,
            "speaker": {
                "name": "Yutaro Muta",
                "kana": "ムタユウタロウ",
                "twitter": "yutailang0119",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/4ee5d10c-b08a-4bcd-82fd-df4404ab923c.jpg"
            },
            "created": "2022-06-07T19:29:38+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "0b2b5ba1-c880-44d6-8fb4-7036678b8fbd",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/0b2b5ba1-c880-44d6-8fb4-7036678b8fbd",
            "title": "print(\"\\(\"String Interpolation\") deep dive\")",
            "abstract": "let theme = \"String Interpolation\"\r\nprint(\"\\(theme) deep dive\")\r\n\r\nこれは多くのプログラミング言語に備わる機能、String InterpolationのSwift実装です。\r\n一般的に変数をプレースホルダーに展開する機能ですが、Swiftでは拡張手段が提供されていて、高度で静的な文字列操作を可能にします。\r\nさらにSwuiftUI、特にTextの機能が充実したことで、単純なStringとしての表現力を超えた活躍を期待できます。\r\nこのトークでは、SwiftにおけるString Interpolationの仕組み、実現方法を解説して理解を深め、典型的な使用方法を学びます。\r\n次にSwiftUIを例に、Frameworkと組み合わせた応用を目指します。\r\n\r\nString Interpolation活用の新たなアイディアに繋げましょう。",
            "accepted": false,
            "speaker": {
                "name": "Yutaro Muta",
                "kana": "ムタユウタロウ",
                "twitter": "yutailang0119",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/4ee5d10c-b08a-4bcd-82fd-df4404ab923c.jpg"
            },
            "created": "2022-06-07T19:35:54+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "0195d276-a4ed-4481-96cb-5f3bcd6594e9",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/0195d276-a4ed-4481-96cb-5f3bcd6594e9",
            "title": "デグレを防ぐ！UIテストの活用法",
            "abstract": "iOSアプリの開発楽しい！アプリ開発したからリリースだ！\r\n・・・その前にちゃんとテストはしましたか？\r\n\r\nスピード優先のアジャイル開発はテストを疎かにしていい理由にはなりません。\r\nとはいえ、人力のテストには限界があるので可能な範囲から自動テスト化させていきましょう。\r\n\r\n今回はUIテスト技術にフォーカスして、実際に開発中やリリース前にでてきたテストの悩みをどうやって解決したのかをご紹介します。\r\n\r\n- APIの通信、動画の再生、ログインを挟む画面へのテスト追加\r\n- アプリ起動時にしか表示されない画面のテスト\r\n- Custom URL Schemeからのアプリ起動時のテスト\r\n- CIのテスト実行時間が長くなってしまった問題の解決\r\n\r\nXCTestとかUIテストとかよくわからん、やりたくない・・・って思っている方、ちゃんとテストコードを書いてリリース前に安心を得ませんか？",
            "accepted": false,
            "speaker": {
                "name": "瀬尾 敦生",
                "kana": "セオ アツキ",
                "twitter": "falcon0328",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/2a66035e-b78e-4783-9772-4059f31a12df.jpg"
            },
            "created": "2022-06-07T19:44:52+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "09859d6d-7879-45e2-a1c0-58cd3efc83d4",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/09859d6d-7879-45e2-a1c0-58cd3efc83d4",
            "title": "StoreKit2 の素晴らしさを改めて紐解こう",
            "abstract": "StoreKit2 が使えるようになり早一年。これまでの StoreKit は API が複雑だったことで、ロジック変更に対する抵抗感やリスクから対応を後回しにしている方が大勢居るのではないでしょうか。\r\n本LTでは StoreKit2 の魅力をこれまでと対比することで改めて認識し、StoreKit に対する心理的不安を解消するまでをゴールとします。",
            "accepted": false,
            "speaker": {
                "name": "Sato Ken",
                "kana": "サトウケン",
                "twitter": "ksCap_0114",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/a108d896-8717-4b1a-ae66-863bb4fdf871.jpg"
            },
            "created": "2022-06-07T19:57:16+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "02608800-42a8-4de5-b123-5fccb3174ab4",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/02608800-42a8-4de5-b123-5fccb3174ab4",
            "title": "VisionKitを使ってクレジットカードスキャナーを作る話",
            "abstract": "iOS13から追加されたVisionKitフレームワークの物体認識、OCR(Optical character recognition)など一部機能を使うとこで簡単にクレジットカードの番号を読み込む機能をゼロから作ることができます。\r\n\r\n・VNDetectRectanglesRequest -> カードの形を認識\r\n・VNRecognizeTextRequest -> カード番号、有効期限、名前の読み込み(ocr)\r\n・パーシングして使えるかを判定\r\n\r\nその他、認識制度を上げるためのアイディアについて話します！",
            "accepted": true,
            "speaker": {
                "name": "Park Byungjun",
                "kana": "パクビョンジュン",
                "twitter": "hexarf",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/275102e9-a075-4402-8508-a7305443a7b3.jpg"
            },
            "created": "2022-06-07T19:57:34+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T15:30:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "fd14c8b9-1a15-4c82-aa3b-40d952adee4c",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/fd14c8b9-1a15-4c82-aa3b-40d952adee4c",
            "title": "OpenAPIのクライアント自動生成を現場に導入していくためのノウハウ",
            "abstract": "私たちのチームではAPIの実装とクライアントのAPIインターフェースの実装の差分をできるだけなくし、より円滑に開発を進めるためにOpenAPIを導入しました。\r\nまたiOSプロジェクトではCreateAPIというライブラリを使用して、OpenAPIのAPIドキュメントからAPIインターフェースを自動生成しています。\r\n\r\n本トークではOpenAPIを実際にiOSプロジェクトに導入するにあたって\r\n\r\n- すでに運用されているプロジェクトにおいてどのように自動生成APIインターフェースを導入していくか\r\n- 他iOSエンジニアとのコミュニケーション\r\n- テストの設計\r\n- 日々のAPIドキュメント更新のクライアントへの同期手法\r\n\r\nなどについて実際の業務で得た知見からお話しします。\r\nこれからOpenAPIの導入を検討されている開発者のかたの助けになる情報が届けられれば幸いです。",
            "accepted": false,
            "speaker": {
                "name": "imajin",
                "kana": "イマジン",
                "twitter": "mrimjn",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/5780b86a-e918-4c72-8db6-2697f5d3c560.jpg"
            },
            "created": "2022-06-07T20:09:02+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "82aa5a1a-5241-4c12-a042-ff86cce090a1",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/82aa5a1a-5241-4c12-a042-ff86cce090a1",
            "title": "8年間続いているiOS Webブラウザアプリ開発の知見",
            "abstract": "2014年から趣味で公開し開発を継続しているiOS Webブラウザアプリ開発で溜まった知見を振り返りまとめます。\r\n余裕があればSwiftUIでサンプルアプリを作り公開します。\r\n\r\nこの辺りの話になると思います。\r\n* 複数のWKWebViewの扱い\r\n* ブラウザサイドJavaScript\r\n* 認証・セキュリティ\r\n* コンテンツブロック\r\n* デフォルトブラウザ申請\r\n* App Extension\r\n* webview内ジェスチャ\r\n* favicon・サムネイル処理・メディア再生など\r\n",
            "accepted": false,
            "speaker": {
                "name": "Fukuyama",
                "kana": "フクヤマ",
                "twitter": "fokotate",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/e2a914ea-d4ad-42e2-bf5d-49d74ca3890c.png"
            },
            "created": "2022-06-07T20:19:27+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "dd33440f-cb0b-4c93-b3bc-b2a66664a870",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/dd33440f-cb0b-4c93-b3bc-b2a66664a870",
            "title": "8年間続いているiOS Webブラウザアプリ開発の知見",
            "abstract": "2014年から趣味で公開し開発を継続しているiOS Webブラウザアプリ開発で溜まった知見を振り返りまとめます。\r\n余裕があればSwiftUIでサンプルアプリを作り公開します。\r\n\r\nこの辺りの話になると思います。\r\n* 複数のWKWebViewの扱い\r\n* ブラウザサイドJavaScript\r\n* 認証・セキュリティ\r\n* コンテンツブロック\r\n* デフォルトブラウザ申請\r\n* App Extension\r\n* webview内ジェスチャ\r\n* favicon・サムネイル処理・メディア再生など\r\n",
            "accepted": false,
            "speaker": {
                "name": "Fukuyama",
                "kana": "フクヤマ",
                "twitter": "fokotate",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/e2a914ea-d4ad-42e2-bf5d-49d74ca3890c.png"
            },
            "created": "2022-06-07T20:20:29+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "87794464-974f-4670-817e-bc2844fef530",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/87794464-974f-4670-817e-bc2844fef530",
            "title": "今だからこそやるiPhoneアプリ開発におけるデバッグ方法",
            "abstract": "どうも！デバッグ大好きJ.J.です！\r\n皆さん、よく使うデバッグ方法は何通りありますか？\r\nこのトークでは、Xcode上でのデバッグについてだけでなく簡単に導入できるライブラリやサードパーティーを使ったデバッグ方法を紹介します。\r\n実際の現場で役に立つデバッグ方法であること間違い無しです！\r\n\r\niPhoneアプリ開発におけるデバッグ方法を、時間が許す限りお話しします！",
            "accepted": false,
            "speaker": {
                "name": "J.J.",
                "kana": "ジェージェー",
                "twitter": "MHTcode_JJ",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3b4d8ab1-1d11-4380-a3a4-630c48095f4e.jpg"
            },
            "created": "2022-06-07T20:22:28+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "aa8ecff3-682b-4127-93ac-321b9ec4cf30",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/aa8ecff3-682b-4127-93ac-321b9ec4cf30",
            "title": "Swift アクターモデルと Elm Architecture の融合",
            "abstract": "この発表では、Swift アクターモデルと Elm Architecture を融合したフレームワーク「Actomaton」について、実用例を中心に紹介します。\r\n\r\nhttps:\/\/github.com\/Actomaton\/Actomaton\r\n\r\nComposable Architecture では飽き足らないマニア向けの内容を予定しています。\r\n\r\n1. Actomaton の簡単な紹介\r\n2. アプリの状態管理の基本的な例：「ディープリンク」「タイムトラベル」\r\n3. 並行タスクキューを用いた副作用管理の例：「並行ダウンローダー」「並行 Web クローラー」\r\n4. アクター（オブジェクト指向）と Elm Architecture （関数型プログラミング）の両方を用いた計算モデルの親和性について\r\n5. （時間があれば）やはり圏論。圏論は全てを解決する。",
            "accepted": true,
            "speaker": {
                "name": "稲見 泰宏",
                "kana": "イナミ ヤスヒロ",
                "twitter": "inamiy",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/725c08cd-e222-453f-b65e-0127a387b903.jpg"
            },
            "created": "2022-06-07T20:42:10+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-11T11:05:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "46aaee33-31f5-4872-8cef-ff18ca7a1b4c",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/46aaee33-31f5-4872-8cef-ff18ca7a1b4c",
            "title": "量子情報工学への招待 〜iOSアプリ開発を通して学んでみよう〜",
            "abstract": "量子コンピュータや量子情報、量子暗号といった言葉を聞いたことがある人は多いと思います。これらには量子力学という物理の学問が使われています。\r\nそんな量子力学が作り出す不思議な世界へiOSアプリ開発、Xcodeのシュミレータを用いてご説明します。\r\n物理学の専門性がない方にもご理解いただけるように難しい話はしません。量子力学の面白さ、不思議さを知ってもらうためのトークです。",
            "accepted": true,
            "speaker": {
                "name": "REON",
                "kana": "レオン",
                "twitter": "reon_ios_cat",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/544ee29a-af1b-4eb8-bd46-cedd86a8a6bf.jpg"
            },
            "created": "2022-06-07T20:42:41+09:00",
            "timetable": {
                "track": "Track B",
                "starts_at": "2022-09-10T18:45:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "e383fe1f-0458-42b8-a732-81db63f4f6c9",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/e383fe1f-0458-42b8-a732-81db63f4f6c9",
            "title": "Apple Watchを使い倒す 〜Watchから取れるデータとその活用法〜",
            "abstract": "初代Apple Watchが発売されてから早7年。Apple Watchは進化を続け、圧倒的な世界最多シェアを誇るスマートウォッチとなりました。\r\nそんなApple Watchを自身のアプリ開発にも活用したいところですが、具体的にどう活かせば良いかは悩みどころですよね…。\r\n\r\nということで今回は、\r\n1. どんなデータをApple Watchから取得できるのか\r\n2. どんな用途に利用されている・できそうか\r\n\r\nこれらの観点から整理し、ウォッチを活用したユニークなアプリの開発につながるヒントを共有できれば幸いです。",
            "accepted": true,
            "speaker": {
                "name": "tsuboyan",
                "kana": "ツボヤン",
                "twitter": "tsuboyan5",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/9889a4cf-a1b7-4690-b51c-0a813f7579e3.jpg"
            },
            "created": "2022-06-07T20:56:21+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-11T15:15:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8d3a57c9-7259-4347-b02c-543ebe427026",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8d3a57c9-7259-4347-b02c-543ebe427026",
            "title": "2ヶ月以内にApp内課金を実装しないと審査を通さないと言われた時に焦らないために",
            "abstract": "ある日突然「2ヶ月猶予あげるからApp内課金を実装して、App内課金を実装しないと審査通らないよ」と言われた時にあなたならどうしますか？\r\n\r\nApp内課金（In-App Purchase）はすでに多くのアプリで実装されている機能ですが、課金の形態はアプリによって多種多様で場合によっては調べても自分が提供したい形態にマッチしないような場合もあります。\r\n\r\nお上の一声で突如リリースが出来ない危機に陥った時に焦らずに対処できるようにするためにApp内課金を実装する上でのポイントやこれを早く知っておきたかったといったポイントをお話しします。\r\n\r\nこのトークを聞いて2ヶ月でApp課金をリリースしてみませんか？",
            "accepted": false,
            "speaker": {
                "name": "立花和也",
                "kana": "タチバナカズヤ",
                "twitter": "kzytcbn315",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/cd8d6aad-9aa5-4694-b38f-f9f693f5ae7b.jpg"
            },
            "created": "2022-06-07T20:57:01+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "25af33e9-b30a-4f85-9c8b-16e31550d159",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/25af33e9-b30a-4f85-9c8b-16e31550d159",
            "title": "大規模アプリ開発におけるiOSチーム内での情報共有の取り組み",
            "abstract": "タクシーアプリ「GO」のiOSアプリは現在7人体制で開発しています。\r\n3,4人だった頃は自分が開発した部分じゃなくてもなんとなく分かっていたものが、徐々に自分の担当している案件しかわからない状況になっていきました。\r\nそんな中iOSチームで週次のチーム会を開催するようになり、そこでやった取り組みの中でよかった物について紹介したいと思います。",
            "accepted": false,
            "speaker": {
                "name": "古屋 広二 ",
                "kana": "フルヤ コウジ",
                "twitter": "furuyan325",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/2c77abb9-bbf6-4a15-98f0-7e837de59beb.jpg"
            },
            "created": "2022-06-07T20:57:38+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "37cca0f9-fb97-489e-9a1b-8841cdbdb2a6",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/37cca0f9-fb97-489e-9a1b-8841cdbdb2a6",
            "title": "Protocol BuffersでHTTP APIを定義してコードを自動生成する",
            "abstract": "「REALITY」アプリでは、クライアントとサーバ間のHTTP通信の定義にProtocol Buffersを導入しました。\r\nProtocol BuffersとはGoogleによって開発されたシリアライズフォーマットであり、共通のスキーマからSwiftやKotlin、Goなど各言語向けに必要なコードを自動生成します。\r\ngRPCとセットのイメージのProtocol Buffersですが、バイナリに変換してHTTP通信のbodyに載せることで、プロトコルはHTTP通信のままに、共通のスキーマや、高速、軽量のシリアライゼーションなどProtocol Buffersの恩恵を受ける事が可能です。\r\n\r\nこのトークでは、Protocol Buffersを使ったHTTP通信の定義に加え、Swiftで独自のprotocのpluginを実装し、クライアントで必要なコードを自動生成する方法を紹介します。",
            "accepted": false,
            "speaker": {
                "name": "あおやま",
                "kana": "アオヤマ",
                "twitter": "lt_aoyama",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/4d8b4425-2d59-4474-b08b-3dd880509752.jpg"
            },
            "created": "2022-06-07T21:08:45+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "d093b854-605b-4567-adfd-02f013820522",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/d093b854-605b-4567-adfd-02f013820522",
            "title": "CoreBluetooth 2022",
            "abstract": "iOSで無線通信 Bluetoothを扱うために存在するCoreBluetoothはiOS 5.0の時代からある歴史のあるものです。\r\n\r\n昔触ったことのある人であれば、CoreBluetoothは一部のBluetoothの用途でしか使えない、ごく機能の限られたもの、という印象があるかもしれません。\r\nしかし最近のCoreBluetoothは新規のAPIの追加という形では少ないものの、LE 2M PHY対応やBR\/EDR向け対応など、できることは確実に広がっています。\r\n\r\nそんなiOSのBluetoothに関して、2022年現在改めてCoreBluetoothではどういったことが実現できるのか、CoreBluetoothについて紹介し、iOSの無線通信の可能性を見出すトークとする予定です。",
            "accepted": false,
            "speaker": {
                "name": "日向強",
                "kana": "ヒュウガツヨシ",
                "twitter": "coffeegyunyu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/0c8845ab-4898-48ce-86c6-38b0a2129d34.jpg"
            },
            "created": "2022-06-07T21:37:13+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "32a5a9e4-2642-4e18-b9e4-4219d1e114c6",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/32a5a9e4-2642-4e18-b9e4-4219d1e114c6",
            "title": "継続的サービス品質改善のためのiOSアプリのモニタリング",
            "abstract": "モニタリングはサービスの開発・運用において重要な要素です。\r\nしかし、ノウハウがある程度確立しているバックエンドやインフラ領域に比べ、クライアントサイドではまだ事例が少ないこともあり、手探りの運用にならざるを得ないケースが多いのではないでしょうか？\r\n本トークでは、バーチャルライブ配信アプリ「REALITY」の事例から、指標収集のための実装や、FirebaseやBigQueryなどの外部サービスとの連携など、継続的品質改善のためのiOSアプリのモニタリング手法についてお話しします。\r\n\r\n - クラッシュレポートの収集と分類 〜Unity as a Library構成アプリの事例から〜\r\n - オブザーバビリティ向上のためのエラーログ構造化\r\n - アプリアイコンタップからコンテンツ表示までの\"起動時間\"\r\n - ライブ配信中のサーマルスロットリング状況\r\n - 品質改善&維持のための運用&監視",
            "accepted": false,
            "speaker": {
                "name": "増住 啓吾",
                "kana": "マスズミ ケイゴ"
            },
            "created": "2022-06-07T21:38:32+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "88650394-ad02-4847-b690-b86f99909ec4",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/88650394-ad02-4847-b690-b86f99909ec4",
            "title": "新卒1年目でネイティブアプリを3つFlutterにリプレイスした話",
            "abstract": "21卒で元々iOSエンジニアとしてエキサイト株式会社に入社し、エキサイトニュース、ローリエプレス、エキサイト翻訳のFlutterリプレイスに携わらせてもらいました。弊社としてはさらにアプリで攻めていくために選んだFlutterへのリプレイスです。\r\nその中で生まれた\r\n- アプリ開発組織としてや実際のリプレイス部分における苦悩やそれに対する改善点。\r\n- ネイティブだったらここでつまづかなかったのにという点。\r\n以上2点について話していきたいと思います",
            "accepted": false,
            "speaker": {
                "name": "セイ",
                "kana": "セイ",
                "twitter": "tkn_sei58",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/5a2168ca-d83c-40a3-a2fa-9f8b19fe7c16.jpg"
            },
            "created": "2022-06-07T21:40:54+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "05dd8eae-e50f-4a48-b5c8-61361d696b08",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/05dd8eae-e50f-4a48-b5c8-61361d696b08",
            "title": "【ABテストまわしてこ！】Firebase Remote ConfigでひたすらABテストを回して得た知見をお届け",
            "abstract": "mamariではオンボーディング強化のため、昨年末からFirebase Remote Configを用いたABテストを繰り返しています。\r\nこのトークでは、ABテストを継続的に続けることで得た知見をできるだけシェアしたいと思います。\r\n- mamariではどのようにFirebaseでのABテストをどのようにアプリに組み込んでいるか\r\n- Firebaseに送信できるユーザープロパティ上限25個しかないのですぐ引っかかってしまうのでチームを巻き込んで整理した話\r\n- Custom Definitionsを用いたAudience作成がわかりづらく意図しないセグメントになってしまった話\r\n- オンボーディング途中で送信したEventを用いてAudienceを割り振ろうとしても割当が間に合わないのでその対策\r\n- 施策全体を通してどんな施策が効果があったのか\r\nABテストまわしてこ！",
            "accepted": false,
            "speaker": {
                "name": "ohayoukenchan",
                "kana": "オハヨウケンチャン",
                "twitter": "ohayoukenchan",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/fcc741bc-07c6-4778-b199-d1152b360df8.jpg"
            },
            "created": "2022-06-07T21:46:37+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8a6fdc78-85ab-440f-ade5-8a7d04f9e533",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8a6fdc78-85ab-440f-ade5-8a7d04f9e533",
            "title": "Flutterでも好きなパッケージ管理ツールを使いたい! 試してみてわかったこと",
            "abstract": "Flutterで利用したアプリケーションでは初期状態だとパッケージ管理ツールはCocoaPodsが設定されます。\r\n今までSwiftで開発をしていた人はCocoaPodsだけではなくCarthageやSwift Package Managerを利用している人もいると思います。\r\n実際に試してみた\r\n\r\n1. パッケージ管理ツールの簡単な説明\r\n2. Flutterに好きなパッケージ管理ツールを導入する方法\r\n3. パッケージ管理ツールを入れる際の注意点\r\n4. Flutterにおいてのパッケージ管理ツールの現状\r\n\r\n* ターゲット\r\n1. Swiftで今までアプリ開発を行っていてこれからFlutterのネイティブ実装をする可能性がある人\r\n2. パッケージ管理ツールにこだわりがある人\r\n3. Flutterでパッケージ管理ツールを変えられるか知りたい人",
            "accepted": false,
            "speaker": {
                "name": "千葉 諒",
                "kana": "チバ リョウ",
                "twitter": "MHTcode_chibird",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/73167807-c7c2-4483-b58d-3ab405642776.png"
            },
            "created": "2022-06-07T21:54:31+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "3bd09794-5d17-494b-9269-ed24c383a38d",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/3bd09794-5d17-494b-9269-ed24c383a38d",
            "title": "SwiftUI版Atomic Designを用いての責務分担を明確化してみよう！",
            "abstract": "SwiftUIでAtomic Designを使った特の責務分担の考え方と役割について説明していきます。\r\n\r\n1. Atimic Designとはなにか？\r\n  * Atomic Designの説明\r\n2. なぜSwiftUIでAtomic Designを利用するメリットの説明\r\n  * SwiftUIでAtomic Designを使用すると解決できる問題\r\n3. SwiftUIでAtomic DesignにUIを切り分ける実例\r\n  * SwiftUIで実際のコードを見ながら切り分ける実例を紹介していきます。\r\n\r\n* ターゲット\r\n1.Swiftを学び始めたけどファイルの細分化をどの単位でしていけばいいのかがわからない\r\n2. 同じコードをいろいろな場所で何度も書いてしまっている\r\n3. webフロントの開発を今までやっていてこれからSwiftを学習しようと思っている",
            "accepted": false,
            "speaker": {
                "name": "千葉 諒",
                "kana": "チバ リョウ",
                "twitter": "MHTcode_chibird",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/73167807-c7c2-4483-b58d-3ab405642776.png"
            },
            "created": "2022-06-07T22:03:28+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "2adc32ee-4515-42bb-a22f-ddac6d5d8aee",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/2adc32ee-4515-42bb-a22f-ddac6d5d8aee",
            "title": "Exposure Notification Privacy-preserving Analytics Architectureの仕様について",
            "abstract": "COVID-19のパンデミックに対する解決策としてAppleとGoogleが設計したExposure Notification Privacy-preserving Analytics (ENPA) Architectureについてトークします。\r\nENPAは、最新のプライバシー保護技術および暗号化技術を活用して、個人データを一切開示せずにデータを収集することを可能にするものです。\r\n強力なプライバシー原則を維持しながら、収集された測定基準の信頼をどのように保護したのか、どのような仕組みを利用して情報を収集したのかをExposure Notification Privacy-preserving Analytics White Paperから解説いたします。",
            "accepted": true,
            "speaker": {
                "name": "杉本 至",
                "kana": "スギモト　イタル",
                "twitter": "itaru_sugimoto",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/dd6e53fc-62e7-46c7-b797-e9edca46dcee.png"
            },
            "created": "2022-06-07T22:03:31+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-11T16:10:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "8fb9a18a-7b51-4a7b-8592-69050858d62b",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/8fb9a18a-7b51-4a7b-8592-69050858d62b",
            "title": "Firebase Crashlyticsのべすとぷらくてぃす",
            "abstract": "普段とりあえず入れて何気なく使われているCrashlytics\r\nCrashlyticsはCrash検知だけでなく、Error・Bug検知にも使えます\r\n本当は必要なErrorを取り逃がしていませんか？\r\nErrorの設計や、実装方法と活用を紹介します",
            "accepted": false,
            "speaker": {
                "name": "古宮伸久",
                "kana": "コミヤ　ノブヒサ",
                "twitter": "novr",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/b28e08c8-c479-443c-93eb-9d53e8b7a927.png"
            },
            "created": "2022-06-07T22:19:52+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "355f3197-8df9-4d82-88ab-6880b9a5f9ab",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/355f3197-8df9-4d82-88ab-6880b9a5f9ab",
            "title": "Findy Teamsエンジニアリングチームの生産性を可視化してみた",
            "abstract": "Findy Teamsを使ってエンジニアチームの生産性を可視化し、改善に取り組んだ話",
            "accepted": false,
            "speaker": {
                "name": "古宮伸久",
                "kana": "コミヤ　ノブヒサ",
                "twitter": "novr",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/b28e08c8-c479-443c-93eb-9d53e8b7a927.png"
            },
            "created": "2022-06-07T22:21:03+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "272345d2-97f6-4cac-988d-697577b01d5f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/272345d2-97f6-4cac-988d-697577b01d5f",
            "title": "Apple Platformエンジニアとして、そして父親として",
            "abstract": "iOSエンジニアとして、Apple プラットフォームエンジニアとしてそろそろ10年が経とうしてしています。\r\nそして私は2人の娘と５歳の発達障害の息子を持つ父親でもあります。日々進化し続ける開発技術についていけず悩む日々でもあります。\r\nコロナ禍においてリモートワークが導入され柔軟な働き方ができるようになり、家族とより近くなりありがたくも大変なこともあるようになりました。\r\n私以外にも激動の日々を送る方がいらっしゃると思います。悩みつらみがありつつソフトウェアエンジニアとして壁を乗り越えることの難しさや、その中でSwiftや開発者コミュニティに提供できるものとは何なのかについてお話します。",
            "accepted": false,
            "speaker": {
                "name": "杉本 至",
                "kana": "スギモト　イタル",
                "twitter": "itaru_sugimoto",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/dd6e53fc-62e7-46c7-b797-e9edca46dcee.png"
            },
            "created": "2022-06-07T22:27:19+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "ed9f1a4a-8cad-4292-8dde-c856b0950c85",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/ed9f1a4a-8cad-4292-8dde-c856b0950c85",
            "title": "swizzlingではじめるコードリーディングのすすめ",
            "abstract": "swizzlingと聞くと、「ああ、使い道のない変な機能」と思われるかもしれません。\r\n実際swizzlingでぐぐると「共通の処理を実装する」とか「共通処理を差し込む」といった文脈で説明されることが多いです。\r\n\r\nこのLTでは、実装ではなく、コードリーディングに用いることで処理の流れを容易に掴むことができ、ソースコードの理解が効率化される事例を紹介したいと思います。",
            "accepted": false,
            "speaker": {
                "name": "k2moons",
                "kana": "ケーツームーンズ",
                "twitter": "beowulf_tech",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/578e3c80-1f3a-468d-8e84-b84a91bdb191.jpg"
            },
            "created": "2022-06-07T22:27:55+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "cb34295e-4553-4ff4-9de6-b368c00ec2eb",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/cb34295e-4553-4ff4-9de6-b368c00ec2eb",
            "title": "タイトなスケジュール下で行う爆速開発術",
            "abstract": "開発期間に余裕がないとき、細かいアニメーションはバッサリ切り捨てられることが多いかと思います。そして、チケットには「2次リリースで対応」なんてメモを残して実装されることはなかった…なんて現象に遭遇したことはありませんか？\r\nこのような経験を元に、新機能を3ヶ月という短期間で集中開発した際に培ったノウハウを伝授いたします。\r\n\r\n・Moya 利用時の Stub 活用術\r\n・XcodePreviews 活用術\r\n・アニメーション処理の共通化術\r\n\r\nまずは、バックエンド開発待ちという状態ゼロを実現させます。次に、XcodePreviews を利用することで、頻度高くレイアウト・アニメーションをデザイナー確認できる環境が整います。\r\n最後に、共通化によってアプリ全体で統一した操作感に仕上げることが可能となります。\r\n\r\nAkkeyLab の原稿ともリンクしていますので、明日からでも実践・成果を実感していただけます！",
            "accepted": false,
            "speaker": {
                "name": "AkkeyLab",
                "kana": "アッキーラボ",
                "twitter": "AkkeyLab",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/34c44ff4-7d0f-4e23-b783-13538313cf72.jpg"
            },
            "created": "2022-06-07T22:40:14+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "0391b9d1-5a3e-4f73-8591-5c4de0526946",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/0391b9d1-5a3e-4f73-8591-5c4de0526946",
            "title": "Swift以外使ってはいけないiOSアプリ開発",
            "abstract": "え？Swift以外使わないのは当たり前じゃね？って思ってるあなた、環境構築やCI\/CDのこと忘れてるかな？\r\n\r\nそう、これまで我々は周辺技術としてRubyやZshをたくさん使ってきました。でも安全性が高いSwiftに慣れてきた我々は、やはりSwift使いたいですよね！\r\n\r\nというわけで、この発表はSwiftだけで環境構築やCI\/CDスクリプトを書く方法をお伝えします！",
            "accepted": false,
            "speaker": {
                "name": "星野恵瑠",
                "kana": "ホシノエル",
                "twitter": "lovee",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/67c36f78-2328-4466-9772-b3df84b4a26b.jpg"
            },
            "created": "2022-06-07T23:15:39+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "38dd500c-5e65-494c-bb35-16a72eaf33ea",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/38dd500c-5e65-494c-bb35-16a72eaf33ea",
            "title": "サポートiOSバージョンを定期的にあげる仕組みづくり",
            "abstract": "サポートOSバージョン、どんどんあげていきたいですよね？\r\nしかし、サポートバージョンを減らすとユーザーも減るため、プロダクトオーナーに渋られることもよくあります。\r\n\r\n加えて、開発の現場では「サポートOSバージョンあげたいけど、結構気合で解決できるし……」というエンジニアと、\r\n「エンジニアから要望も来ないから、あげなくてもいいか」というプロダクトオーナーという、お見合い状態になることもあります。\r\n実はサポートOSバージョンをあげてもよさそうなのに、キッカケがない……そんなことはありませんか？\r\n\r\nこのトークではこういった課題を解決するため、\r\n・アクティブユーザーのOSバージョン割合で判断するのは悪手！？本当に見るべき指標\r\n・定期的にサポートOSバージョンアップを検討できるキッカケの仕組み\r\nについて話します。\r\n\r\nこのトークが皆さんのアプリのサポートOSバージョンアップにつながると嬉しいです。",
            "accepted": true,
            "speaker": {
                "name": "FromAtom",
                "kana": "フロムアトム",
                "twitter": "FromAtom",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/9ad70c3d-3047-4ee0-addf-fd6a7cef90f3.jpg"
            },
            "created": "2022-06-07T23:15:42+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T16:00:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "371e874b-c24a-4388-897a-444721a05b4b",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/371e874b-c24a-4388-897a-444721a05b4b",
            "title": "iPhoneでサッカースタジアムをスキャンしVPSを動作させるには",
            "abstract": "Visual Positioning Systemは周りの風景の情報を元に現実空間の中で自身の位置を特定する技術です。\r\n\r\n私はサッカーJ2リーグの町田ゼルビアのホームスタジアム「町田GIONスタジアム」にて\r\niPhoneで数百枚画像撮影して点群作成し、VPS機能を用いてAR表現を実現しました。\r\n\r\n- Immersal での点群作成\r\n- 実際のスキャンの様子\r\n- 数回の実作業を経て得た生成物\r\n- VPSを用いて実現したAR表現\r\n\r\nそもそもiPhoneでスタジアムに立ち向かえるのか！\r\n\r\nスタジアムでの現地作業という貴重な経験から得た知見を共有し、そこでどんな表現が実現できたのか画像と映像と共に熱く解説します。\r\n",
            "accepted": true,
            "speaker": {
                "name": "服部 智",
                "kana": "ハットリ サトシ",
                "twitter": "shmdevelop",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/cb749312-75d9-4dbe-8fe9-01f297722d67.jpg"
            },
            "created": "2022-06-07T23:16:00+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T15:35:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "4716b79c-e82d-4870-8bd4-33ecf9380dee",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/4716b79c-e82d-4870-8bd4-33ecf9380dee",
            "title": "脱Rubyのススメ",
            "abstract": "iOSアプリ開発の周辺技術としてRubyは非常に人気な言語です。パッケージ管理のCocoaPods、静的検査のDanger、そしてCI\/CDスクリプトのfastlaneなどなど、Rubyは幅広く使われています。\r\n\r\nしかし初心者にとってRubyも一つの鬼門なのです。たとえば誰でもPermission Denied問題に一度は会ったことあるでしょう。右も左も分からない初心者がネットで検索するとすぐ「sudoすれば上手くいくよ」と悪魔の囁きを目にします。怖いですね。\r\n\r\nというわけでRubyを開発過程から排除できないか？誰でも簡単にできるより安全な環境構築の仕方ないか？この発表はその脱Rubyの仕方をお伝えします。",
            "accepted": false,
            "speaker": {
                "name": "星野恵瑠",
                "kana": "ホシノエル",
                "twitter": "lovee",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/67c36f78-2328-4466-9772-b3df84b4a26b.jpg"
            },
            "created": "2022-06-07T23:16:52+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "5795f8fa-a5c1-4438-9c71-be43208e0da9",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/5795f8fa-a5c1-4438-9c71-be43208e0da9",
            "title": "Carthageのビルド時間を爆速に！〜Rome導入のススメ〜",
            "abstract": "Carthageでビルドしたframeworkを共有キャッシュとしてS3などで管理できるツールのRomeがついにXCFrameworkにも対応しました。\r\nSwift Package Manager対応のライブラリも増えてきていますが、まだまだCarthageを利用されている方もいると思います。\r\n\r\n今回はRomeに関する以下の内容について、具体的な設定ファイル、スクリプトコードを用いて説明します。\r\n\r\n・共有キャッシュの導入することでビルド時間をどれだけ短縮できるか\r\n・XCFrameworkを共有キャッシュとして、S3およびローカルドライブで管理する方法\r\n・（現状のリリース版に残っている）Romeのバグに遭遇した際の対応方法",
            "accepted": false,
            "speaker": {
                "name": "Shingo Takagi",
                "kana": "タカギ シンゴ",
                "twitter": "zizi4n5",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7366e828-cb20-444f-97bf-785d5a6ebf3e.jpg"
            },
            "created": "2022-06-07T23:16:57+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "83726183-76ad-4af8-a7b3-7922672d650f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/83726183-76ad-4af8-a7b3-7922672d650f",
            "title": "Swiftlaneの布教",
            "abstract": "みなさん、証明書管理やデプロイなど何使ってます？やはりFastlane？ですよねーFastlane便利ですもんね\r\n\r\nでもFastlaneはRubyで書かないといけないからそこ大変ですよね、Rubyは型が保証されないから使うときドキドキするし、初心者がそもそもRubyの導入で躓きやすいので。\r\n\r\nというわけでSwiftlaneを使ってみてはいかが？我々iOSエンジニアが使い慣れてるSwiftで書けるからとっても書きやすいですよ！はいこの発表はSwiftlaneの布教です！",
            "accepted": false,
            "speaker": {
                "name": "星野恵瑠",
                "kana": "ホシノエル",
                "twitter": "lovee",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/67c36f78-2328-4466-9772-b3df84b4a26b.jpg"
            },
            "created": "2022-06-07T23:17:57+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "1fad0de6-cebd-46b7-9f03-f9d424bb4154",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/1fad0de6-cebd-46b7-9f03-f9d424bb4154",
            "title": "Danger-Swiftはいいぞ",
            "abstract": "チーム開発を経験されてるあなた、「静的チェック」は聞いたことあるでしょうか？そう、CIを回す時に、Lintを適用するとか、スペル確認を行うとか、そう言った機械的なチェックを行うことです。\r\n\r\nそしてある程度の経験がある方でしたら、DangerというRuby制のツールを聞いたことある、あるいは今でも使っている方もいらっしゃるではないでしょうか。\r\n\r\n実はそのDanger、本来はRubyでスクリプトを書かないといけないですが、Swiftでスクリプトを書くDanger-Swiftも存在しているんですよ！\r\n\r\nこの発表はSwift信者として、そのDanger-Swiftの良さを全力で伝えたいと思います！",
            "accepted": false,
            "speaker": {
                "name": "星野恵瑠",
                "kana": "ホシノエル",
                "twitter": "lovee",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/67c36f78-2328-4466-9772-b3df84b4a26b.jpg"
            },
            "created": "2022-06-07T23:19:07+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "fe8b8393-94fe-41ef-88e1-df3c485e54cf",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/fe8b8393-94fe-41ef-88e1-df3c485e54cf",
            "title": "F**king SwiftUI",
            "abstract": "Storyboard辛い！Auto Layout難しい！でもSwiftUIのおかげでこれらとおさらばだ！！\r\n\r\nそんな甘い思い、私にもありました…まさに若さゆえの過ち…\r\n\r\nそう、SwiftUIがリリースして3年経った今でも、まだ我々はレイアウトのナイトメアから解放されていません…\r\n\r\nこのLTは、そのSwiftUIのあるあるな罠を紹介し、そしてそれらの回避策をお伝えしたいと思います！",
            "accepted": false,
            "speaker": {
                "name": "星野恵瑠",
                "kana": "ホシノエル",
                "twitter": "lovee",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/67c36f78-2328-4466-9772-b3df84b4a26b.jpg"
            },
            "created": "2022-06-07T23:19:37+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "3d48b52d-2334-4a65-814e-a6a1aa2e4bea",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/3d48b52d-2334-4a65-814e-a6a1aa2e4bea",
            "title": "F**king SwiftUI",
            "abstract": "Storyboard辛い！Auto Layout難しい！でもSwiftUIのおかげでこれらとおさらばだ！！\r\n\r\nそんな甘い思い、私にもありました…まさに若さゆえの過ち…\r\n\r\nそう、SwiftUIがリリースして3年経った今でも、まだ我々はレイアウトのナイトメアから解放されていません…\r\n\r\nこの発表は、そのSwiftUIにまつわってよくある落とし穴やぶつかりやすい壁を紹介し、それらの理由と正しい回避策をお伝えしたいと思います！",
            "accepted": false,
            "speaker": {
                "name": "星野恵瑠",
                "kana": "ホシノエル",
                "twitter": "lovee",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/67c36f78-2328-4466-9772-b3df84b4a26b.jpg"
            },
            "created": "2022-06-07T23:20:09+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "dfacc8a7-b9ff-4603-80a4-6d6d980edd04",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/dfacc8a7-b9ff-4603-80a4-6d6d980edd04",
            "title": "バックエンド未経験のiOSエンジニアが、主流のServer Side Swiftのフレームワークを一通り試してみた",
            "abstract": "みなさんご存知の通り、Swiftはオープンソースになってから、すでに汎用目的のプログラミング言語としてある程度の発展を遂げてきました。特にサーバサイドでの利用は意外と探せばメジャーなプロダクトでも採用例があったりします。\r\n\r\nところがServer Side Swiftを始めたい時、フレームワークを選ぶ必要がありますが、アップル謹製のいわゆるファーストパーティーライブラリーは存在しないため、複数あるサードパーティーライブラリーから選定する必要があります。\r\n\r\nさて、一体どのフレームワークが一番私に適しているかな？一番熱いVapor？一番大きな会社がバックしてるsmoke-framework？それとも一番老舗であるPerfect？\r\n\r\nこのLTはこれらのフレームワークを一通り試してみた感想を伝えたいと思います！",
            "accepted": false,
            "speaker": {
                "name": "星野恵瑠",
                "kana": "ホシノエル",
                "twitter": "lovee",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/67c36f78-2328-4466-9772-b3df84b4a26b.jpg"
            },
            "created": "2022-06-07T23:20:41+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "5fed6462-a7dc-44c6-aa74-1be9a63f769c",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/5fed6462-a7dc-44c6-aa74-1be9a63f769c",
            "title": "BitriseからXcode Cloudに移行してみた",
            "abstract": "アプリのCIサービスとしてBitriseはそれなりに定着してきてますが、アップル自身もXcode Cloudをベータリリースしており、そして~~今年正式リリースされると予想されます~~本日のWWDCで正式リリースしました。\r\n\r\nちょうどBitriseが料金体系を改訂して従量課金しかなくなったからトライ＆エラーのコストが高くなるからメリットが非常に薄くなるし、何よりアップル本家が作っているという安心感（？）。\r\n\r\nというわけで、これまでBitriseで回してたプロジェクトを、試しにXcode Cloudに移行してみたので、その過程をみなさんと共有したいです！",
            "accepted": false,
            "speaker": {
                "name": "星野恵瑠",
                "kana": "ホシノエル",
                "twitter": "lovee",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/67c36f78-2328-4466-9772-b3df84b4a26b.jpg"
            },
            "created": "2022-06-07T23:21:12+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "439fbafa-9acf-4e29-a3c1-9653d2040617",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/439fbafa-9acf-4e29-a3c1-9653d2040617",
            "title": "「ディープリンク入れてみてよ。もちろんiOSとAndroid両方で動かしてね」",
            "abstract": "ディープリンクは、ブラウザや他のアプリからターゲットとなるアプリへのシームレスな遷移のために重要な技術ですが、まとまった情報が意外なほどありません。\r\niOS \/ Androidのアプリをディープリンクに対応させるときに悩んだことと、それにどう対処したかについてお話しします。\r\n\r\n* ディープリンクを使ってどういったことができるか\r\n* ディープリンクをiOS\/Androidで実装するための技術の紹介（Custom URL scheme \/ Universal Links \/ App links）と、それらの違い\r\n* 実際にアプリに活用する際にどういうリンク設計にすべきか？その際の考慮点",
            "accepted": false,
            "speaker": {
                "name": "Shuhei Shogen",
                "kana": "ショウゲンシュウヘイ",
                "twitter": "lethe2211",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/0a68ee48-8cbd-4ce6-95b5-a6b168f3e561.jpg"
            },
            "created": "2022-06-07T23:23:45+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "1730b968-d50f-40fd-b445-f44a106b6c29",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/1730b968-d50f-40fd-b445-f44a106b6c29",
            "title": "入門 SwiftUI Alignment Guide",
            "abstract": "SwiftUIは細かく指定しない限り簡潔にレイアウトを記述できることも多い一方で、\r\nAuto Layoutでは簡単にできていたことが意外と難しかったり、そもそも実現が困難なケースもあります。\r\n\r\nこのトークでは、VStackやHStackで単にleadingやtopなどを指定するだけでは\r\n実現が難しいレイアウトを攻略するために有効なAlignment Guideについて、次のステップで学ぶことができます。\r\n\r\n1. Alignmentの概念および挙動についての基礎\r\n2. alignmentGuide(_:computeValue:)の理解と利用方法\r\n3. Custom Alignmentの実践的な使い方と制約\r\n\r\n想定する対象者\r\n* SwiftUIをなんとなく書けるようになってきた人\r\n* alignmentGuideやCustom Alignmentを使ったことがないor使い方がよくわからない人",
            "accepted": true,
            "speaker": {
                "name": "monoqlo",
                "kana": "モノクロ",
                "twitter": "monoqlo",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3365f134-e5a1-43c7-a11c-7a0ba0594265.jpg"
            },
            "created": "2022-06-07T23:23:52+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-11T13:35:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "2ac9744c-84d7-4318-8aeb-fc4fd13f8755",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/2ac9744c-84d7-4318-8aeb-fc4fd13f8755",
            "title": "シャンパンコールで覚えるXcode Project Settings",
            "abstract": "Xcode Project の Build Settings に潜む知っておきたいけどよく知らないそんなプロパティや Valueについてコールしまくります！\r\nKernel!Module!Bundle Loder!Build!Assets!Strip!Swift!Symbol!グイグイヨシコイ！🍾\r\n",
            "accepted": false,
            "speaker": {
                "name": "杉本 至",
                "kana": "スギモト　イタル",
                "twitter": "itaru_sugimoto",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/dd6e53fc-62e7-46c7-b797-e9edca46dcee.png"
            },
            "created": "2022-06-07T23:23:55+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "0970265f-664c-4626-848e-4c86f1efa94f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/0970265f-664c-4626-848e-4c86f1efa94f",
            "title": "watchOSにおけるバックグラウンドタスクの限界",
            "abstract": "Appleが提供している中で最もバックグラウンドタスクが重要なプラットフォーム、それがwatchOSです。\r\n操作は両腕を上げる必要があるので短時間で済ませたいですし、ワークアウトのような長時間のタスクはそもそも待っていられません。\r\n\r\nそんなwatchOSのバックグラウンドタスクは2016年に開発者へ解禁されて早6年、日々進歩してきました。\r\nwatchOS 9でも新しい機能が追加されるようで、更なる進化が期待できます。\r\n\r\n本セッションでは以下のテーマについてお話しすることで、今のwatchOSアプリでどこまで出来るのかを理解する手助けになればと思います。\r\n\r\n- バックグラウンドでできること、できないこと\r\n- 端末の世代やバッテリー残量などの環境によって受ける影響\r\n- どのようにバックグラウンドタスクを設計すべきか\r\n- watchOS 9から追加される新機能",
            "accepted": true,
            "speaker": {
                "name": "yamannnu",
                "kana": "ヤマンヌ",
                "twitter": "_yamannnu",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/e5513d7c-80a0-40c9-b2ae-3380e9a15e81.jpg"
            },
            "created": "2022-06-07T23:25:44+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-12T14:30:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "ff54d3b4-6c87-4925-b530-5ca0c0031f81",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/ff54d3b4-6c87-4925-b530-5ca0c0031f81",
            "title": "これから iOS アプリを開発する人のためのロードマップ",
            "abstract": "様々な developer 向けのロードマップを公開している roadmap.sh \r\nここにはなぜか iOS developer 向けのロードマップが存在しません。これとは別に 2018年に reddit に投稿されたロードマップが存在し、これがよくできているのですが、4年も前なので、 Objective-C, UIKit, DispatchQueue に関しては、 Swift, SwiftUI, Concurrency と置き換わるものが有力になってきていて、こういった変遷を反映したロードマップを提案したいです。\r\n\r\n本トークでは、以下の観点からお話ししようと思っています。\r\n- これから iOS アプリを開発する人には、スキル習得のためのロードマップの紹介\r\n- 今まで iOS アプリ開発に携わってきた人には、これまでの知見をロードマップへ是非フィードバックして欲しいというお誘い",
            "accepted": false,
            "speaker": {
                "name": "川島慶之",
                "kana": "カワシマヨシユキ",
                "twitter": "ykws__",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3f93f9ad-f173-4e72-9035-9ae6571554ab.jpg"
            },
            "created": "2022-06-07T23:32:44+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "28a7ecff-a0f1-40c9-80a5-b8ed2fb0fd94",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/28a7ecff-a0f1-40c9-80a5-b8ed2fb0fd94",
            "title": "ウーニャ、しってる。みんなふんいきでSwiftUIをつかってる。",
            "abstract": "SwiftUIでViewを構築するのは難しいです。\r\n\r\n何も考えずに書くとクソデカViewになります。\r\n複数のViewに分割する場合も、プロパティやメソッドに切り出すのがいいか、構造体を定義するのがいいか迷います。\r\n\r\nViewの命名も迷います。\r\nAtomic Designに沿うのもいいですが、iOSと馴染めない気がします。\r\nUIKitに近い命名はわかりやすいですが、SwiftUIではスマートでないと感じます。\r\n\r\n---\r\n\r\n「いきなりぐちってごめんなさい。ウーニャほんとはSwiftUIとなかよくしたいです…！」\r\n\r\nこのトークは、ウーニャ（私）とみんながSwiftUIのViewの分割と命名について一緒に考えます。\r\nまずはウーニャがViewの分割や命名の考え方を話すので、それについてコメントを頂き、議論してよりいいViewの構築を考えます。\r\n\r\nかなりふあんですが、だいじょうぶます。がんばるます。",
            "accepted": true,
            "speaker": {
                "name": "uhooi",
                "kana": "ウホーイ",
                "twitter": "the_uhooi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ef3805a0-b669-493a-9cae-f5ecad9e67e5.jpg"
            },
            "created": "2022-06-07T23:33:31+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-10T17:15:00+09:00",
                "length_min": 40
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "3a466fb6-b445-4e44-8f5f-b57b7e5b44dc",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/3a466fb6-b445-4e44-8f5f-b57b7e5b44dc",
            "title": "シーンに応じた使いやすいQRコード読み取り機能を実装しよう",
            "abstract": "iPhoneが登場して以降、QRコードを読むという行為はありふれた行為となりました。\r\n\r\niOSにおいては\r\n- 古くからカメラからのインプットを扱えるAVFoundationを用いて\r\n- 新しくは画像解析フレームワークであるVisionを用いて\r\nQRコードを読むという機能は比較的簡単に実現できます。\r\n\r\nしかし、QRコードを読み込むシーンというのはアプリによって様々です。\r\n\r\n例えば\r\n- １つのQRコードをしっかり読み込みたい\r\n- リッチな表現でQRコードを読み込みたい\r\n- 夜や倉庫の中といった暗い場所でもQRコードを読み込みたい\r\n- 連続で複数のQRコードを読み込みたい\r\nなどなど。\r\n\r\n本セッションではシーンに応じてQRコードを気持ちよく読み取るためにした工夫をお話します。\r\n頻繁に使う機能だからこそ体験の良いQRコード読み込みを実現していきましょう！",
            "accepted": true,
            "speaker": {
                "name": "jollyjoester",
                "kana": "ジョリージョースター",
                "twitter": "jollyjoester",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/168f75c2-f936-428d-868c-c5d05284e811.jpeg"
            },
            "created": "2022-06-07T23:36:17+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-12T11:25:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "6bafac07-06f1-4846-964e-78dccfb29185",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/6bafac07-06f1-4846-964e-78dccfb29185",
            "title": "モバイルアプリのオブザーバビリティを向上させるプラクティス",
            "abstract": "近年、SRE（Site Reliability Engineering）の手法をアプリケーションにまで拡大しようといった動きが盛んです。\r\n\r\nしかし、実際にモバイルアプリの可観測性≒オブザーバビリティを向上させるためには、ネイティブエンジニアの専門性が求められる場面が多く、あまり実際に効果のあった事例が共有されていないように感じます。\r\n\r\nこのトークでは\r\n- アプリ内で計測される指標を用いてSLI \/ SLOを構成する\r\n- アプリ内でのレスポンスのパースエラー検知\r\n- 問い合わせ調査のオブザーバビリティ向上\r\n- 外部SNSの認証サービスの障害検知\r\n- App Store Connect API 、MeticKitの活用\r\n\r\nといった実際にチームで効果のあったプラクティスを紹介したいと思います。",
            "accepted": true,
            "speaker": {
                "name": "nade",
                "kana": "ナデ",
                "twitter": "kazuma_nagano",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3f587a64-1564-4b37-8d68-f6c31767fbb3.jpg"
            },
            "created": "2022-06-07T23:40:10+09:00",
            "timetable": {
                "track": "Track E",
                "starts_at": "2022-09-12T11:25:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "935af101-7655-4d6e-a708-e5dcba976aa8",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/935af101-7655-4d6e-a708-e5dcba976aa8",
            "title": "今更だけどUIKitで型パラメータのインジェクトを利用してViewのレイアウトをしてみよう",
            "abstract": "似たようなレイアウトのViewがいくつかあった場合に、どのように実装しますか？\r\nenumでtypeを定義してtypeごとにレイアウトを分岐したり、ベースクラスを作ってサブクラス側でレイアウトに必要な処理を行なったりなど、様々な実装方法があるかと思います。\r\n\r\n本トークでは、実際にサービスで運用されているデザインを題材に、型パラメータのインジェクトを利用したViewのレイアウト方法についてお話します。\r\n他のレイアウト方法とは、どういった違いがあるかなどもお話できればと思います。",
            "accepted": true,
            "speaker": {
                "name": "marty-suzuki",
                "kana": "マーティスズキ",
                "twitter": "marty_suzuki",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/2e83ba6e-5bde-4c77-ac01-2e41381009c6.jpg"
            },
            "created": "2022-06-07T23:46:11+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-12T16:15:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "ae6ff1d3-0777-4804-9407-5a081fba313d",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/ae6ff1d3-0777-4804-9407-5a081fba313d",
            "title": "バックポートして学ぶ新APIの仕組み",
            "abstract": "Appleプラットフォームのアップデートは、一部を除き、最新OSのみに提供されます。\r\nせっかく待望の新機能が登場しても、サポートOSポリシーによっては、使えるのは数年後...\r\nならば、自分で作って、来たる日に備えましょう。\r\n実現する上での難易度は高いものかもしれませんが、多くは既存の仕組みを組み合わせることで、ソフトウェアとして解決できるはずです。\r\n自分でバックポート実装を作ってみれば、新API、その周辺の仕組みについて熟知することができます。\r\n\r\nこのトークでは、2021年に登場したSwiftUI.AsyncImageを、すべてのSwiftUI環境にバックポートした経験を題材に、知見を話します。\r\n\r\n* 新APIの調べ方\r\n* バックポート実装のTips\r\n* メンテナンスする上での難点",
            "accepted": true,
            "speaker": {
                "name": "Yutaro Muta",
                "kana": "ムタユウタロウ",
                "twitter": "yutailang0119",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/4ee5d10c-b08a-4bcd-82fd-df4404ab923c.jpg"
            },
            "created": "2022-06-07T23:48:26+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-11T16:15:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "e9f098dd-3310-4f3d-98ae-57166d2194d5",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/e9f098dd-3310-4f3d-98ae-57166d2194d5",
            "title": "Object CaptureのためにM1 Macbook Airを買った人🙋‍♂",
            "abstract": "WWDC21で発表されたObject Capture、皆さん触りましたか？\r\n当時私はObject Captureのために家庭内稟議(YAuth)を通してM1チップ搭載MacBook Airを買いました！\r\n\r\n本LTでは発表から1年が経つApple純正フォトグラメトリ機能であるObject Captureを今改めて振り返ります。\r\nObject Captureの実例として、実際に出力した様々なUSDZファイルをご用意しました。\r\nLT中にお手元のスマートフォンを使ってARでお試しいただきます！",
            "accepted": false,
            "speaker": {
                "name": "HEAVEN chan \/ ikkou",
                "kana": "イッコウ",
                "twitter": "ikkou",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/6a65f059-8be6-4a25-96fd-51841bbb8f28.jpg"
            },
            "created": "2022-06-07T23:58:36+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "83b1dd15-4e0d-44f3-9774-63c9cc427f89",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/83b1dd15-4e0d-44f3-9774-63c9cc427f89",
            "title": "5分で分かるXcode File Template",
            "abstract": "開発を進めているといつも決まったボイラープレートを書いていることがありませんか？\r\nそこでXcode File Templateの出番です。\r\nこのLTではXcode File Templateを利用してコードを自動生成し開発効率をアップさせる方法について話します。\r\n\r\n- テンプレートの作り方\r\n- チームでのテンプレートのシェア\r\n- SwiftPMから利用するときのtips\r\n\r\nこのLTがみなさんの開発効率向上につながれば幸いです。",
            "accepted": false,
            "speaker": {
                "name": "TAKEDA Yuki",
                "kana": "タケダ ユウキ",
                "twitter": "0__1_tea",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/fefc55c0-c29b-4bcb-ab93-ff842f77eafe.jpeg"
            },
            "created": "2022-06-07T23:59:41+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "c6006a2e-f3d6-4493-82a8-3223d9046a1c",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/c6006a2e-f3d6-4493-82a8-3223d9046a1c",
            "title": "String Interpolationを知ると世界が平和に",
            "abstract": "多くのプログラミング言語に備わる機能 \"String Interpolation\" は、一般的には変数をプレースホルダーに展開する機能です。\r\nしかし、Swiftでは、ある秘密が隠されていたのです！\r\nそう、Swift実装では開発者に拡張手段が提供されていて、高度で静的な文字列操作を可能にします。\r\nさらに、SwuiftUI.Textの機能が充実したことで、近年では単純なStringとしての表現を超え、活躍の幅は広がっています。\r\nこのトークでは、文字列操作としての典型的な使用方法から説明し、SwiftUI.Textと組み合わせた便利な活用方法を紹介します！",
            "accepted": false,
            "speaker": {
                "name": "Yutaro Muta",
                "kana": "ムタユウタロウ",
                "twitter": "yutailang0119",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/4ee5d10c-b08a-4bcd-82fd-df4404ab923c.jpg"
            },
            "created": "2022-06-07T23:59:59+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "4d859d45-7ac1-4a62-b3e2-88465d9f559c",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/4d859d45-7ac1-4a62-b3e2-88465d9f559c",
            "title": "今こそCombine",
            "abstract": "CombineはiOS13から登場した時間変化による値の変化を処理するための宣言的なAPIを提供するフレームワークです。\r\n\r\n今秋にはiOS16が登場し、iOS14以上をサポートできるアプリも多くなった昨今。\r\nCombineは新しい技術ではなく、当たり前の技術となりました。\r\n\r\n一方コミュニティを見回すと、当たり前のようにCombineを使いこなす層とまだまだCombineの勘所を得ることができない層との間に断絶があるように感じます。\r\n\r\nSwiftUIとも密接な関係があり、せっかくのApple標準のフレームワークであるCombineを覚えないのはもったいない！\r\nということで、興味がある方みんながCombineに入門できるようなトークをしたいと思います。\r\n\r\n本トークでは概念を頭で理解するというより、ちょっとずつステップを踏むことで「手を動かしていったら自然に理解が進んだ」を目指します。",
            "accepted": false,
            "speaker": {
                "name": "jollyjoester",
                "kana": "ジョリージョースター",
                "twitter": "jollyjoester",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/168f75c2-f936-428d-868c-c5d05284e811.jpeg"
            },
            "created": "2022-06-08T00:00:03+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "e97bfff0-8987-45a5-b299-bfaa5f9b8e9e",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/e97bfff0-8987-45a5-b299-bfaa5f9b8e9e",
            "title": "Firebaseを利用したサーバーレス開発への招待",
            "abstract": "Firebaseには、NoSQL DBのCloud Firestoreやバックエンドコードを実行可能なCloud Functionsといった機能を備えており、インフラのことをほぼ意識せずとも、サーバーレスなアプリを立ち上げられる他、クライアントに提供されているSDKを利用し、クライアント間でのデータ同期や、オフラインデータの永続性といったアプリの体験に寄り添った機能を享受できます。\r\n\r\n一方、DBはスキーマレスであることや、クライアントから直接DBにアクセスするなど、馴染みがない仕組みも多く、仕様や特徴を踏まえた開発を行わないと、セキュリティやユーザー体験に悪影響を及ぼしたり、負債となる要因になり得ます。\r\n本セッションでは、クライアントエンジニアのみのチームでサーバーレス開発を行う中で見えてきた、効果的にFirebaseを利用する方法を事例と合わせて紹介します。",
            "accepted": false,
            "speaker": {
                "name": "中野 湧仁",
                "kana": "ナカノ ユウト",
                "twitter": "yuto_nakano44",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/48fc1b3d-f5d5-46a1-946b-b80a7d7ede45.jpg"
            },
            "created": "2022-06-08T00:00:18+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "770f5816-c672-48f2-abf9-4b342e2dd75f",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/770f5816-c672-48f2-abf9-4b342e2dd75f",
            "title": "人はなぜ車輪の再発明をするのか",
            "abstract": "既にOSSで公開されているライブラリや、実装済みの機能を使わずに自前で実装することを車輪の再発明と言います。\r\nそれはしばしば時間の無駄と思われがちですが、どんなに使い込まれたライブラリでもメンテナンスされなくなったら終わりです。\r\n\r\n本LTでは、2年ほどメンテナンスが放置されたライブラリを捨てる為に自前でライブラリを再実装した際の知見をお話します。",
            "accepted": false,
            "speaker": {
                "name": "417.72KI",
                "kana": "シイナナツキ",
                "twitter": "417_72ki",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/0668ee6a-114e-4dfa-a4a4-c2118b208c31.jpg"
            },
            "created": "2022-06-08T00:00:46+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "9d2c6dd5-46d8-4cdc-9bab-89dd989d5bd4",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/9d2c6dd5-46d8-4cdc-9bab-89dd989d5bd4",
            "title": "詳しく知りたい Core Animation 〜おかわり自由編〜",
            "abstract": "正直なところ Core Animation は私にとって、何度も解説を見聞きしたのに、理解した気になれない技術でした。\r\n\r\niOS歴10年目に入ろうという昨年末、私はAppleの公式ドキュメントと対峙することが出来ました。\r\nこの技術と決着をつけるためです。\r\n\r\n時間の許す限り調査し検証した結果である記事「詳しく知りたいCore Animation レイヤー編」「アニメーション編」を\r\n自身のブログをに公開したところ、ツイッターなどで「わかりやすい」などのリアクションを頂くことが出来ました。\r\n\r\nこの発表では、Core Animation 紙面上の都合で記事からカットした部分、SwiftUIやUIViewでのAPIとの比較、基礎知識や応用例など、よりブラッシュアップした内容をお届けしたいと思います。\r\n\r\nおかわりは自由です。",
            "accepted": false,
            "speaker": {
                "name": "Teruto Yamasaki",
                "kana": "テルト ヤマサキ",
                "twitter": "snoozelag",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/adb7a7a5-e8df-42c6-b3e1-b0a23f8d9c18.jpg"
            },
            "created": "2022-06-08T00:02:04+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "fd1590f6-3f30-4fd6-b277-dc2f4642d7d6",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/fd1590f6-3f30-4fd6-b277-dc2f4642d7d6",
            "title": "夜中に いきなりさぁ いつ使われるのってChart",
            "abstract": "ネイティブではもう無理だと 諦めていたのにどうしたの？\r\n\r\nあの頃 僕達はさ 何でもできる気がしてた\r\n2軸で表を描いては たくさん点を打ったね\r\n\r\nでも見てよ今の僕を クズになった僕を\r\nChart.jsをWebViewで見せても 何も感じ取れなくてさ\r\n\r\n別にChartを求めてないけど 急に出されると思い出す\r\nラインチャート（折れ線グラフ）&バーチャート（棒グラフ）の そのグーラフのせいだよ\r\n\r\n---\r\n\r\nこのトークでは、WWDC22で発表されたSwift Chartsフレームワークについて話します。\r\nまだ発表直後でベータ版ですが、できる限り様々なチャートを触り、見た目や使い方などを紹介します。",
            "accepted": false,
            "speaker": {
                "name": "uhooi",
                "kana": "ウホーイ",
                "twitter": "the_uhooi",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ef3805a0-b669-493a-9cae-f5ecad9e67e5.jpg"
            },
            "created": "2022-06-08T00:16:02+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "07999276-0624-4cb1-860d-8cf845e546c2",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/07999276-0624-4cb1-860d-8cf845e546c2",
            "title": "神速iOSDC〜6年分〜",
            "abstract": "みなさんが初めて参加したiOSDCはいつでしょうか。\r\n私が初めて参加したiOSDCは2018年のものでした。\r\n\r\n初参加の2018年からiOS・Swift界隈のトレンドや新しい技術は目まぐるしく変化し、私が初めて参加した年からは想像もできないような進化を遂げています。\r\n\r\nところで、iOSDCにはYouTube公式チャンネルがあり、iOSDC2016からのセッション動画をなんと無料で視聴することができます。\r\n\r\nこのトークではiOSDCチャンネルにあげられている458本の動画を踏まえ、これまで6年分のiOSDCを5分に凝縮し、オフライン開催が戻ってきた今だからこそ、神速で振り返りを行っていきたいと思っています。\r\nこのトークを聞くことで、iOS・Swift界隈のトレンドを振り返るとともに、6年分のiOSDCの思い出を一気に蘇らせることを約束します。",
            "accepted": true,
            "speaker": {
                "name": "Roku",
                "kana": "ロク",
                "twitter": "66nylon_y",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/df3f45a0-9151-4f44-890e-f7eff2c22786.jpg"
            },
            "created": "2022-06-08T00:27:41+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-11T15:10:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "77788c1a-1a8e-4c5d-a4ab-ad649c145d1c",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/77788c1a-1a8e-4c5d-a4ab-ad649c145d1c",
            "title": "3歳児とiPadとわたし",
            "abstract": "子育て4年目。\r\n\r\n3年以上前、Apple純正ロンパースを着ていた小さな👶はすくすく育ち、\r\n今ではiPadを自由自在に操れるようになり、幼児向けアプリに限らずいろんなアプリを楽しめるようになってきた。\r\n一方で「なるほど、こういうUIだとわからなくなって泣いちゃうのか」という場面に遭遇することも。\r\n\r\nそんな日々微笑ましく感じていたのも束の間、\r\nペアレンタルコントロールの重要性と偉大さに気づく日がやってきた。\r\n\r\n子育ては十人十色。正解も失敗もないかもしれない。\r\nでもだからこそ一例として伝えたい。\r\n\r\nこうすればよかった、こうしてよかった。\r\n2歳3歳が夢中になるコンテンツとは。\r\n任天堂はすごい。\r\n子ども向けアプリを開発するならこうして欲しい、~~こうすれば儲かりそう~~。\r\n\r\n直接開発には関係ないけれど、これから子育てが控えているエンジニアの参考になれば…\r\nそんなエピソードをお届けします。",
            "accepted": false,
            "speaker": {
                "name": "monoqlo",
                "kana": "モノクロ",
                "twitter": "monoqlo",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3365f134-e5a1-43c7-a11c-7a0ba0594265.jpg"
            },
            "created": "2022-06-08T00:27:46+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "125050f1-737d-4a33-b7fe-3309315b8463",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/125050f1-737d-4a33-b7fe-3309315b8463",
            "title": "「記号と再帰」に触れる ―プログラミング言語に見る記号論と再帰性―",
            "abstract": "記号論 (記号学) という言葉を聞いたことはあるでしょうか。近代言語学の父と言われるソシュールにより基礎が築かれたとされ、彼は記号モデルについて二元論を唱道しています。これは「りんご」という言葉を考えたときに、実世界の“りんご”に「りんご」というラベルをつけているものであり、記号というのはラベルが対象の事物を指し示すことと言えます。記号論 (記号学) ではこれを足がかりとしその恣意性など記号に関する学問領域を指すものです。\r\n田中久美子氏の名著「記号と再帰」(2010)は、記号とプログラミング言語の対応を特に再帰について探求したものです。1例を挙げると、関数型プログラムの識別子とその内容は先の「りんご」と “りんご” にあたるというような具合です。\r\n本発表では5分で不動点関数と記号の再帰的定義を例にあげ、「記号と再帰」という本について興味をもってもらい、手にとってもらうことが目的です。",
            "accepted": false,
            "speaker": {
                "name": "たふみ",
                "kana": "タフミ",
                "twitter": "CreatorQsF",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/cf2c9ffa-3604-4da7-8fc6-c87cc82d2a61.jpg"
            },
            "created": "2022-06-08T03:58:44+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "64acd858-c6a7-416d-9136-182f067b4cc8",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/64acd858-c6a7-416d-9136-182f067b4cc8",
            "title": "GitHub Actionsでswift-formatを自動実行するための試行錯誤",
            "abstract": "みなさんはswift-format使っていますか？\r\n\r\nコードを書きながらリアルタイムでswift-formatでチェックするだけでなく、最後の砦としてGitHubにpushされたコードをswift-formatでチェック・整形してもらうのとても便利ですよね。\r\n\r\nこのLTでは、GitHub Actionsでswift-formatを自動実行するまでに行なった以下の試行錯誤を共有して、より良い方法などみなさまにも相談できればと思います。\r\n\r\n- GitHub Actionsでswift-formatを自動実行する設定\r\n- できるだけ速くswift-formatをスタートさせるには？\r\n- 自動で整形してpull requestを送る\r\n- 自動で整形できない場合はissueを立てる\r\n- より良い方法を探る",
            "accepted": false,
            "speaker": {
                "name": "所友太",
                "kana": "トコロユウタ",
                "twitter": "tokorom",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/2fe1b2fc-074e-4d91-853b-0dfd3895b9e1.jpg"
            },
            "created": "2022-06-08T06:36:15+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "4908901e-06c5-4e60-81aa-47fa092cbfb3",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/4908901e-06c5-4e60-81aa-47fa092cbfb3",
            "title": "SharePlay 5分でWrap Up!",
            "abstract": "SharePlayとはiOS 15で登場した、FaceTime通話中に離れた場所の友達とアプリのコンテンツを共有する機能です。\r\niOS 16ではこのSharePlayは付加機能というよりはiOSの基幹機能へと進化を遂げたという印象を持ちました。\r\n\r\nこのLTではSharePlay \/ Group Activitiesについて5分でまとめて紹介します。\r\nもちろん、iOS 16でのアップデート内容をメインに添えて！\r\n\r\n- SharePlayは3種ある？\r\n- SharePlayでここまでできます！\r\n- iOS 16でのアップデート内容！",
            "accepted": false,
            "speaker": {
                "name": "所友太",
                "kana": "トコロユウタ",
                "twitter": "tokorom",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/2fe1b2fc-074e-4d91-853b-0dfd3895b9e1.jpg"
            },
            "created": "2022-06-08T06:46:19+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "bcc2af92-4df9-4e4a-b465-0c9f93e04a60",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/bcc2af92-4df9-4e4a-b465-0c9f93e04a60",
            "title": "UIStackView逆引きレシピ",
            "abstract": "UIStackViewとても可愛いですよね！SwiftUI時代になれば使わなくなると思いますが、現状はまだまだUIStackViewを活用する機会は多くあると思います。\r\nこのLTでは、私が愛してやまないUIStackViewについて、こんなケースではUIStackViewでどう解決する？というのを逆引きレシピ形式で紹介できればと思います。\r\n\r\n- ある条件ではこのボタン消えてスペースを詰めいないといけない！トルツメ制御めんどうすぎ！\r\n- 画面を回転させたときにレイアウトが大きく変わっちゃう！助けて！\r\n- デザイナーさんから「ここは10、でもここは15」と細かくマージン指定されてる！どうしたらいい？",
            "accepted": true,
            "speaker": {
                "name": "所友太",
                "kana": "トコロユウタ",
                "twitter": "tokorom",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/2fe1b2fc-074e-4d91-853b-0dfd3895b9e1.jpg"
            },
            "created": "2022-06-08T06:59:14+09:00",
            "timetable": {
                "track": "Track A",
                "starts_at": "2022-09-11T16:20:00+09:00",
                "length_min": 5
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f2fac82c-19b7-4ad3-9362-96bbbbcb0466",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f2fac82c-19b7-4ad3-9362-96bbbbcb0466",
            "title": "Stencil を使って Swift の開発効率を上げる",
            "abstract": "Swift向けのコードテンプレートを作成できるStencilを知っていますか？\r\n実はSwiftGen, Kitura, Sourceryといった著名なOSSでも使用されている面白い言語です。\r\n\r\n用意されたコマンドを用いることで、OSSでは簡単にコードを生成することができますが、自分でカスタマイズすることも可能です。\r\nこのセッションでは、どのようにしてStencilを使っているのか紐解いていきます。\r\nまた、Xcode templateやSnippetといった既存の言語テンプレートとの比較も交えて、どのように使っていくのかをご紹介していきます。\r\n\r\n参考文献\r\nStencil: https:\/\/github.com\/stencilproject\/Stencil\r\nStencilSwiftKit: https:\/\/github.com\/SwiftGen\/StencilSwiftKit\r\n",
            "accepted": false,
            "speaker": {
                "name": "Hiromu Tsuruta",
                "kana": "ヒロム ツルタ",
                "twitter": "hcrane14",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/7f77375e-4ae8-44bd-aa84-e57f1d95d7b0.jpg"
            },
            "created": "2022-06-08T10:24:08+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "6344685c-cb22-4b04-bc3a-e2fbcd6a0a42",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/6344685c-cb22-4b04-bc3a-e2fbcd6a0a42",
            "title": "チーム開発のパフォーマンスを追求してエリートチームを目指す",
            "abstract": "ソフトウェア開発において、チームのパフォーマンス改善は皆さんが継続的に取り組んでいる課題の１つだと思います。\r\n\r\nチームのパフォーマンスを定量的に評価する代表的な指標として、GoogleのDORAという研究チームが確立したFour Keysがあり、これらの指標を使ってチームをそのパフォーマンスに応じてエリート、高、中、低に分類することができます。\r\n\r\niOSのチーム開発においても、デリバリーフローやオブザーバビリティを改善していくことでエリートチームを目指すことができます。\r\n\r\nこのトークでは、まずFour Keysとその定義を紹介し、計測方法について整理します。次に、iOSアプリ開発におけるボトルネックと、Four Keysに取り組む上での難しさについて解説します。また、私達のチームでの具体的な取り組みを紹介し、みなさんのプロジェクトでも明日からエリートチームを目指せるようにしたいと思います。",
            "accepted": false,
            "speaker": {
                "name": "nade",
                "kana": "ナデ",
                "twitter": "kazuma_nagano",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3f587a64-1564-4b37-8d68-f6c31767fbb3.jpg"
            },
            "created": "2022-06-08T11:02:11+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "c922031a-84b2-45de-9cac-3a05998978a9",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/c922031a-84b2-45de-9cac-3a05998978a9",
            "title": "AirPlayの裏舞台",
            "abstract": "みなさん、AirPlay使いこなしていますか？\r\nAirPlayはAppleのデバイスから映像や音楽をApple TVや対応スマートテレビ・スピーカーで再生できる機能です。発表当初から複雑な設定なしで直感的に使えるようにAppleらしい設計が行われ、ユーザーにその裏側で何が起きているのかを意識させることがほとんどないようにデザインされています。2018年にAirPlay 2が発表されて以降は対応デバイスも増え、またSiri連携や接続先デバイスの学習によりますます使いやすくなって来ました。\r\n本トークではAirPlayで可能になる体験やアプリへの組み込み方法、他のキャスト技術との比較といった内容の他、その仕組みの裏でどんな通信が行われているのか？まで踏み込んでお話しできればと思います。",
            "accepted": true,
            "speaker": {
                "name": "なめき　ちはる",
                "kana": "ナメキ　チハル",
                "twitter": "Ridwy",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/10226ee1-43d3-4af4-89d2-b99ffc61ff32.jpg"
            },
            "created": "2022-06-08T11:26:43+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-12T14:30:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "3714e384-a6ec-4201-a754-084a43f215d8",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/3714e384-a6ec-4201-a754-084a43f215d8",
            "title": "備えよう。HTTP\/3",
            "abstract": "WWDC21の発表にあったように、iOS15でURLSessionのHTTP\/3対応が実装されました。\r\nあれからもうすぐ1年経ちますが、2022年6月7日現在HTTP\/3対応はデベロッパオプションとして提供されている段階で、大半のiOSデバイスにおいて有効化されてはいません。\r\nしかし、通信のパフォーマンスとセキュリティがより重要になってきていることを考えると、全てのデバイスでHTTP\/3のサポートが有効になる日はそう遠くないかと思います。\r\n\r\nこのトークでは、「そもそもHTTP\/3って何？QUICとどう違うの？」「どういう状況でメリットがあるの？」などの疑問にお答えしつつ、運用しているサービスの大半のWebAPIを事前にHTTP\/3に対応させた事例から、HTTP\/3対応の際に考慮すべき事項や、対応リリース後のモニタリングの想定など、来るべき日に備えた準備の知見をお話しします。",
            "accepted": true,
            "speaker": {
                "name": "増住 啓吾",
                "kana": "マスズミ ケイゴ"
            },
            "created": "2022-06-08T11:28:29+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-12T10:15:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "dc2c42b6-4a03-4bef-9f0c-5908af3c6f74",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/dc2c42b6-4a03-4bef-9f0c-5908af3c6f74",
            "title": "Core NFCを使ってマイナンバーカードを読み取る",
            "abstract": "昨今やっとマイナンバーカードが普及してきており、マイナンバーカードを読み取って本人確認を行ったり、確定申告の電子申告を行ったりするサービスが増えてきました。\r\n今後も(政府が頑張れば)マイナンバーカードは色んな情報を取得するのに使われていくでしょう。\r\n\r\n今回では実際にマイナンバーカードの読み取りをプロダクトに組み込んだときの話を織り交ぜながら、マイナンバーカード読み取り機能の実装方法を紹介していきます。\r\n\r\n[Target]\r\n・今後マイナンバーカード読み取り機能を開発予定の方\r\n・マイナンバーカードの読み取り方法について興味がある方\r\n・マイナンバーカード読み取り機能をプロダクトに入れたときの苦労話を聞きたい方\r\n\r\n[Goal]\r\n・マイナンバーカード読み取り機能を実装する際に障壁無く実装出来るようになっている\r\n・マイナンバーカード読み取りをプロダクトに導入するには何が必要なのか知っている状態",
            "accepted": false,
            "speaker": {
                "name": "ShoMasegi",
                "kana": "ショウマセギ",
                "twitter": "boc_sho",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/02742f03-db89-4f56-b367-7019f1f7d917.jpg"
            },
            "created": "2022-06-08T12:12:22+09:00",
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "b225087a-6dac-4d81-9f3f-e09c431e5157",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/b225087a-6dac-4d81-9f3f-e09c431e5157",
            "title": "デザインシステム",
            "abstract": "Wantedly では、「デザインの生産性を向上させ、デザイナ - エンジニア 間コミュニケーションを改善することで、ユーザに価値を届ける速度を向上させる」ことを目的として UI デザインシステムを作っています。\r\n\r\n今回は現場で運用されているデザインシステムと iOS 実装の成功と失敗について以下の内容を話します。\r\n\r\n- Wantedly の UI デザインシステムとはなにか\r\n- コンポーネントリストではなく「共通の考え方とツール&アセット」\r\n- Figma 実装から考える iOS 実装のインターフェース設計\r\n- チームへの普及の成功と失敗",
            "accepted": true,
            "speaker": {
                "name": "かしはら",
                "kana": "カシハラ",
                "twitter": "kashihararara",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/f4bfa6a1-ec6f-4ae6-a2e4-97f919289f76.jpg"
            },
            "created": "2022-06-27T18:26:42+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-12T12:00:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "41079124-aab4-40a9-b8ee-efdac7ca4e72",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/41079124-aab4-40a9-b8ee-efdac7ca4e72",
            "title": "SwiftUIのハマりどころとその回避策",
            "abstract": "AirインボイスのiOS開発チームは、AirインボイスiOSアプリをSwiftUIで開発しています。\r\n\r\nWWDC2022でiOS16が発表され、iOS14以上をサポートとすることができるアプリが増えたことで、本格的にSwiftUIの導入を検討している方も多いと思います。しかし、最新のOSのみをサポートするのではなく、iOS14系や15系もサポートするとなると、そこには数多くのハマりどころが存在します。また、要件によってはSwiftUIでの実現に工夫が必要なポイントも数多く存在します。\r\n\r\n本トークでは、iOS14以上を対象としたAirインボイスiOSアプリにおいてSwiftUIを用いてさまざまな要件を実現するにあたり、はまったポイントやそれらをどのように回避したかを共有します。",
            "accepted": true,
            "speaker": {
                "name": "大塚 悠貴",
                "kana": "オオツカ ユウキ",
                "twitter": "moguaiyuki",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/c45de89f-3010-4944-a6ee-f0ed321b34c5.jpg"
            },
            "created": "2022-06-29T10:56:57+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-11T16:50:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "7b64d992-d6b2-4eda-a741-3c79aa1b3915",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/7b64d992-d6b2-4eda-a741-3c79aa1b3915",
            "title": "実例で学ぶ GraphQL Persisted Query",
            "abstract": "スタディサプリ中学講座のクライアント・サーバ間はGraphQLを用いた通信を行っています。\r\nこちらのセッションでは、GraphQLの機能の一つであるPersisted Queryについてお話しします。\r\nPersisted Queryの主な利点としてはQueryのリクエストサイズを減らすことが挙げられますが、その利点に加えて、GraphQLを安全に運用するための取り組みや困りごとなど、私たちのチームの実例を交えてPersisted Queryの魅力についてお話ししたいと思います。\r\n\r\nGraphQLも誕生から10年が経過し、iOSでも導入されているプロダクトも増えているのでは無いかと思います。\r\n既にGraphQLを用いたプロダクトを運用されている方はもちろん、いざGraphQLを利用することになった時にも少しでも馴染みあるものになれば幸いです。\r\n",
            "accepted": true,
            "speaker": {
                "name": "motoshima1150",
                "kana": "モトシマイチイチゴーゼロ"
            },
            "created": "2022-06-30T10:44:03+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-11T16:50:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "dec7a723-0bfc-402f-a28a-c60b93d514da",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/dec7a723-0bfc-402f-a28a-c60b93d514da",
            "title": "レガシーなプロダクトからドメイン層を再設計する",
            "abstract": "タウンワークiOSアプリは、10年以上開発が続いています。度重なる機能追加や仕様変更によって、プロダクトは徐々に複雑に、レガシーになっていきました。そのため、Clean Architectureの導入によるレガシーからの脱却を図りました。\r\n\r\nClean Architectureに則りドメイン層を分離してみましたが、いくつか不明な点があり、技術顧問の和田卓人氏に相談したところ、そもそも我々のモデリングにたくさんの改善点があることがわかりました。\r\n\r\nそこから、チームの中で既存コードからドメインモデルを発掘し、再設計する旅が始まりました。\r\n\r\nこのセッションでは、ドメイン層が何をするかよくわからない、設計に困っている人に向けて、アプリにとってのドメインとは何か、どのように見つけ出し設計すればよいか、そして評価の方法について私たちの経験を交えてお話します。",
            "accepted": true,
            "speaker": {
                "name": "川辺 裕太、石井 潤",
                "kana": "カワベ ユウタ、イシイ ジュン"
            },
            "created": "2022-07-04T11:01:24+09:00",
            "timetable": {
                "track": "Track E",
                "starts_at": "2022-09-11T16:50:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "f5526982-6ec8-4214-8236-c95d9523d529",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/f5526982-6ec8-4214-8236-c95d9523d529",
            "title": "Kotlin Multiplatform Mobile でiOSとAndroidの実装差異を無くす",
            "abstract": "iOSアプリと一緒に、Androidアプリを作成することはよくあります。\r\n2つのアプリを同時に開発すると問題がよく起きます。「iOSとAndroidで動きが違う」と。\r\n実装するエンジニアの認識のズレ、言語仕様の違い、例えどれだけ念入りにやったとしてもこの問題はいつか必ず発生することでしょう。\r\n\r\nそのような問題をKMM(Kotlin Multiplatform Mobile)を用いて解決します。\r\nアプリのビジネスロジックをコードレベルから共通化し、OS間での差異が起こらないような開発ができる上に、ビジネスロジック部分の記述はKMM一つで済むようになります。\r\n\r\nこのセッションでは、基本的なKMMの概念の説明から、実際にiOSのプロジェクトへのKMM導入し動作させるまでを、弊社での取り組みを交えて解説いたします。",
            "accepted": true,
            "speaker": {
                "name": "新田 陸",
                "kana": "ニッタ リク",
                "twitter": "hal8563",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/b99d8e5e-66b3-4d52-a64f-cf7b484762e9.png"
            },
            "created": "2022-07-04T21:22:17+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-11T12:00:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "56a5bec9-6dcd-4a8e-9e33-312078af3acd",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/56a5bec9-6dcd-4a8e-9e33-312078af3acd",
            "title": "「家族アルバム みてね」を支えるiOSビルド環境の改善",
            "abstract": "iOSのビルド環境はXcodeやSwift Package Managerのアップデート、新しいMacの登場などによって毎年変化を遂げています。\r\nサービス提供を開始した2015年から現在に至るまで、これらの変化に合わせて継続的にビルド環境の改善が行われてきました。\r\n本セッションでは2021年以降に実施したビルド環境の改善についてご紹介し、今後の目指す姿についてお話いたします。\r\n\r\n* Swift Package Managerの活用とライブラリ整理\r\n* Apple Silicon対応\r\n* マルチモジュール化\r\n* ビルド時間改善",
            "accepted": true,
            "speaker": {
                "name": "佐藤 光",
                "kana": "サトウ ヒカル",
                "twitter": "hicka04",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/be443e32-b048-4736-8fb8-d4c3a829ab10.jpg"
            },
            "created": "2022-07-11T22:25:17+09:00",
            "timetable": {
                "track": "Track E",
                "starts_at": "2022-09-12T12:00:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "ac7d5226-f64b-42ff-8d08-b8960d4021ca",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/ac7d5226-f64b-42ff-8d08-b8960d4021ca",
            "title": "LINE iOSのビルド環境の変遷",
            "abstract": "LINE iOSは、200万行を超えるソースコードと200以上のモジュールで構成されている大規模なプロジェクトであるため、そのビルド時間も長くなりがちです。\r\n\r\n私達はビルド時間の改善の一環として、Bazelを取り入れました。その結果、ビルド速度が2倍になるというメリットを享受しましたが、メンテナンスコストが増大するというデメリットにも直面しました。\r\n\r\nこのセッションでは2年間Bazelを使い続けて分かったBazelの長所やリスク、運用時の注意点、そしてLINE iOSのビルド環境の現状と今後についてご紹介します。",
            "accepted": true,
            "speaker": {
                "name": "Giuk Jung",
                "kana": "ギウク ジョン "
            },
            "created": "2022-07-12T18:52:56+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-12T12:00:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "0dff3a16-52ee-43fc-882d-c45b96e43df3",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/0dff3a16-52ee-43fc-882d-c45b96e43df3",
            "title": "React NativeからNativeアプリへ ~スタートアップ企業における「機能開発と保守性担保」の両立への挑戦~",
            "abstract": "ビットキーは「テクノロジーの力であらゆるものを安全で、便利で、気持ちよく繋げる」をミッションに掲げるスタートアップ企業です。\r\n自社プラットフォームからハードウェア、ソフトウェアまで開発している弊社ですが、\r\n本セッションではReact Native製iOSアプリworkhubを取り上げます。\r\n\r\nworkhubは\"働く空間において人と仕事の間のあらゆるものを繋げ、新しい働き方に即した体験を提供する\"アプリです。\r\nスタートアップにおいて求められる\"機能開発のスピード感\"と、決して無視できない\"保守性の担保\"をいかに両立するか？をテーマに、\r\n1年半の間取り組んだNative化をご紹介します。\r\n\r\n・スタートアップにおけるソフトウェア開発に求められるもの\r\n・なぜReact NativeアプリをNative化するに至ったか\r\n・Native化の方法論\r\n・Native化により得られたもの \/ 難しかった点",
            "accepted": true,
            "speaker": {
                "name": "ShogoSaito",
                "kana": "サイトウショウゴ",
                "twitter": "GoS_67",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/c016577a-3bbb-4ac0-bb02-f6aa7a48966d.png"
            },
            "created": "2022-07-14T12:16:57+09:00",
            "timetable": {
                "track": "Track E",
                "starts_at": "2022-09-11T12:00:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "42f8c563-8ca4-43a5-b9da-70cdc57258ea",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/42f8c563-8ca4-43a5-b9da-70cdc57258ea",
            "title": "「問題はソースコードではない！?」長生きするアプリの「品質低下」の謎",
            "abstract": "アプリを一から作り直したことはありますか？\r\n\r\nソースコードがごちゃごちゃで可読性が低かったり、\r\n修正が難しいバグが多かったりして「一旦作り直し」と\r\n判断されたこともあるかもれません。\r\n\r\n作り直したものも最初はピカピカだったが、時間と共に\r\n汚くなり、またバグの多いごちゃごちゃした\r\nソースコードになり、開発が難しい状態に戻ってしまいます。\r\n\r\nそしてまた、作り直すか、大規模なリファクタをするか、\r\n我慢してごちゃごちゃなまま開発を継続するかの選択が\r\n迫られます。\r\n\r\nどの選択も非常にコストがかかります。\r\n\r\nどうしてこういうことが起きるのでしょうか？\r\n\r\n今回は\r\n- なぜ多くのアプリは長生きするとごちゃごちゃになるのか\r\n- なぜ作り直しても同じ問題が再発するのか\r\n- これらの問題を避けることができるのか\r\nについて話したいと思います。\r\n\r\nヒント: 問題はソースコード以外のところにあるかもしれません！",
            "accepted": true,
            "speaker": {
                "name": "アンドレカンドレ",
                "kana": "アンドレカンドレ",
                "twitter": "andrekandore",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/9822f483-1c1f-432c-9085-bd63b0a41dcc.jpeg"
            },
            "created": "2022-07-14T12:29:46+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-10T19:20:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "89a78415-92b6-47b6-9482-5b2d1eebcc95",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/89a78415-92b6-47b6-9482-5b2d1eebcc95",
            "title": "新卒は見た！ゆめみの実態！",
            "abstract": "他社だと「マジかよ！？」と驚くような制度や仕組みがゆめみにはたくさん存在します。有給取り放題や給与自己決定なども、ゆめみを代表する制度の一部です。\r\n「その制度って対外的なパフォーマンスでは？」と思う方もいるでしょう。私もゆめみに入社する前はそう思っていました。\r\n入社してわかった「ゆめみ事情」について、新卒の観点からお話しします！\r\n聞いてくださる方には、ゆめみについてもっと知っていただければ幸いです。",
            "accepted": true,
            "speaker": {
                "name": "くどかい",
                "kana": "クドカイ",
                "twitter": "kudokai00",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/ec789251-b6ed-41be-a873-4ebe253af130.jpg"
            },
            "created": "2022-07-14T19:16:11+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-12T16:50:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "e9b641fa-33be-43c9-829e-44a69a595fd2",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/e9b641fa-33be-43c9-829e-44a69a595fd2",
            "title": "メタバースを支えるエンジニアの生態について",
            "abstract": "iOSDCに参加のエンジニアのみなさん、メタバースの開発は Unity や Unreal Engine を駆使するような 3DCG エンジニアの担当領域だと思って敬遠していませんか? 私達クラスター株式会社のカジュアル面談でも、よく聞かれる質問の一つは iOS\/Andoird\/Web\/etc… エンジニアでも活躍する場所が有りますか? というものです。実際は iOS\/Andoird\/Webエンジニアが多数在籍していますし、更には音響技術が得意なエンジニアから機械学習の研究者まで様々な人材が所属しています。また、その出身となった業界もゲームメーカーやWeb系開発会社、金融機関などなど様々です。本公演では、どんなエンジニアがどんな得意分野をもってクラスターに参画してきたかをご紹介するとともに、もう一つのよくある質問である、どんな開発フローで業務を進めているのかについてをお話しします。",
            "accepted": true,
            "speaker": {
                "name": "倉井 龍太郎",
                "kana": "クライ リュウタロウ",
                "twitter": "kurain",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/c972770d-1dcc-4d86-9d0e-f83be22bd19e.png"
            },
            "created": "2022-07-15T15:04:01+09:00",
            "timetable": {
                "track": "Track E",
                "starts_at": "2022-09-10T19:20:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "db912d81-3d13-46bd-81e1-8ae6dcc9e7b6",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/db912d81-3d13-46bd-81e1-8ae6dcc9e7b6",
            "title": "iOSライブラリをセルフサービスで生成する仕組み",
            "abstract": "弊社では様々な自動化の仕組みに取り組んでいますが、その中でiOS\/Androidのライブラリ、特にAPIクライアントについて、セルフサービスで生成する仕組みについて話したいと思います。\r\n\r\nほぼ全てのアプリで欠かせないのがRESTを主としたAPIサーバーと対話するネットワーキングの実装だと思いますが、APIごとに毎回同じような開発をするのは非効率的です。そこで目をつけたのがOpenAPIでした。\r\n\r\nOpenAPIとはAPI設計を行う仕様のことですが、このトークでは、OpenAPIを元にしたコード自動生成からデプロイまでを開発者が1行もコードを書かずに生成できるようにした過程を紹介します。\r\nまた、中〜大規模チームでのOpenAPI導入の背景やメリットに触れると共に、開発者の要望に応じて、生成されるコードをどうカスタマイズしたかなどもお話ししようと思います。",
            "accepted": true,
            "speaker": {
                "name": "Yusuke Ohashi",
                "kana": "オオハシ ユウスケ",
                "twitter": "junkpiano",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/3bd1eba2-0bf3-4e84-964e-6abb4c301f95.jpg"
            },
            "created": "2022-07-15T17:31:49+09:00",
            "timetable": {
                "track": "Track C",
                "starts_at": "2022-09-11T12:00:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "4fcfd131-2313-46dd-bd1b-f1a917148c46",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/4fcfd131-2313-46dd-bd1b-f1a917148c46",
            "title": "2022年の新規アプリ開発で採用した技術",
            "abstract": "メドピア株式会社では、2022年2月にアプリ slis[スリス] をリリースしました。0からの新規開発ということで既存関連の制約などはなく、Swift Package Manager、Swift Concurrency、Xcode Cloud など新しいものを取り入れて開発しています。\r\nこのセッションではこれら採用した技術を中心に今回の新規開発について紹介します。",
            "accepted": true,
            "speaker": {
                "name": "新井 美香",
                "kana": "アライ ミカ",
                "twitter": "satsukiasa",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/b5613d13-ea5f-4b7c-ac9a-232e0fc9d86d.jpg"
            },
            "created": "2022-07-15T17:59:29+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-10T19:20:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        },
        {
            "uuid": "36ab570c-830c-4745-8eb6-bfb7fb9a50d1",
            "url": "https:\/\/fortee.jp\/iosdc-japan-2022\/proposal\/36ab570c-830c-4745-8eb6-bfb7fb9a50d1",
            "title": "音声プラットフォーム「Voicy」のiOS開発について",
            "abstract": "日本最大級の音声プラットフォームを運営するVoicyでは、リスナー向けアプリの「Voicy」とパーソナリティ向けアプリの「VoicyStudio」の2種類のアプリがあり、日々開発を進めています。\r\nさまざまな改善を重ねつつ、生放送、アプリ内課金などの新規機能をリリースしてきました。\r\n本セッションでは、改善を重ねつつ新規機能をリリースしている2つのアプリを開発しているVoicyの開発体制、プロセスについてご紹介します。",
            "accepted": true,
            "speaker": {
                "name": "立花和也",
                "kana": "タチバナカズヤ",
                "twitter": "kzytcbn315",
                "avatar_url": "https:\/\/fortee.jp\/files\/iosdc-japan-2022\/speaker\/cd8d6aad-9aa5-4694-b38f-f9f693f5ae7b.jpg"
            },
            "created": "2022-07-15T20:23:28+09:00",
            "timetable": {
                "track": "Track D",
                "starts_at": "2022-09-12T16:50:00+09:00",
                "length_min": 20
            },
            "feedback": {
                "open": false
            }
        }
    ]
}